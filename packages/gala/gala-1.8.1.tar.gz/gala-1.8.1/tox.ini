# TODO: compare to The Joker tests. Remove "test" from names and call explicit job names...

[tox]
envlist =
    py{38,39,310}-test{,-extradeps,-devdeps,-oldestdeps}{,-cov}
    codestyle
    nogsl

requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true
indexserver =
    NIGHTLY = https://pypi.anaconda.org/scipy-wheels-nightly/simple

[testenv]

# Pass through the following environment variables which may be needed for the CI
passenv = HOME, WINDIR, LC_ALL, LC_CTYPE, CC, CI

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    extradeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    oldestdeps: with the oldest supported version of key dependencies

# The following provides some specific pinnings for key packages
deps =
    # The oldestdeps factor is intended to be used to install the oldest
    # versions of all dependencies that have a minimum version.
    oldestdeps: numpy==1.20.*
    oldestdeps: matplotlib==3.4.*
    oldestdeps: scipy==1.7.*
    oldestdeps: astropy==5.0.*

    devdeps: :NIGHTLY:numpy
    devdeps: git+https://github.com/astropy/astropy.git#egg=astropy

extras =
    test
    extradeps: extra

commands =
    pip freeze
    !cov: pytest -v --pyargs gala {toxinidir}/docs {posargs}
    cov: pytest --pyargs gala {toxinidir}/docs --cov gala --cov-config={toxinidir}/pyproject.toml {posargs} --cov-report=xml:{toxinidir}/coverage.xml --durations=16

# Runs pip install -e . instead of building an sdist and installing
usedevelop = False

[testenv:local_test]
changedir = .tmp/{envname}
description = Run the tests locally (not on CI) - requires conda and tox-conda
extras = test
conda_deps =
    gsl
commands =
    pip freeze
    pytest -v --pyargs gala {toxinidir}/docs

[testenv:nogsl]
description = Install gala without GSL and run tests
setenv =
    GALA_NOGSL = 1

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style with flake8
deps = flake8
commands = flake8 gala --count
