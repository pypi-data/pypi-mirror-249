/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
export const id = "src_components_ha-hls-player_ts";
export const ids = ["src_components_ha-hls-player_ts"];
export const modules = {

/***/ "./src/components/ha-hls-player.ts":
/*!*****************************************!*\
  !*** ./src/components/ha-hls-player.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_decorate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/decorate */ \"./node_modules/@babel/runtime/helpers/esm/decorate.js\");\n/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lit/decorators */ \"./node_modules/lit/decorators.js\");\n/* harmony import */ var _common_dom_fire_event__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/dom/fire_event */ \"./src/common/dom/fire_event.ts\");\n/* harmony import */ var _common_util_render_status__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/util/render-status */ \"./src/common/util/render-status.ts\");\n/* harmony import */ var _ha_alert__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ha-alert */ \"./src/components/ha-alert.ts\");\n\n\n\n\n\n\n\n\nlet HaHLSPlayer = (0,_babel_runtime_helpers_decorate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.customElement)(\"ha-hls-player\")], function (_initialize, _LitElement) {\n  class HaHLSPlayer extends _LitElement {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HaHLSPlayer,\n    d: [{\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.property)({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.property)()],\n      key: \"url\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.property)()],\n      key: \"posterUrl\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.property)({\n        type: Boolean,\n        attribute: \"controls\"\n      })],\n      key: \"controls\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.property)({\n        type: Boolean,\n        attribute: \"muted\"\n      })],\n      key: \"muted\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.property)({\n        type: Boolean,\n        attribute: \"autoplay\"\n      })],\n      key: \"autoPlay\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.property)({\n        type: Boolean,\n        attribute: \"playsinline\"\n      })],\n      key: \"playsInline\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.property)({\n        type: Boolean,\n        attribute: \"allow-exoplayer\"\n      })],\n      key: \"allowExoPlayer\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.query)(\"video\")],\n      key: \"_videoEl\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.state)()],\n      key: \"_error\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_4__.state)()],\n      key: \"_errorIsFatal\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_hlsPolyfillInstance\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"_exoPlayer\",\n      value() {\n        return false;\n      }\n    }, {\n      kind: \"field\",\n      static: true,\n      key: \"streamCount\",\n      value() {\n        return 0;\n      }\n    }, {\n      kind: \"method\",\n      key: \"connectedCallback\",\n      value:\n      // don't cache this, as we remove it on disconnects\n\n      function connectedCallback() {\n        (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(HaHLSPlayer.prototype), \"connectedCallback\", this).call(this);\n        HaHLSPlayer.streamCount += 1;\n        if (this.hasUpdated) {\n          this._resetError();\n          this._startHls();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(HaHLSPlayer.prototype), \"disconnectedCallback\", this).call(this);\n        HaHLSPlayer.streamCount -= 1;\n        this._cleanUp();\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_3__.html)`\n      ${this._error ? (0,lit__WEBPACK_IMPORTED_MODULE_3__.html)`<ha-alert\n            alert-type=\"error\"\n            class=${this._errorIsFatal ? \"fatal\" : \"retry\"}\n          >\n            ${this._error}\n          </ha-alert>` : \"\"}\n      ${!this._errorIsFatal ? (0,lit__WEBPACK_IMPORTED_MODULE_3__.html)`<video\n            .poster=${this.posterUrl}\n            ?autoplay=${this.autoPlay}\n            .muted=${this.muted}\n            ?playsinline=${this.playsInline}\n            ?controls=${this.controls}\n            @loadeddata=${this._loadedData}\n          ></video>` : \"\"}\n    `;\n      }\n    }, {\n      kind: \"method\",\n      key: \"updated\",\n      value: function updated(changedProps) {\n        (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(HaHLSPlayer.prototype), \"updated\", this).call(this, changedProps);\n        const urlChanged = changedProps.has(\"url\");\n        if (!urlChanged) {\n          return;\n        }\n        this._cleanUp();\n        this._resetError();\n        this._startHls();\n      }\n    }, {\n      kind: \"method\",\n      key: \"_startHls\",\n      value: async function _startHls() {\n        var _this$hass$auth$exter;\n        const masterPlaylistPromise = fetch(this.url);\n        const Hls = (await __webpack_require__.e(/*! import() */ \"vendors-node_modules_hls_js_dist_hls_light_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! hls.js/dist/hls.light.mjs */ \"./node_modules/hls.js/dist/hls.light.mjs\"))).default;\n        if (!this.isConnected) {\n          return;\n        }\n        let hlsSupported = Hls.isSupported();\n        if (!hlsSupported) {\n          hlsSupported = this._videoEl.canPlayType(\"application/vnd.apple.mpegurl\") !== \"\";\n        }\n        if (!hlsSupported) {\n          this._setFatalError(this.hass.localize(\"ui.components.media-browser.video_not_supported\"));\n          return;\n        }\n        const useExoPlayer = this.allowExoPlayer && ((_this$hass$auth$exter = this.hass.auth.external) === null || _this$hass$auth$exter === void 0 ? void 0 : _this$hass$auth$exter.config.hasExoPlayer);\n        const masterPlaylist = await (await masterPlaylistPromise).text();\n        if (!this.isConnected) {\n          return;\n        }\n\n        // Parse playlist assuming it is a master playlist. Match group 1 is whether hevc, match group 2 is regular playlist url\n        // See https://tools.ietf.org/html/rfc8216 for HLS spec details\n        const playlistRegexp = /#EXT-X-STREAM-INF:.*?(?:CODECS=\".*?(hev1|hvc1)?\\..*?\".*?)?(?:\\n|\\r\\n)(.+)/g;\n        const match = playlistRegexp.exec(masterPlaylist);\n        const matchTwice = playlistRegexp.exec(masterPlaylist);\n\n        // Get the regular playlist url from the input (master) playlist, falling back to the input playlist if necessary\n        // This avoids the player having to load and parse the master playlist again before loading the regular playlist\n        let playlist_url;\n        if (match !== null && matchTwice === null) {\n          // Only send the regular playlist url if we match exactly once\n          playlist_url = new URL(match[2], this.url).href;\n        } else {\n          playlist_url = this.url;\n        }\n\n        // If codec is HEVC and ExoPlayer is supported, use ExoPlayer.\n        if (useExoPlayer && match !== null && match[1] !== undefined) {\n          this._renderHLSExoPlayer(playlist_url);\n        } else if (Hls.isSupported()) {\n          this._renderHLSPolyfill(this._videoEl, Hls, playlist_url);\n        } else {\n          this._renderHLSNative(this._videoEl, playlist_url);\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderHLSExoPlayer\",\n      value: async function _renderHLSExoPlayer(url) {\n        this._exoPlayer = true;\n        window.addEventListener(\"resize\", this._resizeExoPlayer);\n        this.updateComplete.then(() => (0,_common_util_render_status__WEBPACK_IMPORTED_MODULE_6__.nextRender)()).then(this._resizeExoPlayer);\n        this._videoEl.style.visibility = \"hidden\";\n        await this.hass.auth.external.fireMessage({\n          type: \"exoplayer/play_hls\",\n          payload: {\n            url: new URL(url, window.location.href).toString(),\n            muted: this.muted\n          }\n        });\n      }\n    }, {\n      kind: \"field\",\n      key: \"_resizeExoPlayer\",\n      value() {\n        return () => {\n          if (!this._videoEl) {\n            return;\n          }\n          const rect = this._videoEl.getBoundingClientRect();\n          this.hass.auth.external.fireMessage({\n            type: \"exoplayer/resize\",\n            payload: {\n              left: rect.left,\n              top: rect.top,\n              right: rect.right,\n              bottom: rect.bottom\n            }\n          });\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_isLLHLSSupported\",\n      value: function _isLLHLSSupported() {\n        // LL-HLS keeps multiple requests in flight, which can run into browser limitations without\n        // an http/2 proxy to pipeline requests. However, a small number of streams active at\n        // once should be OK.\n        // The stream count may be incremented multiple times before this function is called to check\n        // the count e.g. when loading a page with many streams on it. The race can work in our favor\n        // so we now have a better idea on if we'll use too many browser connections later.\n        if (HaHLSPlayer.streamCount <= 2) {\n          return true;\n        }\n        if (!(\"performance\" in window) || performance.getEntriesByType(\"resource\").length === 0) {\n          return false;\n        }\n        const perfEntry = performance.getEntriesByType(\"resource\")[0];\n        return \"nextHopProtocol\" in perfEntry && perfEntry.nextHopProtocol === \"h2\";\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderHLSPolyfill\",\n      value: async function _renderHLSPolyfill(videoEl, Hls, url) {\n        const hls = new Hls({\n          backBufferLength: 60,\n          fragLoadingTimeOut: 30000,\n          manifestLoadingTimeOut: 30000,\n          levelLoadingTimeOut: 30000,\n          maxLiveSyncPlaybackRate: 2,\n          lowLatencyMode: this._isLLHLSSupported()\n        });\n        this._hlsPolyfillInstance = hls;\n        hls.attachMedia(videoEl);\n        hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n          this._resetError();\n          hls.loadSource(url);\n        });\n        hls.on(Hls.Events.FRAG_LOADED, (_event, _data) => {\n          this._resetError();\n        });\n        hls.on(Hls.Events.ERROR, (_event, data) => {\n          // Some errors are recovered automatically by the hls player itself, and the others handled\n          // in this function require special actions to recover. Errors retried in this function\n          // are done with backoff to not cause unecessary failures.\n          if (!data.fatal) {\n            return;\n          }\n          if (data.type === Hls.ErrorTypes.NETWORK_ERROR) {\n            switch (data.details) {\n              case Hls.ErrorDetails.MANIFEST_LOAD_ERROR:\n                {\n                  let error = \"Error starting stream, see logs for details\";\n                  if (data.response !== undefined && data.response.code !== undefined) {\n                    if (data.response.code >= 500) {\n                      error += \" (Server failure)\";\n                    } else if (data.response.code >= 400) {\n                      error += \" (Stream never started)\";\n                    } else {\n                      error += \" (\" + data.response.code + \")\";\n                    }\n                  }\n                  this._setRetryableError(error);\n                  break;\n                }\n              case Hls.ErrorDetails.MANIFEST_LOAD_TIMEOUT:\n                this._setRetryableError(\"Timeout while starting stream\");\n                break;\n              default:\n                this._setRetryableError(\"Stream network error\");\n                break;\n            }\n            hls.startLoad();\n          } else if (data.type === Hls.ErrorTypes.MEDIA_ERROR) {\n            this._setRetryableError(\"Error with media stream contents\");\n            hls.recoverMediaError();\n          } else {\n            this._setFatalError(\"Error playing stream\");\n          }\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_renderHLSNative\",\n      value: async function _renderHLSNative(videoEl, url) {\n        videoEl.src = url;\n        videoEl.addEventListener(\"loadedmetadata\", () => {\n          videoEl.play();\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_cleanUp\",\n      value: function _cleanUp() {\n        if (this._hlsPolyfillInstance) {\n          this._hlsPolyfillInstance.destroy();\n          this._hlsPolyfillInstance = undefined;\n        }\n        if (this._exoPlayer) {\n          window.removeEventListener(\"resize\", this._resizeExoPlayer);\n          this.hass.auth.external.fireMessage({\n            type: \"exoplayer/stop\"\n          });\n          this._exoPlayer = false;\n        }\n        if (this._videoEl) {\n          this._videoEl.removeAttribute(\"src\");\n          this._videoEl.load();\n        }\n      }\n    }, {\n      kind: \"method\",\n      key: \"_resetError\",\n      value: function _resetError() {\n        this._error = undefined;\n        this._errorIsFatal = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setFatalError\",\n      value: function _setFatalError(errorMessage) {\n        this._error = errorMessage;\n        this._errorIsFatal = true;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_setRetryableError\",\n      value: function _setRetryableError(errorMessage) {\n        this._error = errorMessage;\n        this._errorIsFatal = false;\n      }\n    }, {\n      kind: \"method\",\n      key: \"_loadedData\",\n      value: function _loadedData() {\n        // @ts-ignore\n        (0,_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_5__.fireEvent)(this, \"load\");\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_3__.css)`\n      :host,\n      video {\n        display: block;\n      }\n\n      video {\n        width: 100%;\n        max-height: var(--video-max-height, calc(100vh - 97px));\n      }\n\n      .fatal {\n        display: block;\n        padding: 100px 16px;\n      }\n\n      .retry {\n        display: block;\n      }\n    `;\n      }\n    }]\n  };\n}, lit__WEBPACK_IMPORTED_MODULE_3__.LitElement);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ha-hls-player.ts\n");

/***/ })

};
