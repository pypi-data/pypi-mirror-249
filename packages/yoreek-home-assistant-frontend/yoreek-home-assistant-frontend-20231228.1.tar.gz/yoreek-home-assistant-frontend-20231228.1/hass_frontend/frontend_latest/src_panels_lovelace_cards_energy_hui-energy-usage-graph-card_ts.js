/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
export const id = "src_panels_lovelace_cards_energy_hui-energy-usage-graph-card_ts";
export const ids = ["src_panels_lovelace_cards_energy_hui-energy-usage-graph-card_ts"];
export const modules = {

/***/ "./src/mixins/subscribe-mixin.ts":
/*!***************************************!*\
  !*** ./src/mixins/subscribe-mixin.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SubscribeMixin: () => (/* binding */ SubscribeMixin)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_decorate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/decorate */ \"./node_modules/@babel/runtime/helpers/esm/decorate.js\");\n/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var lit_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit/decorators */ \"./node_modules/lit/decorators.js\");\n\n\n\n\nconst SubscribeMixin = superClass => {\n  let SubscribeClass = (0,_babel_runtime_helpers_decorate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(null, function (_initialize, _superClass) {\n    class SubscribeClass extends _superClass {\n      constructor(...args) {\n        super(...args);\n        _initialize(this);\n      }\n    }\n    return {\n      F: SubscribeClass,\n      d: [{\n        kind: \"field\",\n        decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_3__.property)({\n          attribute: false\n        })],\n        key: \"hass\",\n        value: void 0\n      }, {\n        kind: \"field\",\n        key: \"hassSubscribeRequiredHostProps\",\n        value: void 0\n      }, {\n        kind: \"field\",\n        key: \"__unsubs\",\n        value: void 0\n      }, {\n        kind: \"method\",\n        key: \"connectedCallback\",\n        value:\n        // we wait with subscribing till these properties are set on the host element\n\n        function connectedCallback() {\n          (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(SubscribeClass.prototype), \"connectedCallback\", this).call(this);\n          this.__checkSubscribed();\n        }\n      }, {\n        kind: \"method\",\n        key: \"disconnectedCallback\",\n        value: function disconnectedCallback() {\n          (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(SubscribeClass.prototype), \"disconnectedCallback\", this).call(this);\n          if (this.__unsubs) {\n            while (this.__unsubs.length) {\n              const unsub = this.__unsubs.pop();\n              if (unsub instanceof Promise) {\n                unsub.then(unsubFunc => unsubFunc());\n              } else {\n                unsub();\n              }\n            }\n            this.__unsubs = undefined;\n          }\n        }\n      }, {\n        kind: \"method\",\n        key: \"updated\",\n        value: function updated(changedProps) {\n          (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(SubscribeClass.prototype), \"updated\", this).call(this, changedProps);\n          if (changedProps.has(\"hass\")) {\n            this.__checkSubscribed();\n            return;\n          }\n          if (!this.hassSubscribeRequiredHostProps) {\n            return;\n          }\n          for (const key of changedProps.keys()) {\n            if (this.hassSubscribeRequiredHostProps.includes(key)) {\n              this.__checkSubscribed();\n              return;\n            }\n          }\n        }\n      }, {\n        kind: \"method\",\n        key: \"hassSubscribe\",\n        value: function hassSubscribe() {\n          return [];\n        }\n      }, {\n        kind: \"method\",\n        key: \"__checkSubscribed\",\n        value: function __checkSubscribed() {\n          var _this$hassSubscribeRe;\n          if (this.__unsubs !== undefined || !this.isConnected || this.hass === undefined || (_this$hassSubscribeRe = this.hassSubscribeRequiredHostProps) !== null && _this$hassSubscribeRe !== void 0 && _this$hassSubscribeRe.some(prop => this[prop] === undefined)) {\n            return;\n          }\n          this.__unsubs = this.hassSubscribe();\n        }\n      }]\n    };\n  }, superClass);\n  return SubscribeClass;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL3N1YnNjcmliZS1taXhpbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUVBO0FBT0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFnRUE7QUFBQTtBQUFBO0FBaEVBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUtBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob21lLWFzc2lzdGFudC1mcm9udGVuZC8uL3NyYy9taXhpbnMvc3Vic2NyaWJlLW1peGluLnRzP2Y1YjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVW5zdWJzY3JpYmVGdW5jIH0gZnJvbSBcImhvbWUtYXNzaXN0YW50LWpzLXdlYnNvY2tldFwiO1xuaW1wb3J0IHsgUHJvcGVydHlWYWx1ZXMsIFJlYWN0aXZlRWxlbWVudCB9IGZyb20gXCJsaXRcIjtcbmltcG9ydCB7IHByb3BlcnR5IH0gZnJvbSBcImxpdC9kZWNvcmF0b3JzXCI7XG5pbXBvcnQgeyBDb25zdHJ1Y3RvciwgSG9tZUFzc2lzdGFudCB9IGZyb20gXCIuLi90eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEhhc3NTdWJzY3JpYmVFbGVtZW50IHtcbiAgaGFzc1N1YnNjcmliZSgpOiBVbnN1YnNjcmliZUZ1bmNbXTtcbn1cblxuZXhwb3J0IGNvbnN0IFN1YnNjcmliZU1peGluID0gPFQgZXh0ZW5kcyBDb25zdHJ1Y3RvcjxSZWFjdGl2ZUVsZW1lbnQ+PihcbiAgc3VwZXJDbGFzczogVFxuKSA9PiB7XG4gIGNsYXNzIFN1YnNjcmliZUNsYXNzIGV4dGVuZHMgc3VwZXJDbGFzcyB7XG4gICAgQHByb3BlcnR5KHsgYXR0cmlidXRlOiBmYWxzZSB9KSBwdWJsaWMgaGFzcz86IEhvbWVBc3Npc3RhbnQ7XG5cbiAgICAvLyB3ZSB3YWl0IHdpdGggc3Vic2NyaWJpbmcgdGlsbCB0aGVzZSBwcm9wZXJ0aWVzIGFyZSBzZXQgb24gdGhlIGhvc3QgZWxlbWVudFxuICAgIHByb3RlY3RlZCBoYXNzU3Vic2NyaWJlUmVxdWlyZWRIb3N0UHJvcHM/OiBzdHJpbmdbXTtcblxuICAgIHByaXZhdGUgX191bnN1YnM/OiBBcnJheTxVbnN1YnNjcmliZUZ1bmMgfCBQcm9taXNlPFVuc3Vic2NyaWJlRnVuYz4+O1xuXG4gICAgcHVibGljIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcbiAgICAgIHRoaXMuX19jaGVja1N1YnNjcmliZWQoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICBzdXBlci5kaXNjb25uZWN0ZWRDYWxsYmFjaygpO1xuICAgICAgaWYgKHRoaXMuX191bnN1YnMpIHtcbiAgICAgICAgd2hpbGUgKHRoaXMuX191bnN1YnMubGVuZ3RoKSB7XG4gICAgICAgICAgY29uc3QgdW5zdWIgPSB0aGlzLl9fdW5zdWJzLnBvcCgpITtcbiAgICAgICAgICBpZiAodW5zdWIgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICB1bnN1Yi50aGVuKCh1bnN1YkZ1bmMpID0+IHVuc3ViRnVuYygpKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdW5zdWIoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fX3Vuc3VicyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgdXBkYXRlZChjaGFuZ2VkUHJvcHM6IFByb3BlcnR5VmFsdWVzKSB7XG4gICAgICBzdXBlci51cGRhdGVkKGNoYW5nZWRQcm9wcyk7XG4gICAgICBpZiAoY2hhbmdlZFByb3BzLmhhcyhcImhhc3NcIikpIHtcbiAgICAgICAgdGhpcy5fX2NoZWNrU3Vic2NyaWJlZCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoIXRoaXMuaGFzc1N1YnNjcmliZVJlcXVpcmVkSG9zdFByb3BzKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGZvciAoY29uc3Qga2V5IG9mIGNoYW5nZWRQcm9wcy5rZXlzKCkpIHtcbiAgICAgICAgaWYgKHRoaXMuaGFzc1N1YnNjcmliZVJlcXVpcmVkSG9zdFByb3BzLmluY2x1ZGVzKGtleSBhcyBzdHJpbmcpKSB7XG4gICAgICAgICAgdGhpcy5fX2NoZWNrU3Vic2NyaWJlZCgpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBoYXNzU3Vic2NyaWJlKCk6IEFycmF5PFxuICAgICAgVW5zdWJzY3JpYmVGdW5jIHwgUHJvbWlzZTxVbnN1YnNjcmliZUZ1bmM+XG4gICAgPiB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfX2NoZWNrU3Vic2NyaWJlZCgpOiB2b2lkIHtcbiAgICAgIGlmIChcbiAgICAgICAgdGhpcy5fX3Vuc3VicyAhPT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICEodGhpcyBhcyB1bmtub3duIGFzIEVsZW1lbnQpLmlzQ29ubmVjdGVkIHx8XG4gICAgICAgIHRoaXMuaGFzcyA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgIHRoaXMuaGFzc1N1YnNjcmliZVJlcXVpcmVkSG9zdFByb3BzPy5zb21lKFxuICAgICAgICAgIChwcm9wKSA9PiB0aGlzW3Byb3BdID09PSB1bmRlZmluZWRcbiAgICAgICAgKVxuICAgICAgKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHRoaXMuX191bnN1YnMgPSB0aGlzLmhhc3NTdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIFN1YnNjcmliZUNsYXNzO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/mixins/subscribe-mixin.ts\n");

/***/ }),

/***/ "./src/panels/lovelace/cards/energy/common/energy-chart-options.ts":
/*!*************************************************************************!*\
  !*** ./src/panels/lovelace/cards/energy/common/energy-chart-options.ts ***!
  \*************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCommonOptions: () => (/* binding */ getCommonOptions),\n/* harmony export */   getSuggestedMax: () => (/* binding */ getSuggestedMax)\n/* harmony export */ });\n/* harmony import */ var date_fns_esm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! date-fns/esm */ \"./node_modules/date-fns/esm/subHours/index.js\");\n/* harmony import */ var date_fns_esm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! date-fns/esm */ \"./node_modules/date-fns/esm/differenceInDays/index.js\");\n/* harmony import */ var date_fns_esm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! date-fns/esm */ \"./node_modules/date-fns/esm/differenceInHours/index.js\");\n/* harmony import */ var date_fns_esm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! date-fns/esm */ \"./node_modules/date-fns/esm/addHours/index.js\");\n/* harmony import */ var _common_number_format_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../common/number/format_number */ \"./src/common/number/format_number.ts\");\n/* harmony import */ var _common_datetime_format_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../common/datetime/format_date */ \"./src/common/datetime/format_date.ts\");\n/* harmony import */ var _common_datetime_format_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../common/datetime/format_time */ \"./src/common/datetime/format_time.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_datetime_format_date__WEBPACK_IMPORTED_MODULE_1__, _common_datetime_format_time__WEBPACK_IMPORTED_MODULE_2__]);\n([_common_datetime_format_date__WEBPACK_IMPORTED_MODULE_1__, _common_datetime_format_time__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nfunction getSuggestedMax(dayDifference, end) {\n  let suggestedMax = new Date(end);\n\n  // Sometimes around DST we get a time of 0:59 instead of 23:59 as expected.\n  // Correct for this when showing days/months so we don't get an extra day.\n  if (dayDifference > 2 && suggestedMax.getHours() === 0) {\n    suggestedMax = (0,date_fns_esm__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(suggestedMax, 1);\n  }\n  suggestedMax.setMinutes(0, 0, 0);\n  if (dayDifference > 35) {\n    suggestedMax.setDate(1);\n  }\n  if (dayDifference > 2) {\n    suggestedMax.setHours(0);\n  }\n  return suggestedMax.getTime();\n}\nfunction getCommonOptions(start, end, locale, config, unit, compareStart, compareEnd) {\n  const dayDifference = (0,date_fns_esm__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(end, start);\n  const compare = compareStart !== undefined && compareEnd !== undefined;\n  if (compare && dayDifference <= 35) {\n    const difference = (0,date_fns_esm__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(end, start);\n    const differenceCompare = (0,date_fns_esm__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(compareEnd, compareStart);\n    // If the compare period doesn't match the main period, adjust them to match\n    if (differenceCompare > difference) {\n      end = (0,date_fns_esm__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(end, differenceCompare - difference);\n    } else if (difference > differenceCompare) {\n      compareEnd = (0,date_fns_esm__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(compareEnd, difference - differenceCompare);\n    }\n  }\n  const options = {\n    parsing: false,\n    animation: false,\n    interaction: {\n      mode: \"x\"\n    },\n    scales: {\n      x: {\n        type: \"time\",\n        suggestedMin: start.getTime(),\n        max: getSuggestedMax(dayDifference, end),\n        adapters: {\n          date: {\n            locale,\n            config\n          }\n        },\n        ticks: {\n          maxRotation: 0,\n          sampleSize: 5,\n          autoSkipPadding: 20,\n          font: context => context.tick && context.tick.major ? {\n            weight: \"bold\"\n          } : {}\n        },\n        time: {\n          tooltipFormat: dayDifference > 35 ? \"monthyear\" : dayDifference > 7 ? \"date\" : dayDifference > 2 ? \"weekday\" : dayDifference > 0 ? \"datetime\" : \"hour\",\n          minUnit: dayDifference > 35 ? \"month\" : dayDifference > 2 ? \"day\" : \"hour\"\n        }\n      },\n      y: {\n        stacked: true,\n        type: \"linear\",\n        title: {\n          display: true,\n          text: unit\n        },\n        ticks: {\n          beginAtZero: true,\n          callback: value => (0,_common_number_format_number__WEBPACK_IMPORTED_MODULE_0__.formatNumber)(Math.abs(value), locale)\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        position: \"nearest\",\n        filter: val => val.formattedValue !== \"0\",\n        itemSort: function (a, b) {\n          return b.datasetIndex - a.datasetIndex;\n        },\n        callbacks: {\n          title: datasets => {\n            if (dayDifference > 0) {\n              return datasets[0].label;\n            }\n            const date = new Date(datasets[0].parsed.x);\n            return `${compare ? `${(0,_common_datetime_format_date__WEBPACK_IMPORTED_MODULE_1__.formatDateVeryShort)(date, locale, config)}: ` : \"\"}${(0,_common_datetime_format_time__WEBPACK_IMPORTED_MODULE_2__.formatTime)(date, locale, config)} – ${(0,_common_datetime_format_time__WEBPACK_IMPORTED_MODULE_2__.formatTime)((0,date_fns_esm__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(date, 1), locale, config)}`;\n          },\n          label: context => `${context.dataset.label}: ${(0,_common_number_format_number__WEBPACK_IMPORTED_MODULE_0__.formatNumber)(context.parsed.y, locale)} ${unit}`\n        }\n      },\n      filler: {\n        propagate: false\n      },\n      legend: {\n        display: false,\n        labels: {\n          usePointStyle: true\n        }\n      }\n    },\n    elements: {\n      bar: {\n        borderWidth: 1.5,\n        borderRadius: 4\n      },\n      point: {\n        hitRadius: 50\n      }\n    },\n    // @ts-expect-error\n    locale: (0,_common_number_format_number__WEBPACK_IMPORTED_MODULE_0__.numberFormatToLocale)(locale)\n  };\n  if (compare) {\n    options.scales.xAxisCompare = {\n      ...options.scales.x,\n      suggestedMin: compareStart.getTime(),\n      max: getSuggestedMax(dayDifference, compareEnd),\n      display: false\n    };\n  }\n  return options;\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFuZWxzL2xvdmVsYWNlL2NhcmRzL2VuZXJneS9jb21tb24vZW5lcmd5LWNoYXJ0LW9wdGlvbnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7QUFPQTtBQUlBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQVVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbWUtYXNzaXN0YW50LWZyb250ZW5kLy4vc3JjL3BhbmVscy9sb3ZlbGFjZS9jYXJkcy9lbmVyZ3kvY29tbW9uL2VuZXJneS1jaGFydC1vcHRpb25zLnRzPzM4ZmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhcnRPcHRpb25zIH0gZnJvbSBcImNoYXJ0LmpzXCI7XG5pbXBvcnQgeyBIYXNzQ29uZmlnIH0gZnJvbSBcImhvbWUtYXNzaXN0YW50LWpzLXdlYnNvY2tldFwiO1xuaW1wb3J0IHtcbiAgYWRkSG91cnMsXG4gIHN1YkhvdXJzLFxuICBkaWZmZXJlbmNlSW5EYXlzLFxuICBkaWZmZXJlbmNlSW5Ib3Vycyxcbn0gZnJvbSBcImRhdGUtZm5zL2VzbVwiO1xuaW1wb3J0IHsgRnJvbnRlbmRMb2NhbGVEYXRhIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL2RhdGEvdHJhbnNsYXRpb25cIjtcbmltcG9ydCB7XG4gIGZvcm1hdE51bWJlcixcbiAgbnVtYmVyRm9ybWF0VG9Mb2NhbGUsXG59IGZyb20gXCIuLi8uLi8uLi8uLi8uLi9jb21tb24vbnVtYmVyL2Zvcm1hdF9udW1iZXJcIjtcbmltcG9ydCB7IGZvcm1hdERhdGVWZXJ5U2hvcnQgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vY29tbW9uL2RhdGV0aW1lL2Zvcm1hdF9kYXRlXCI7XG5pbXBvcnQgeyBmb3JtYXRUaW1lIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL2NvbW1vbi9kYXRldGltZS9mb3JtYXRfdGltZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3VnZ2VzdGVkTWF4KGRheURpZmZlcmVuY2U6IG51bWJlciwgZW5kOiBEYXRlKTogbnVtYmVyIHtcbiAgbGV0IHN1Z2dlc3RlZE1heCA9IG5ldyBEYXRlKGVuZCk7XG5cbiAgLy8gU29tZXRpbWVzIGFyb3VuZCBEU1Qgd2UgZ2V0IGEgdGltZSBvZiAwOjU5IGluc3RlYWQgb2YgMjM6NTkgYXMgZXhwZWN0ZWQuXG4gIC8vIENvcnJlY3QgZm9yIHRoaXMgd2hlbiBzaG93aW5nIGRheXMvbW9udGhzIHNvIHdlIGRvbid0IGdldCBhbiBleHRyYSBkYXkuXG4gIGlmIChkYXlEaWZmZXJlbmNlID4gMiAmJiBzdWdnZXN0ZWRNYXguZ2V0SG91cnMoKSA9PT0gMCkge1xuICAgIHN1Z2dlc3RlZE1heCA9IHN1YkhvdXJzKHN1Z2dlc3RlZE1heCwgMSk7XG4gIH1cblxuICBzdWdnZXN0ZWRNYXguc2V0TWludXRlcygwLCAwLCAwKTtcbiAgaWYgKGRheURpZmZlcmVuY2UgPiAzNSkge1xuICAgIHN1Z2dlc3RlZE1heC5zZXREYXRlKDEpO1xuICB9XG4gIGlmIChkYXlEaWZmZXJlbmNlID4gMikge1xuICAgIHN1Z2dlc3RlZE1heC5zZXRIb3VycygwKTtcbiAgfVxuICByZXR1cm4gc3VnZ2VzdGVkTWF4LmdldFRpbWUoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbW1vbk9wdGlvbnMoXG4gIHN0YXJ0OiBEYXRlLFxuICBlbmQ6IERhdGUsXG4gIGxvY2FsZTogRnJvbnRlbmRMb2NhbGVEYXRhLFxuICBjb25maWc6IEhhc3NDb25maWcsXG4gIHVuaXQ/OiBzdHJpbmcsXG4gIGNvbXBhcmVTdGFydD86IERhdGUsXG4gIGNvbXBhcmVFbmQ/OiBEYXRlXG4pOiBDaGFydE9wdGlvbnMge1xuICBjb25zdCBkYXlEaWZmZXJlbmNlID0gZGlmZmVyZW5jZUluRGF5cyhlbmQsIHN0YXJ0KTtcbiAgY29uc3QgY29tcGFyZSA9IGNvbXBhcmVTdGFydCAhPT0gdW5kZWZpbmVkICYmIGNvbXBhcmVFbmQgIT09IHVuZGVmaW5lZDtcbiAgaWYgKGNvbXBhcmUgJiYgZGF5RGlmZmVyZW5jZSA8PSAzNSkge1xuICAgIGNvbnN0IGRpZmZlcmVuY2UgPSBkaWZmZXJlbmNlSW5Ib3VycyhlbmQsIHN0YXJ0KTtcbiAgICBjb25zdCBkaWZmZXJlbmNlQ29tcGFyZSA9IGRpZmZlcmVuY2VJbkhvdXJzKGNvbXBhcmVFbmQhLCBjb21wYXJlU3RhcnQhKTtcbiAgICAvLyBJZiB0aGUgY29tcGFyZSBwZXJpb2QgZG9lc24ndCBtYXRjaCB0aGUgbWFpbiBwZXJpb2QsIGFkanVzdCB0aGVtIHRvIG1hdGNoXG4gICAgaWYgKGRpZmZlcmVuY2VDb21wYXJlID4gZGlmZmVyZW5jZSkge1xuICAgICAgZW5kID0gYWRkSG91cnMoZW5kLCBkaWZmZXJlbmNlQ29tcGFyZSAtIGRpZmZlcmVuY2UpO1xuICAgIH0gZWxzZSBpZiAoZGlmZmVyZW5jZSA+IGRpZmZlcmVuY2VDb21wYXJlKSB7XG4gICAgICBjb21wYXJlRW5kID0gYWRkSG91cnMoY29tcGFyZUVuZCEsIGRpZmZlcmVuY2UgLSBkaWZmZXJlbmNlQ29tcGFyZSk7XG4gICAgfVxuICB9XG5cbiAgY29uc3Qgb3B0aW9uczogQ2hhcnRPcHRpb25zID0ge1xuICAgIHBhcnNpbmc6IGZhbHNlLFxuICAgIGFuaW1hdGlvbjogZmFsc2UsXG4gICAgaW50ZXJhY3Rpb246IHtcbiAgICAgIG1vZGU6IFwieFwiLFxuICAgIH0sXG4gICAgc2NhbGVzOiB7XG4gICAgICB4OiB7XG4gICAgICAgIHR5cGU6IFwidGltZVwiLFxuICAgICAgICBzdWdnZXN0ZWRNaW46IHN0YXJ0LmdldFRpbWUoKSxcbiAgICAgICAgbWF4OiBnZXRTdWdnZXN0ZWRNYXgoZGF5RGlmZmVyZW5jZSwgZW5kKSxcbiAgICAgICAgYWRhcHRlcnM6IHtcbiAgICAgICAgICBkYXRlOiB7XG4gICAgICAgICAgICBsb2NhbGUsXG4gICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICBtYXhSb3RhdGlvbjogMCxcbiAgICAgICAgICBzYW1wbGVTaXplOiA1LFxuICAgICAgICAgIGF1dG9Ta2lwUGFkZGluZzogMjAsXG4gICAgICAgICAgZm9udDogKGNvbnRleHQpID0+XG4gICAgICAgICAgICBjb250ZXh0LnRpY2sgJiYgY29udGV4dC50aWNrLm1ham9yXG4gICAgICAgICAgICAgID8gKHsgd2VpZ2h0OiBcImJvbGRcIiB9IGFzIGFueSlcbiAgICAgICAgICAgICAgOiB7fSxcbiAgICAgICAgfSxcbiAgICAgICAgdGltZToge1xuICAgICAgICAgIHRvb2x0aXBGb3JtYXQ6XG4gICAgICAgICAgICBkYXlEaWZmZXJlbmNlID4gMzVcbiAgICAgICAgICAgICAgPyBcIm1vbnRoeWVhclwiXG4gICAgICAgICAgICAgIDogZGF5RGlmZmVyZW5jZSA+IDdcbiAgICAgICAgICAgICAgICA/IFwiZGF0ZVwiXG4gICAgICAgICAgICAgICAgOiBkYXlEaWZmZXJlbmNlID4gMlxuICAgICAgICAgICAgICAgICAgPyBcIndlZWtkYXlcIlxuICAgICAgICAgICAgICAgICAgOiBkYXlEaWZmZXJlbmNlID4gMFxuICAgICAgICAgICAgICAgICAgICA/IFwiZGF0ZXRpbWVcIlxuICAgICAgICAgICAgICAgICAgICA6IFwiaG91clwiLFxuICAgICAgICAgIG1pblVuaXQ6XG4gICAgICAgICAgICBkYXlEaWZmZXJlbmNlID4gMzUgPyBcIm1vbnRoXCIgOiBkYXlEaWZmZXJlbmNlID4gMiA/IFwiZGF5XCIgOiBcImhvdXJcIixcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB5OiB7XG4gICAgICAgIHN0YWNrZWQ6IHRydWUsXG4gICAgICAgIHR5cGU6IFwibGluZWFyXCIsXG4gICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICB0ZXh0OiB1bml0LFxuICAgICAgICB9LFxuICAgICAgICB0aWNrczoge1xuICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlLFxuICAgICAgICAgIGNhbGxiYWNrOiAodmFsdWUpID0+IGZvcm1hdE51bWJlcihNYXRoLmFicyh2YWx1ZSksIGxvY2FsZSksXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gICAgcGx1Z2luczoge1xuICAgICAgdG9vbHRpcDoge1xuICAgICAgICBwb3NpdGlvbjogXCJuZWFyZXN0XCIsXG4gICAgICAgIGZpbHRlcjogKHZhbCkgPT4gdmFsLmZvcm1hdHRlZFZhbHVlICE9PSBcIjBcIixcbiAgICAgICAgaXRlbVNvcnQ6IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgcmV0dXJuIGIuZGF0YXNldEluZGV4IC0gYS5kYXRhc2V0SW5kZXg7XG4gICAgICAgIH0sXG4gICAgICAgIGNhbGxiYWNrczoge1xuICAgICAgICAgIHRpdGxlOiAoZGF0YXNldHMpID0+IHtcbiAgICAgICAgICAgIGlmIChkYXlEaWZmZXJlbmNlID4gMCkge1xuICAgICAgICAgICAgICByZXR1cm4gZGF0YXNldHNbMF0ubGFiZWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZGF0YXNldHNbMF0ucGFyc2VkLngpO1xuICAgICAgICAgICAgcmV0dXJuIGAke1xuICAgICAgICAgICAgICBjb21wYXJlID8gYCR7Zm9ybWF0RGF0ZVZlcnlTaG9ydChkYXRlLCBsb2NhbGUsIGNvbmZpZyl9OiBgIDogXCJcIlxuICAgICAgICAgICAgfSR7Zm9ybWF0VGltZShkYXRlLCBsb2NhbGUsIGNvbmZpZyl9IOKAkyAke2Zvcm1hdFRpbWUoXG4gICAgICAgICAgICAgIGFkZEhvdXJzKGRhdGUsIDEpLFxuICAgICAgICAgICAgICBsb2NhbGUsXG4gICAgICAgICAgICAgIGNvbmZpZ1xuICAgICAgICAgICAgKX1gO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgbGFiZWw6IChjb250ZXh0KSA9PlxuICAgICAgICAgICAgYCR7Y29udGV4dC5kYXRhc2V0LmxhYmVsfTogJHtmb3JtYXROdW1iZXIoXG4gICAgICAgICAgICAgIGNvbnRleHQucGFyc2VkLnksXG4gICAgICAgICAgICAgIGxvY2FsZVxuICAgICAgICAgICAgKX0gJHt1bml0fWAsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgZmlsbGVyOiB7XG4gICAgICAgIHByb3BhZ2F0ZTogZmFsc2UsXG4gICAgICB9LFxuICAgICAgbGVnZW5kOiB7XG4gICAgICAgIGRpc3BsYXk6IGZhbHNlLFxuICAgICAgICBsYWJlbHM6IHtcbiAgICAgICAgICB1c2VQb2ludFN0eWxlOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIGVsZW1lbnRzOiB7XG4gICAgICBiYXI6IHsgYm9yZGVyV2lkdGg6IDEuNSwgYm9yZGVyUmFkaXVzOiA0IH0sXG4gICAgICBwb2ludDoge1xuICAgICAgICBoaXRSYWRpdXM6IDUwLFxuICAgICAgfSxcbiAgICB9LFxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICBsb2NhbGU6IG51bWJlckZvcm1hdFRvTG9jYWxlKGxvY2FsZSksXG4gIH07XG4gIGlmIChjb21wYXJlKSB7XG4gICAgb3B0aW9ucy5zY2FsZXMhLnhBeGlzQ29tcGFyZSA9IHtcbiAgICAgIC4uLihvcHRpb25zLnNjYWxlcyEueCBhcyBSZWNvcmQ8c3RyaW5nLCBhbnk+KSxcbiAgICAgIHN1Z2dlc3RlZE1pbjogY29tcGFyZVN0YXJ0IS5nZXRUaW1lKCksXG4gICAgICBtYXg6IGdldFN1Z2dlc3RlZE1heChkYXlEaWZmZXJlbmNlLCBjb21wYXJlRW5kISksXG4gICAgICBkaXNwbGF5OiBmYWxzZSxcbiAgICB9O1xuICB9XG4gIHJldHVybiBvcHRpb25zO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/panels/lovelace/cards/energy/common/energy-chart-options.ts\n");

/***/ }),

/***/ "./src/panels/lovelace/cards/energy/hui-energy-usage-graph-card.ts":
/*!*************************************************************************!*\
  !*** ./src/panels/lovelace/cards/energy/hui-energy-usage-graph-card.ts ***!
  \*************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HuiEnergyUsageGraphCard: () => (/* binding */ HuiEnergyUsageGraphCard)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_decorate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/decorate */ \"./node_modules/@babel/runtime/helpers/esm/decorate.js\");\n/* harmony import */ var date_fns_esm__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! date-fns/esm */ \"./node_modules/date-fns/esm/startOfToday/index.js\");\n/* harmony import */ var date_fns_esm__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! date-fns/esm */ \"./node_modules/date-fns/esm/endOfToday/index.js\");\n/* harmony import */ var date_fns_esm__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! date-fns/esm */ \"./node_modules/date-fns/esm/isToday/index.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/decorators */ \"./node_modules/lit/decorators.js\");\n/* harmony import */ var lit_directives_class_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit/directives/class-map */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var memoize_one__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! memoize-one */ \"./node_modules/memoize-one/dist/memoize-one.esm.js\");\n/* harmony import */ var _common_color_convert_color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/color/convert-color */ \"./src/common/color/convert-color.ts\");\n/* harmony import */ var _common_color_lab__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../common/color/lab */ \"./src/common/color/lab.ts\");\n/* harmony import */ var _common_number_format_number__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../common/number/format_number */ \"./src/common/number/format_number.ts\");\n/* harmony import */ var _components_chart_ha_chart_base__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../components/chart/ha-chart-base */ \"./src/components/chart/ha-chart-base.ts\");\n/* harmony import */ var _components_ha_card__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../components/ha-card */ \"./src/components/ha-card.ts\");\n/* harmony import */ var _data_energy__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../data/energy */ \"./src/data/energy.ts\");\n/* harmony import */ var _data_recorder__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../data/recorder */ \"./src/data/recorder.ts\");\n/* harmony import */ var _mixins_subscribe_mixin__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../mixins/subscribe-mixin */ \"./src/mixins/subscribe-mixin.ts\");\n/* harmony import */ var _common_has_changed__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common/has-changed */ \"./src/panels/lovelace/common/has-changed.ts\");\n/* harmony import */ var _common_energy_chart_options__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./common/energy-chart-options */ \"./src/panels/lovelace/cards/energy/common/energy-chart-options.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_data_energy__WEBPACK_IMPORTED_MODULE_9__, _common_energy_chart_options__WEBPACK_IMPORTED_MODULE_13__]);\n([_data_energy__WEBPACK_IMPORTED_MODULE_9__, _common_energy_chart_options__WEBPACK_IMPORTED_MODULE_13__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet HuiEnergyUsageGraphCard = (0,_babel_runtime_helpers_decorate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.customElement)(\"hui-energy-usage-graph-card\")], function (_initialize, _SubscribeMixin) {\n  class HuiEnergyUsageGraphCard extends _SubscribeMixin {\n    constructor(...args) {\n      super(...args);\n      _initialize(this);\n    }\n  }\n  return {\n    F: HuiEnergyUsageGraphCard,\n    d: [{\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.property)({\n        attribute: false\n      })],\n      key: \"hass\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.state)()],\n      key: \"_config\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.state)()],\n      key: \"_chartData\",\n      value() {\n        return {\n          datasets: []\n        };\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.state)()],\n      key: \"_start\",\n      value() {\n        return (0,date_fns_esm__WEBPACK_IMPORTED_MODULE_14__[\"default\"])();\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.state)()],\n      key: \"_end\",\n      value() {\n        return (0,date_fns_esm__WEBPACK_IMPORTED_MODULE_15__[\"default\"])();\n      }\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.state)()],\n      key: \"_compareStart\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      decorators: [(0,lit_decorators__WEBPACK_IMPORTED_MODULE_2__.state)()],\n      key: \"_compareEnd\",\n      value: void 0\n    }, {\n      kind: \"field\",\n      key: \"hassSubscribeRequiredHostProps\",\n      value() {\n        return [\"_config\"];\n      }\n    }, {\n      kind: \"method\",\n      key: \"hassSubscribe\",\n      value: function hassSubscribe() {\n        var _this$_config;\n        return [(0,_data_energy__WEBPACK_IMPORTED_MODULE_9__.getEnergyDataCollection)(this.hass, {\n          key: (_this$_config = this._config) === null || _this$_config === void 0 ? void 0 : _this$_config.collection_key\n        }).subscribe(data => this._getStatistics(data))];\n      }\n    }, {\n      kind: \"method\",\n      key: \"getCardSize\",\n      value: function getCardSize() {\n        return 3;\n      }\n    }, {\n      kind: \"method\",\n      key: \"setConfig\",\n      value: function setConfig(config) {\n        this._config = config;\n      }\n    }, {\n      kind: \"method\",\n      key: \"shouldUpdate\",\n      value: function shouldUpdate(changedProps) {\n        return (0,_common_has_changed__WEBPACK_IMPORTED_MODULE_12__.hasConfigChanged)(this, changedProps) || changedProps.size > 1 || !changedProps.has(\"hass\");\n      }\n    }, {\n      kind: \"method\",\n      key: \"render\",\n      value: function render() {\n        if (!this.hass || !this._config) {\n          return lit__WEBPACK_IMPORTED_MODULE_1__.nothing;\n        }\n        return (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`\n      <ha-card>\n        ${this._config.title ? (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<h1 class=\"card-header\">${this._config.title}</h1>` : \"\"}\n        <div\n          class=\"content ${(0,lit_directives_class_map__WEBPACK_IMPORTED_MODULE_3__.classMap)({\n          \"has-header\": !!this._config.title\n        })}\"\n        >\n          <ha-chart-base\n            .hass=${this.hass}\n            .data=${this._chartData}\n            .options=${this._createOptions(this._start, this._end, this.hass.locale, this.hass.config, this._compareStart, this._compareEnd)}\n            chart-type=\"bar\"\n          ></ha-chart-base>\n          ${!this._chartData.datasets.some(dataset => dataset.data.length) ? (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<div class=\"no-data\">\n                ${(0,date_fns_esm__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(this._start) ? this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data\") : this.hass.localize(\"ui.panel.lovelace.cards.energy.no_data_period\")}\n              </div>` : \"\"}\n        </div>\n      </ha-card>\n    `;\n      }\n    }, {\n      kind: \"field\",\n      key: \"_createOptions\",\n      value() {\n        return (0,memoize_one__WEBPACK_IMPORTED_MODULE_17__[\"default\"])((start, end, locale, config, compareStart, compareEnd) => {\n          const commonOptions = (0,_common_energy_chart_options__WEBPACK_IMPORTED_MODULE_13__.getCommonOptions)(start, end, locale, config, \"kWh\", compareStart, compareEnd);\n          const options = {\n            ...commonOptions,\n            plugins: {\n              ...commonOptions.plugins,\n              tooltip: {\n                ...commonOptions.plugins.tooltip,\n                itemSort: function (a, b) {\n                  var _a$raw, _b$raw, _b$raw2, _a$raw2, _a$raw3;\n                  if (((_a$raw = a.raw) === null || _a$raw === void 0 ? void 0 : _a$raw.y) > 0 && ((_b$raw = b.raw) === null || _b$raw === void 0 ? void 0 : _b$raw.y) < 0) {\n                    return -1;\n                  }\n                  if (((_b$raw2 = b.raw) === null || _b$raw2 === void 0 ? void 0 : _b$raw2.y) > 0 && ((_a$raw2 = a.raw) === null || _a$raw2 === void 0 ? void 0 : _a$raw2.y) < 0) {\n                    return 1;\n                  }\n                  if (((_a$raw3 = a.raw) === null || _a$raw3 === void 0 ? void 0 : _a$raw3.y) > 0) {\n                    return b.datasetIndex - a.datasetIndex;\n                  }\n                  return a.datasetIndex - b.datasetIndex;\n                },\n                callbacks: {\n                  ...commonOptions.plugins.tooltip.callbacks,\n                  footer: contexts => {\n                    let totalConsumed = 0;\n                    let totalReturned = 0;\n                    for (const context of contexts) {\n                      const value = context.dataset.data[context.dataIndex].y;\n                      if (value > 0) {\n                        totalConsumed += value;\n                      } else {\n                        totalReturned += Math.abs(value);\n                      }\n                    }\n                    return [totalConsumed ? this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_usage_graph.total_consumed\", {\n                      num: (0,_common_number_format_number__WEBPACK_IMPORTED_MODULE_6__.formatNumber)(totalConsumed, locale)\n                    }) : \"\", totalReturned ? this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_usage_graph.total_returned\", {\n                      num: (0,_common_number_format_number__WEBPACK_IMPORTED_MODULE_6__.formatNumber)(totalReturned, locale)\n                    }) : \"\"].filter(Boolean);\n                  }\n                }\n              }\n            }\n          };\n          return options;\n        });\n      }\n    }, {\n      kind: \"method\",\n      key: \"_getStatistics\",\n      value: async function _getStatistics(energyData) {\n        const datasets = [];\n        const statIds = {};\n        for (const source of energyData.prefs.energy_sources) {\n          if (source.type === \"solar\") {\n            if (statIds.solar) {\n              statIds.solar.push(source.stat_energy_from);\n            } else {\n              statIds.solar = [source.stat_energy_from];\n            }\n            continue;\n          }\n          if (source.type === \"battery\") {\n            if (statIds.to_battery) {\n              statIds.to_battery.push(source.stat_energy_to);\n              statIds.from_battery.push(source.stat_energy_from);\n            } else {\n              statIds.to_battery = [source.stat_energy_to];\n              statIds.from_battery = [source.stat_energy_from];\n            }\n            continue;\n          }\n          if (source.type !== \"grid\") {\n            continue;\n          }\n\n          // grid source\n          for (const flowFrom of source.flow_from) {\n            if (statIds.from_grid) {\n              statIds.from_grid.push(flowFrom.stat_energy_from);\n            } else {\n              statIds.from_grid = [flowFrom.stat_energy_from];\n            }\n          }\n          for (const flowTo of source.flow_to) {\n            if (statIds.to_grid) {\n              statIds.to_grid.push(flowTo.stat_energy_to);\n            } else {\n              statIds.to_grid = [flowTo.stat_energy_to];\n            }\n          }\n        }\n        const computedStyles = getComputedStyle(this);\n        const colorPropertyMap = {\n          to_grid: \"--energy-grid-return-color\",\n          to_battery: \"--energy-battery-in-color\",\n          from_grid: \"--energy-grid-consumption-color\",\n          used_grid: \"--energy-grid-consumption-color\",\n          used_solar: \"--energy-solar-color\",\n          used_battery: \"--energy-battery-out-color\"\n        };\n        const colors = {\n          to_grid: {\n            base: computedStyles.getPropertyValue(colorPropertyMap.to_grid).trim()\n          },\n          to_battery: {\n            base: computedStyles.getPropertyValue(colorPropertyMap.to_battery).trim()\n          },\n          from_grid: {\n            base: computedStyles.getPropertyValue(colorPropertyMap.from_grid).trim()\n          },\n          used_grid: {\n            base: computedStyles.getPropertyValue(colorPropertyMap.used_grid).trim()\n          },\n          used_solar: {\n            base: computedStyles.getPropertyValue(colorPropertyMap.used_solar).trim()\n          },\n          used_battery: {\n            base: computedStyles.getPropertyValue(colorPropertyMap.used_battery).trim()\n          }\n        };\n        Object.entries(colorPropertyMap).forEach(([key, colorProp]) => {\n          if (key === \"used_grid\" || key === \"used_solar\" || key === \"used_battery\") {\n            return;\n          }\n          colors[key].overrides = [];\n          if (statIds[key]) {\n            Object.values(statIds[key]).forEach((id, idx) => {\n              const override = computedStyles.getPropertyValue(colorProp + \"-\" + idx).trim();\n              if (override.length > 0) {\n                colors[key].overrides[id] = override;\n              }\n            });\n          }\n        });\n        const labels = {\n          used_grid: this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_usage_graph.combined_from_grid\"),\n          used_solar: this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_usage_graph.consumed_solar\"),\n          used_battery: this.hass.localize(\"ui.panel.lovelace.cards.energy.energy_usage_graph.consumed_battery\")\n        };\n        this._start = energyData.start;\n        this._end = energyData.end || (0,date_fns_esm__WEBPACK_IMPORTED_MODULE_15__[\"default\"])();\n        this._compareStart = energyData.startCompare;\n        this._compareEnd = energyData.endCompare;\n        datasets.push(...this._processDataSet(energyData.stats, energyData.statsMetadata, statIds, colors, labels, false));\n        if (energyData.statsCompare) {\n          // Add empty dataset to align the bars\n          datasets.push({\n            order: 0,\n            data: []\n          });\n          datasets.push({\n            order: 999,\n            data: [],\n            xAxisID: \"xAxisCompare\"\n          });\n          datasets.push(...this._processDataSet(energyData.statsCompare, energyData.statsMetadata, statIds, colors, labels, true));\n        }\n        this._chartData = {\n          datasets\n        };\n      }\n    }, {\n      kind: \"method\",\n      key: \"_processDataSet\",\n      value: function _processDataSet(statistics, statisticsMetaData, statIdsByCat, colors, labels, compare = false) {\n        const data = [];\n        const combinedData = {};\n        const summedData = {};\n        let pointEndTime;\n        Object.entries(statIdsByCat).forEach(([key, statIds]) => {\n          const sum = [\"solar\", \"to_grid\", \"from_grid\", \"to_battery\", \"from_battery\"].includes(key);\n          const add = ![\"solar\", \"from_battery\"].includes(key);\n          const totalStats = {};\n          const sets = {};\n          statIds.forEach(id => {\n            const stats = statistics[id];\n            if (!stats) {\n              return;\n            }\n            const set = {};\n            stats.forEach(stat => {\n              if (stat.change === null || stat.change === undefined) {\n                return;\n              }\n              const val = stat.change;\n              // Get total of solar and to grid to calculate the solar energy used\n              if (sum) {\n                totalStats[stat.start] = stat.start in totalStats ? totalStats[stat.start] + val : val;\n                pointEndTime = stat.end;\n              }\n              if (add && !(stat.start in set)) {\n                set[stat.start] = val;\n                pointEndTime = stat.end;\n              }\n            });\n            sets[id] = set;\n          });\n          if (sum) {\n            summedData[key] = totalStats;\n          }\n          if (add) {\n            combinedData[key] = sets;\n          }\n        });\n        const grid_to_battery = {};\n        const battery_to_grid = {};\n        if ((summedData.to_grid || summedData.to_battery) && summedData.solar) {\n          const used_solar = {};\n          for (const start of Object.keys(summedData.solar)) {\n            var _summedData$to_grid, _summedData$to_batter;\n            used_solar[start] = (summedData.solar[start] || 0) - (((_summedData$to_grid = summedData.to_grid) === null || _summedData$to_grid === void 0 ? void 0 : _summedData$to_grid[start]) || 0) - (((_summedData$to_batter = summedData.to_battery) === null || _summedData$to_batter === void 0 ? void 0 : _summedData$to_batter[start]) || 0);\n            if (used_solar[start] < 0) {\n              if (summedData.to_battery) {\n                var _summedData$from_grid;\n                grid_to_battery[start] = used_solar[start] * -1;\n                if (grid_to_battery[start] > (((_summedData$from_grid = summedData.from_grid) === null || _summedData$from_grid === void 0 ? void 0 : _summedData$from_grid[start]) || 0)) {\n                  var _summedData$from_grid2, _summedData$from_grid3;\n                  battery_to_grid[start] = Math.min(0, grid_to_battery[start] - (((_summedData$from_grid2 = summedData.from_grid) === null || _summedData$from_grid2 === void 0 ? void 0 : _summedData$from_grid2[start]) || 0));\n                  grid_to_battery[start] = (_summedData$from_grid3 = summedData.from_grid) === null || _summedData$from_grid3 === void 0 ? void 0 : _summedData$from_grid3[start];\n                }\n              }\n              used_solar[start] = 0;\n            }\n          }\n          combinedData.used_solar = {\n            used_solar\n          };\n        }\n        if (summedData.from_battery) {\n          if (summedData.to_grid) {\n            const used_battery = {};\n            for (const start of Object.keys(summedData.from_battery)) {\n              used_battery[start] = (summedData.from_battery[start] || 0) - (battery_to_grid[start] || 0);\n            }\n            combinedData.used_battery = {\n              used_battery\n            };\n          } else {\n            combinedData.used_battery = {\n              used_battery: summedData.from_battery\n            };\n          }\n        }\n        if (combinedData.from_grid && summedData.to_battery) {\n          const used_grid = {};\n          for (const start of Object.keys(grid_to_battery)) {\n            let noOfSources = 0;\n            let source;\n            for (const [key, stats] of Object.entries(combinedData.from_grid)) {\n              if (stats[start]) {\n                source = key;\n                noOfSources++;\n              }\n              if (noOfSources > 1) {\n                break;\n              }\n            }\n            if (noOfSources === 1) {\n              combinedData.from_grid[source][start] -= grid_to_battery[start] || 0;\n            } else {\n              let total_from_grid = 0;\n              Object.values(combinedData.from_grid).forEach(stats => {\n                total_from_grid += stats[start] || 0;\n                delete stats[start];\n              });\n              used_grid[start] = total_from_grid - (grid_to_battery[start] || 0);\n            }\n          }\n          combinedData.used_grid = {\n            used_grid\n          };\n        }\n        let allKeys = [];\n        Object.values(combinedData).forEach(sources => {\n          Object.values(sources).forEach(source => {\n            allKeys = allKeys.concat(Object.keys(source));\n          });\n        });\n        const uniqueKeys = Array.from(new Set(allKeys)).sort((a, b) => Number(a) - Number(b));\n        Object.entries(combinedData).forEach(([type, sources]) => {\n          Object.entries(sources).forEach(([statId, source], idx) => {\n            var _colors$type$override;\n            let borderColor = (_colors$type$override = colors[type].overrides) === null || _colors$type$override === void 0 ? void 0 : _colors$type$override[statId];\n            if (!borderColor) {\n              const modifiedColor = idx > 0 ? this.hass.themes.darkMode ? (0,_common_color_lab__WEBPACK_IMPORTED_MODULE_5__.labBrighten)((0,_common_color_convert_color__WEBPACK_IMPORTED_MODULE_4__.rgb2lab)((0,_common_color_convert_color__WEBPACK_IMPORTED_MODULE_4__.hex2rgb)(colors[type].base)), idx) : (0,_common_color_lab__WEBPACK_IMPORTED_MODULE_5__.labDarken)((0,_common_color_convert_color__WEBPACK_IMPORTED_MODULE_4__.rgb2lab)((0,_common_color_convert_color__WEBPACK_IMPORTED_MODULE_4__.hex2rgb)(colors[type].base)), idx) : undefined;\n              borderColor = modifiedColor ? (0,_common_color_convert_color__WEBPACK_IMPORTED_MODULE_4__.rgb2hex)((0,_common_color_convert_color__WEBPACK_IMPORTED_MODULE_4__.lab2rgb)(modifiedColor)) : colors[type].base;\n            }\n            const points = [];\n            // Process chart data.\n            for (const key of uniqueKeys) {\n              const value = source[key] || 0;\n              points.push({\n                x: Number(key),\n                y: value && [\"to_grid\", \"to_battery\"].includes(type) ? -1 * value : value\n              });\n            }\n            if (points.length === 1) {\n              points.push({\n                x: pointEndTime,\n                y: 0\n              });\n            }\n            data.push({\n              label: type in labels ? labels[type] : (0,_data_recorder__WEBPACK_IMPORTED_MODULE_10__.getStatisticLabel)(this.hass, statId, statisticsMetaData[statId]),\n              order: type === \"used_solar\" ? 1 : type === \"to_battery\" ? Object.keys(combinedData).length : idx + 2,\n              borderColor: compare ? borderColor + \"7F\" : borderColor,\n              backgroundColor: compare ? borderColor + \"32\" : borderColor + \"7F\",\n              stack: \"stack\",\n              data: points,\n              xAxisID: compare ? \"xAxisCompare\" : undefined\n            });\n          });\n        });\n        return data;\n      }\n    }, {\n      kind: \"get\",\n      static: true,\n      key: \"styles\",\n      value: function styles() {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_1__.css)`\n      ha-card {\n        height: 100%;\n      }\n      .card-header {\n        padding-bottom: 0;\n      }\n      .content {\n        padding: 16px;\n      }\n      .has-header {\n        padding-top: 0;\n      }\n      .no-data {\n        position: absolute;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 20%;\n        margin-left: 32px;\n        box-sizing: border-box;\n      }\n    `;\n      }\n    }]\n  };\n}, (0,_mixins_subscribe_mixin__WEBPACK_IMPORTED_MODULE_11__.SubscribeMixin)(lit__WEBPACK_IMPORTED_MODULE_1__.LitElement));\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/panels/lovelace/cards/energy/hui-energy-usage-graph-card.ts\n");

/***/ })

};
