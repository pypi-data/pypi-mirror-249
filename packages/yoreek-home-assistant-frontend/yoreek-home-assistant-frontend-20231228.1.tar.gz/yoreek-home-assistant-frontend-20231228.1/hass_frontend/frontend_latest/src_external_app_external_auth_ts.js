/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
export const id = "src_external_app_external_auth_ts";
export const ids = ["src_external_app_external_auth_ts"];
export const modules = {

/***/ "./src/external_app/external_auth.ts":
/*!*******************************************!*\
  !*** ./src/external_app/external_auth.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExternalAuth: () => (/* binding */ ExternalAuth),\n/* harmony export */   createExternalAuth: () => (/* binding */ createExternalAuth)\n/* harmony export */ });\n/* harmony import */ var home_assistant_js_websocket__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! home-assistant-js-websocket */ \"./node_modules/home-assistant-js-websocket/dist/auth.js\");\n/* harmony import */ var _external_messaging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./external_messaging */ \"./src/external_app/external_messaging.ts\");\n/**\n * Auth class that connects to a native app for authentication.\n */\n\n\nconst CALLBACK_SET_TOKEN = \"externalAuthSetToken\";\nconst CALLBACK_REVOKE_TOKEN = \"externalAuthRevokeToken\";\nif (!window.externalApp && !window.webkit) {\n  throw new Error(\"External auth requires either externalApp or webkit defined on Window object.\");\n}\nclass ExternalAuth extends home_assistant_js_websocket__WEBPACK_IMPORTED_MODULE_1__.Auth {\n  constructor(hassUrl) {\n    super({\n      hassUrl,\n      clientId: \"\",\n      refresh_token: \"\",\n      access_token: \"\",\n      expires_in: 0,\n      // This will trigger connection to do a refresh right away\n      expires: 0\n    });\n    this.external = void 0;\n    this._tokenCallbackPromise = void 0;\n  }\n  async refreshAccessToken(force) {\n    if (this._tokenCallbackPromise && !force) {\n      try {\n        await this._tokenCallbackPromise;\n        return;\n      } catch (err) {\n        // _tokenCallbackPromise is in a rejected state\n        // Clear the _tokenCallbackPromise and go on refreshing access token\n        this._tokenCallbackPromise = undefined;\n      }\n    }\n    const payload = {\n      callback: CALLBACK_SET_TOKEN\n    };\n    if (force) {\n      payload.force = true;\n    }\n    this._tokenCallbackPromise = new Promise((resolve, reject) => {\n      window[CALLBACK_SET_TOKEN] = (success, data) => success ? resolve(data) : reject(data);\n    });\n\n    // we sleep 1 microtask to get the promise to actually set it on the window object.\n    await Promise.resolve();\n    if (window.externalApp) {\n      window.externalApp.getExternalAuth(JSON.stringify(payload));\n    } else {\n      window.webkit.messageHandlers.getExternalAuth.postMessage(payload);\n    }\n    const tokens = await this._tokenCallbackPromise;\n    this.data.access_token = tokens.access_token;\n    this.data.expires = tokens.expires_in * 1000 + Date.now();\n    this._tokenCallbackPromise = undefined;\n  }\n  async revoke() {\n    const payload = {\n      callback: CALLBACK_REVOKE_TOKEN\n    };\n    const callbackPromise = new Promise((resolve, reject) => {\n      window[CALLBACK_REVOKE_TOKEN] = (success, data) => success ? resolve(data) : reject(data);\n    });\n\n    // we sleep 1 microtask to get the promise to actually set it on the window object.\n    await Promise.resolve();\n    if (window.externalApp) {\n      window.externalApp.revokeExternalAuth(JSON.stringify(payload));\n    } else {\n      window.webkit.messageHandlers.revokeExternalAuth.postMessage(payload);\n    }\n    await callbackPromise;\n  }\n}\nconst createExternalAuth = async hassUrl => {\n  var _window$externalApp;\n  const auth = new ExternalAuth(hassUrl);\n  if ((_window$externalApp = window.externalApp) !== null && _window$externalApp !== void 0 && _window$externalApp.externalBus || window.webkit && window.webkit.messageHandlers.externalBus) {\n    auth.external = new _external_messaging__WEBPACK_IMPORTED_MODULE_0__.ExternalMessaging();\n    await auth.external.attach();\n  }\n  return auth;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXh0ZXJuYWxfYXBwL2V4dGVybmFsX2F1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBc0NBO0FBQ0E7QUFHQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQVhBO0FBWUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUVBOztBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9tZS1hc3Npc3RhbnQtZnJvbnRlbmQvLi9zcmMvZXh0ZXJuYWxfYXBwL2V4dGVybmFsX2F1dGgudHM/ZGMxZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEF1dGggY2xhc3MgdGhhdCBjb25uZWN0cyB0byBhIG5hdGl2ZSBhcHAgZm9yIGF1dGhlbnRpY2F0aW9uLlxuICovXG5pbXBvcnQgeyBBdXRoIH0gZnJvbSBcImhvbWUtYXNzaXN0YW50LWpzLXdlYnNvY2tldFwiO1xuaW1wb3J0IHsgRXh0ZXJuYWxNZXNzYWdpbmcsIEVNTWVzc2FnZSB9IGZyb20gXCIuL2V4dGVybmFsX21lc3NhZ2luZ1wiO1xuXG5jb25zdCBDQUxMQkFDS19TRVRfVE9LRU4gPSBcImV4dGVybmFsQXV0aFNldFRva2VuXCI7XG5jb25zdCBDQUxMQkFDS19SRVZPS0VfVE9LRU4gPSBcImV4dGVybmFsQXV0aFJldm9rZVRva2VuXCI7XG5cbmludGVyZmFjZSBCYXNlUGF5bG9hZCB7XG4gIGNhbGxiYWNrOiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBHZXRFeHRlcm5hbEF1dGhQYXlsb2FkIGV4dGVuZHMgQmFzZVBheWxvYWQge1xuICBmb3JjZT86IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBSZWZyZXNoVG9rZW5SZXNwb25zZSB7XG4gIGFjY2Vzc190b2tlbjogc3RyaW5nO1xuICBleHBpcmVzX2luOiBudW1iZXI7XG59XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgZXh0ZXJuYWxBcHA/OiB7XG4gICAgICBnZXRFeHRlcm5hbEF1dGgocGF5bG9hZDogc3RyaW5nKTtcbiAgICAgIHJldm9rZUV4dGVybmFsQXV0aChwYXlsb2FkOiBzdHJpbmcpO1xuICAgICAgZXh0ZXJuYWxCdXMocGF5bG9hZDogc3RyaW5nKTtcbiAgICB9O1xuICAgIHdlYmtpdD86IHtcbiAgICAgIG1lc3NhZ2VIYW5kbGVyczoge1xuICAgICAgICBnZXRFeHRlcm5hbEF1dGg6IHtcbiAgICAgICAgICBwb3N0TWVzc2FnZShwYXlsb2FkOiBHZXRFeHRlcm5hbEF1dGhQYXlsb2FkKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV2b2tlRXh0ZXJuYWxBdXRoOiB7XG4gICAgICAgICAgcG9zdE1lc3NhZ2UocGF5bG9hZDogQmFzZVBheWxvYWQpO1xuICAgICAgICB9O1xuICAgICAgICBleHRlcm5hbEJ1czoge1xuICAgICAgICAgIHBvc3RNZXNzYWdlKHBheWxvYWQ6IEVNTWVzc2FnZSk7XG4gICAgICAgIH07XG4gICAgICB9O1xuICAgIH07XG4gIH1cbn1cblxuaWYgKCF3aW5kb3cuZXh0ZXJuYWxBcHAgJiYgIXdpbmRvdy53ZWJraXQpIHtcbiAgdGhyb3cgbmV3IEVycm9yKFxuICAgIFwiRXh0ZXJuYWwgYXV0aCByZXF1aXJlcyBlaXRoZXIgZXh0ZXJuYWxBcHAgb3Igd2Via2l0IGRlZmluZWQgb24gV2luZG93IG9iamVjdC5cIlxuICApO1xufVxuXG5leHBvcnQgY2xhc3MgRXh0ZXJuYWxBdXRoIGV4dGVuZHMgQXV0aCB7XG4gIHB1YmxpYyBleHRlcm5hbD86IEV4dGVybmFsTWVzc2FnaW5nO1xuXG4gIGNvbnN0cnVjdG9yKGhhc3NVcmw6IHN0cmluZykge1xuICAgIHN1cGVyKHtcbiAgICAgIGhhc3NVcmwsXG4gICAgICBjbGllbnRJZDogXCJcIixcbiAgICAgIHJlZnJlc2hfdG9rZW46IFwiXCIsXG4gICAgICBhY2Nlc3NfdG9rZW46IFwiXCIsXG4gICAgICBleHBpcmVzX2luOiAwLFxuICAgICAgLy8gVGhpcyB3aWxsIHRyaWdnZXIgY29ubmVjdGlvbiB0byBkbyBhIHJlZnJlc2ggcmlnaHQgYXdheVxuICAgICAgZXhwaXJlczogMCxcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgX3Rva2VuQ2FsbGJhY2tQcm9taXNlPzogUHJvbWlzZTxSZWZyZXNoVG9rZW5SZXNwb25zZT47XG5cbiAgcHVibGljIGFzeW5jIHJlZnJlc2hBY2Nlc3NUb2tlbihmb3JjZT86IGJvb2xlYW4pIHtcbiAgICBpZiAodGhpcy5fdG9rZW5DYWxsYmFja1Byb21pc2UgJiYgIWZvcmNlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCB0aGlzLl90b2tlbkNhbGxiYWNrUHJvbWlzZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSBjYXRjaCAoZXJyOiBhbnkpIHtcbiAgICAgICAgLy8gX3Rva2VuQ2FsbGJhY2tQcm9taXNlIGlzIGluIGEgcmVqZWN0ZWQgc3RhdGVcbiAgICAgICAgLy8gQ2xlYXIgdGhlIF90b2tlbkNhbGxiYWNrUHJvbWlzZSBhbmQgZ28gb24gcmVmcmVzaGluZyBhY2Nlc3MgdG9rZW5cbiAgICAgICAgdGhpcy5fdG9rZW5DYWxsYmFja1Byb21pc2UgPSB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHBheWxvYWQ6IEdldEV4dGVybmFsQXV0aFBheWxvYWQgPSB7XG4gICAgICBjYWxsYmFjazogQ0FMTEJBQ0tfU0VUX1RPS0VOLFxuICAgIH07XG4gICAgaWYgKGZvcmNlKSB7XG4gICAgICBwYXlsb2FkLmZvcmNlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB0aGlzLl90b2tlbkNhbGxiYWNrUHJvbWlzZSA9IG5ldyBQcm9taXNlPFJlZnJlc2hUb2tlblJlc3BvbnNlPihcbiAgICAgIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgd2luZG93W0NBTExCQUNLX1NFVF9UT0tFTl0gPSAoc3VjY2VzcywgZGF0YSkgPT5cbiAgICAgICAgICBzdWNjZXNzID8gcmVzb2x2ZShkYXRhKSA6IHJlamVjdChkYXRhKTtcbiAgICAgIH1cbiAgICApO1xuXG4gICAgLy8gd2Ugc2xlZXAgMSBtaWNyb3Rhc2sgdG8gZ2V0IHRoZSBwcm9taXNlIHRvIGFjdHVhbGx5IHNldCBpdCBvbiB0aGUgd2luZG93IG9iamVjdC5cbiAgICBhd2FpdCBQcm9taXNlLnJlc29sdmUoKTtcblxuICAgIGlmICh3aW5kb3cuZXh0ZXJuYWxBcHApIHtcbiAgICAgIHdpbmRvdy5leHRlcm5hbEFwcC5nZXRFeHRlcm5hbEF1dGgoSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aW5kb3cud2Via2l0IS5tZXNzYWdlSGFuZGxlcnMuZ2V0RXh0ZXJuYWxBdXRoLnBvc3RNZXNzYWdlKHBheWxvYWQpO1xuICAgIH1cblxuICAgIGNvbnN0IHRva2VucyA9IGF3YWl0IHRoaXMuX3Rva2VuQ2FsbGJhY2tQcm9taXNlO1xuXG4gICAgdGhpcy5kYXRhLmFjY2Vzc190b2tlbiA9IHRva2Vucy5hY2Nlc3NfdG9rZW47XG4gICAgdGhpcy5kYXRhLmV4cGlyZXMgPSB0b2tlbnMuZXhwaXJlc19pbiAqIDEwMDAgKyBEYXRlLm5vdygpO1xuICAgIHRoaXMuX3Rva2VuQ2FsbGJhY2tQcm9taXNlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgcHVibGljIGFzeW5jIHJldm9rZSgpIHtcbiAgICBjb25zdCBwYXlsb2FkOiBCYXNlUGF5bG9hZCA9IHsgY2FsbGJhY2s6IENBTExCQUNLX1JFVk9LRV9UT0tFTiB9O1xuXG4gICAgY29uc3QgY2FsbGJhY2tQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgd2luZG93W0NBTExCQUNLX1JFVk9LRV9UT0tFTl0gPSAoc3VjY2VzcywgZGF0YSkgPT5cbiAgICAgICAgc3VjY2VzcyA/IHJlc29sdmUoZGF0YSkgOiByZWplY3QoZGF0YSk7XG4gICAgfSk7XG5cbiAgICAvLyB3ZSBzbGVlcCAxIG1pY3JvdGFzayB0byBnZXQgdGhlIHByb21pc2UgdG8gYWN0dWFsbHkgc2V0IGl0IG9uIHRoZSB3aW5kb3cgb2JqZWN0LlxuICAgIGF3YWl0IFByb21pc2UucmVzb2x2ZSgpO1xuXG4gICAgaWYgKHdpbmRvdy5leHRlcm5hbEFwcCkge1xuICAgICAgd2luZG93LmV4dGVybmFsQXBwLnJldm9rZUV4dGVybmFsQXV0aChKU09OLnN0cmluZ2lmeShwYXlsb2FkKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdpbmRvdy53ZWJraXQhLm1lc3NhZ2VIYW5kbGVycy5yZXZva2VFeHRlcm5hbEF1dGgucG9zdE1lc3NhZ2UocGF5bG9hZCk7XG4gICAgfVxuXG4gICAgYXdhaXQgY2FsbGJhY2tQcm9taXNlO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVFeHRlcm5hbEF1dGggPSBhc3luYyAoaGFzc1VybDogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IGF1dGggPSBuZXcgRXh0ZXJuYWxBdXRoKGhhc3NVcmwpO1xuICBpZiAoXG4gICAgd2luZG93LmV4dGVybmFsQXBwPy5leHRlcm5hbEJ1cyB8fFxuICAgICh3aW5kb3cud2Via2l0ICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLmV4dGVybmFsQnVzKVxuICApIHtcbiAgICBhdXRoLmV4dGVybmFsID0gbmV3IEV4dGVybmFsTWVzc2FnaW5nKCk7XG4gICAgYXdhaXQgYXV0aC5leHRlcm5hbC5hdHRhY2goKTtcbiAgfVxuICByZXR1cm4gYXV0aDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/external_app/external_auth.ts\n");

/***/ }),

/***/ "./src/external_app/external_messaging.ts":
/*!************************************************!*\
  !*** ./src/external_app/external_messaging.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExternalMessaging: () => (/* binding */ ExternalMessaging)\n/* harmony export */ });\nconst CALLBACK_EXTERNAL_BUS = \"externalBus\";\nclass ExternalMessaging {\n  constructor() {\n    this.config = void 0;\n    this.commands = {};\n    this.msgId = 0;\n    this._commandHandler = void 0;\n  }\n  async attach() {\n    window[CALLBACK_EXTERNAL_BUS] = msg => this.receiveMessage(msg);\n    window.addEventListener(\"connection-status\", ev => this.fireMessage({\n      type: \"connection-status\",\n      payload: {\n        event: ev.detail\n      }\n    }));\n    this.config = await this.sendMessage({\n      type: \"config/get\"\n    });\n  }\n  addCommandHandler(handler) {\n    this._commandHandler = handler;\n  }\n\n  /**\n   * Send message to external app that expects a response.\n   * @param msg message to send\n   */\n  sendMessage(msg) {\n    const msgId = ++this.msgId;\n    msg.id = msgId;\n    this._sendExternal(msg);\n    return new Promise((resolve, reject) => {\n      this.commands[msgId] = {\n        resolve,\n        reject\n      };\n    });\n  }\n\n  /**\n   * Send message to external app without expecting a response.\n   * @param msg message to send\n   */\n  fireMessage(msg) {\n    if (!msg.id) {\n      msg.id = ++this.msgId;\n    }\n    this._sendExternal(msg);\n  }\n  receiveMessage(msg) {\n    if (true) {\n      // eslint-disable-next-line no-console\n      console.log(\"Receiving message from external app\", msg);\n    }\n    if (msg.type === \"command\") {\n      if (!this._commandHandler || !this._commandHandler(msg)) {\n        let code;\n        let message;\n        if (this._commandHandler) {\n          code = \"not_ready\";\n          message = \"Command handler not ready\";\n        } else {\n          code = \"unknown_command\";\n          message = `Unknown command ${msg.command}`;\n        }\n        // eslint-disable-next-line no-console\n        console.warn(message, msg);\n        this.fireMessage({\n          id: msg.id,\n          type: \"result\",\n          success: false,\n          error: {\n            code,\n            message\n          }\n        });\n      }\n      return;\n    }\n    const pendingCmd = this.commands[msg.id];\n    if (!pendingCmd) {\n      // eslint-disable-next-line no-console\n      console.warn(`Received unknown msg ID`, msg.id);\n      return;\n    }\n    if (msg.type === \"result\") {\n      if (msg.success) {\n        pendingCmd.resolve(msg.result);\n      } else {\n        pendingCmd.reject(msg.error);\n      }\n    }\n  }\n  _sendExternal(msg) {\n    if (true) {\n      // eslint-disable-next-line no-console\n      console.log(\"Sending message to external app\", msg);\n    }\n    if (window.externalApp) {\n      window.externalApp.externalBus(JSON.stringify(msg));\n    } else {\n      window.webkit.messageHandlers.externalBus.postMessage(msg);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/external_app/external_messaging.ts\n");

/***/ })

};
