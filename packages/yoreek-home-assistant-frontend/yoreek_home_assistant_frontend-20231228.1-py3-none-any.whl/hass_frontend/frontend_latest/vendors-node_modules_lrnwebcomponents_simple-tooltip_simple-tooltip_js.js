/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
export const id = "vendors-node_modules_lrnwebcomponents_simple-tooltip_simple-tooltip_js";
export const ids = ["vendors-node_modules_lrnwebcomponents_simple-tooltip_simple-tooltip_js"];
export const modules = {

/***/ "./node_modules/@lrnwebcomponents/simple-tooltip/simple-tooltip.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@lrnwebcomponents/simple-tooltip/simple-tooltip.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SimpleTooltip: () => (/* binding */ SimpleTooltip)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/**\n * Copyright 2020 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\n\n\n/**\n  * `simple-tooltip`\n  * `a simple tooltip forked from paper-tooltip with the same api minus apply removal`\n     ### Styling\n     The following custom properties and mixins are available for styling:\n \n     Custom property | Description | Default\n     ----------------|-------------|----------\n     `--simple-tooltip-background` | The background color of the tooltip | `#616161`\n     `--simple-tooltip-opacity` | The opacity of the tooltip | `0.9`\n     `--simple-tooltip-text-color` | The text color of the tooltip | `white`\n     `--simple-tooltip-delay-in` | Delay before tooltip starts to fade in | `500`\n     `--simple-tooltip-delay-out` | Delay before tooltip starts to fade out | `0`\n     `--simple-tooltip-duration-in` | Timing for animation when showing tooltip | `500`\n     `--simple-tooltip-duration-out` | Timing for animation when hiding tooltip | `0`\n  * @demo demo/index.html\n  * @element simple-tooltip\n  */\nclass SimpleTooltip extends lit__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n  //styles function\n  static get styles() {\n    return [(0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        :host {\n          display: block;\n          position: absolute;\n          outline: none;\n          z-index: 1002;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          -webkit-user-select: none;\n          user-select: none;\n          cursor: default;\n          pointer-events: none;\n        }\n\n        #tooltip {\n          display: block;\n          outline: none;\n          font-size: var(--simple-tooltip-font-size, 10px);\n          line-height: 1;\n          background-color: var(--simple-tooltip-background, #616161);\n          color: var(--simple-tooltip-text-color, white);\n          padding: 8px;\n          border-radius: var(--simple-tooltip-border-radius, 2px);\n          width: var(--simple-tooltip-width);\n        }\n\n        @keyframes keyFrameScaleUp {\n          0% {\n            transform: scale(0);\n          }\n\n          100% {\n            transform: scale(1);\n          }\n        }\n\n        @keyframes keyFrameScaleDown {\n          0% {\n            transform: scale(1);\n          }\n\n          100% {\n            transform: scale(0);\n          }\n        }\n\n        @keyframes keyFrameFadeInOpacity {\n          0% {\n            opacity: 0;\n          }\n\n          100% {\n            opacity: var(--simple-tooltip-opacity, 0.9);\n          }\n        }\n\n        @keyframes keyFrameFadeOutOpacity {\n          0% {\n            opacity: var(--simple-tooltip-opacity, 0.9);\n          }\n\n          100% {\n            opacity: 0;\n          }\n        }\n\n        @keyframes keyFrameSlideDownIn {\n          0% {\n            transform: translateY(-2000px);\n            opacity: 0;\n          }\n\n          10% {\n            opacity: 0.2;\n          }\n\n          100% {\n            transform: translateY(0);\n            opacity: var(--simple-tooltip-opacity, 0.9);\n          }\n        }\n\n        @keyframes keyFrameSlideDownOut {\n          0% {\n            transform: translateY(0);\n            opacity: var(--simple-tooltip-opacity, 0.9);\n          }\n\n          10% {\n            opacity: 0.2;\n          }\n\n          100% {\n            transform: translateY(-2000px);\n            opacity: 0;\n          }\n        }\n\n        .fade-in-animation {\n          opacity: 0;\n          animation-delay: var(--simple-tooltip-delay-in, 500ms);\n          animation-name: keyFrameFadeInOpacity;\n          animation-iteration-count: 1;\n          animation-timing-function: ease-in;\n          animation-duration: var(--simple-tooltip-duration-in, 500ms);\n          animation-fill-mode: forwards;\n        }\n\n        .fade-out-animation {\n          opacity: var(--simple-tooltip-opacity, 0.9);\n          animation-delay: var(--simple-tooltip-delay-out, 0ms);\n          animation-name: keyFrameFadeOutOpacity;\n          animation-iteration-count: 1;\n          animation-timing-function: ease-in;\n          animation-duration: var(--simple-tooltip-duration-out, 500ms);\n          animation-fill-mode: forwards;\n        }\n\n        .scale-up-animation {\n          transform: scale(0);\n          opacity: var(--simple-tooltip-opacity, 0.9);\n          animation-delay: var(--simple-tooltip-delay-in, 500ms);\n          animation-name: keyFrameScaleUp;\n          animation-iteration-count: 1;\n          animation-timing-function: ease-in;\n          animation-duration: var(--simple-tooltip-duration-in, 500ms);\n          animation-fill-mode: forwards;\n        }\n\n        .scale-down-animation {\n          transform: scale(1);\n          opacity: var(--simple-tooltip-opacity, 0.9);\n          animation-delay: var(--simple-tooltip-delay-out, 500ms);\n          animation-name: keyFrameScaleDown;\n          animation-iteration-count: 1;\n          animation-timing-function: ease-in;\n          animation-duration: var(--simple-tooltip-duration-out, 500ms);\n          animation-fill-mode: forwards;\n        }\n\n        .slide-down-animation {\n          transform: translateY(-2000px);\n          opacity: 0;\n          animation-delay: var(--simple-tooltip-delay-out, 500ms);\n          animation-name: keyFrameSlideDownIn;\n          animation-iteration-count: 1;\n          animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n          animation-duration: var(--simple-tooltip-duration-out, 500ms);\n          animation-fill-mode: forwards;\n        }\n\n        .slide-down-animation-out {\n          transform: translateY(0);\n          opacity: var(--simple-tooltip-opacity, 0.9);\n          animation-delay: var(--simple-tooltip-delay-out, 500ms);\n          animation-name: keyFrameSlideDownOut;\n          animation-iteration-count: 1;\n          animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n          animation-duration: var(--simple-tooltip-duration-out, 500ms);\n          animation-fill-mode: forwards;\n        }\n\n        .cancel-animation {\n          animation-delay: -30s !important;\n        }\n\n        .hidden {\n          position: absolute;\n          left: -10000px;\n          top: auto;\n          width: 1px;\n          height: 1px;\n          overflow: hidden;\n        }\n      `];\n  }\n\n  // render function\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` <div\n      id=\"tooltip\"\n      class=\"hidden\"\n      @animationend=\"${this._onAnimationEnd}\"\n    >\n      <slot></slot>\n    </div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      ...super.properties,\n      /**\n       * The id of the element that the tooltip is anchored to. This element\n       * must be a sibling of the tooltip. If this property is not set,\n       * then the tooltip will be centered to the parent node containing it.\n       */\n      for: {\n        type: String\n      },\n      /**\n       * Set this to true if you want to manually control when the tooltip\n       * is shown or hidden.\n       */\n      manualMode: {\n        type: Boolean,\n        attribute: \"manual-mode\"\n      },\n      /**\n       * Positions the tooltip to the top, right, bottom, left of its content.\n       */\n      position: {\n        type: String\n      },\n      /**\n       * If true, no parts of the tooltip will ever be shown offscreen.\n       */\n      fitToVisibleBounds: {\n        type: Boolean,\n        attribute: \"fit-to-visible-bounds\"\n      },\n      /**\n       * The spacing between the top of the tooltip and the element it is\n       * anchored to.\n       */\n      offset: {\n        type: Number\n      },\n      /**\n       * This property is deprecated, but left over so that it doesn't\n       * break exiting code. Please use `offset` instead. If both `offset` and\n       * `marginTop` are provided, `marginTop` will be ignored.\n       * @deprecated since version 1.0.3\n       */\n      marginTop: {\n        type: Number,\n        attribute: \"margin-top\"\n      },\n      /**\n       * The delay that will be applied before the `entry` animation is\n       * played when showing the tooltip.\n       */\n      animationDelay: {\n        type: Number,\n        attribute: \"animation-delay\"\n      },\n      /**\n       * The animation that will be played on entry.  This replaces the\n       * deprecated animationConfig.  Entries here will override the\n       * animationConfig settings.  You can enter your own animation\n       * by setting it to the css class name.\n       */\n      animationEntry: {\n        type: String,\n        attribute: \"animation-entry\"\n      },\n      /**\n       * The animation that will be played on exit.  This replaces the\n       * deprecated animationConfig.  Entries here will override the\n       * animationConfig settings.  You can enter your own animation\n       * by setting it to the css class name.\n       */\n      animationExit: {\n        type: String,\n        attribute: \"animation-exit\"\n      },\n      _showing: {\n        type: Boolean\n      }\n    };\n  }\n\n  /**\n   * Convention we use\n   */\n  static get tag() {\n    return \"simple-tooltip\";\n  }\n\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    this.manualMode = false;\n    this.position = \"bottom\";\n    this.fitToVisibleBounds = false;\n    this.offset = 14;\n    this.marginTop = 14;\n    this.animationEntry = \"\";\n    this.animationExit = \"\";\n    this.animationConfig = {\n      entry: [{\n        name: \"fade-in-animation\",\n        node: this,\n        timing: {\n          delay: 0\n        }\n      }],\n      exit: [{\n        name: \"fade-out-animation\",\n        node: this\n      }]\n    };\n    setTimeout(() => {\n      this.addEventListener(\"webkitAnimationEnd\", this._onAnimationEnd.bind(this));\n      this.addEventListener(\"mouseenter\", this.hide.bind(this));\n    }, 0);\n  }\n  /**\n   * Returns the target element that this tooltip is anchored to. It is\n   * either the element given by the `for` attribute, or the immediate parent\n   * of the tooltip.\n   *\n   * @type {Node}\n   */\n  get target() {\n    var parentNode = this.parentNode;\n    // If the parentNode is a document fragment, then we need to use the host.\n    var ownerRoot = this.getRootNode();\n    var target;\n    if (this.for) {\n      target = ownerRoot.querySelector(\"#\" + this.for);\n    } else {\n      target = parentNode.nodeType == Node.DOCUMENT_FRAGMENT_NODE ? ownerRoot.host : parentNode;\n    }\n    return target;\n  }\n  /**\n   * @return {void}\n   * @override\n   */\n  disconnectedCallback() {\n    if (!this.manualMode) {\n      this._removeListeners();\n    }\n    super.disconnectedCallback();\n  }\n\n  /**\n   * @deprecated Use show and hide instead.\n   * @param {string} type Either `entry` or `exit`\n   */\n  playAnimation(type) {\n    if (type === \"entry\") {\n      this.show();\n    } else if (type === \"exit\") {\n      this.hide();\n    }\n  }\n\n  /**\n   * Cancels the animation and either fully shows or fully hides tooltip\n   */\n  cancelAnimation() {\n    // Short-cut and cancel all animations and hide\n    this.shadowRoot.querySelector(\"#tooltip\").classList.add(\"cancel-animation\");\n  }\n\n  /**\n   * Shows the tooltip programatically\n   * @return {void}\n   */\n  show() {\n    // If the tooltip is already showing, there's nothing to do.\n    if (this._showing) return;\n    if (this.textContent.trim() === \"\") {\n      // Check if effective children are also empty\n      var allChildrenEmpty = true;\n      var effectiveChildren = this.children;\n      for (var i = 0; i < effectiveChildren.length; i++) {\n        if (effectiveChildren[i].textContent.trim() !== \"\") {\n          allChildrenEmpty = false;\n          break;\n        }\n      }\n      if (allChildrenEmpty) {\n        return;\n      }\n    }\n    this._showing = true;\n    this.shadowRoot.querySelector(\"#tooltip\").classList.remove(\"hidden\");\n    this.shadowRoot.querySelector(\"#tooltip\").classList.remove(\"cancel-animation\");\n    this.shadowRoot.querySelector(\"#tooltip\").classList.remove(this._getAnimationType(\"exit\"));\n    this.updatePosition();\n    this._animationPlaying = true;\n    this.shadowRoot.querySelector(\"#tooltip\").classList.add(this._getAnimationType(\"entry\"));\n  }\n\n  /**\n   * Hides the tooltip programatically\n   * @return {void}\n   */\n  hide() {\n    // If the tooltip is already hidden, there's nothing to do.\n    if (!this._showing) {\n      return;\n    }\n\n    // If the entry animation is still playing, don't try to play the exit\n    // animation since this will reset the opacity to 1. Just end the animation.\n    if (this._animationPlaying) {\n      this._showing = false;\n      this._cancelAnimation();\n      return;\n    } else {\n      // Play Exit Animation\n      this._onAnimationFinish();\n    }\n    this._showing = false;\n    this._animationPlaying = true;\n    // force hide if we are open too long\n    // helps older platforms and the monster known as Safari\n    clearTimeout(this.__debounceCancel);\n    this.__debounceCancel = setTimeout(() => {\n      this._cancelAnimation();\n    }, 5000);\n  }\n\n  /**\n   * @return {void}\n   */\n  updatePosition() {\n    if (!this._target || !this.offsetParent) return;\n    var offset = this.offset;\n    // If a marginTop has been provided by the user (pre 1.0.3), use it.\n    if (this.marginTop != 14 && this.offset == 14) offset = this.marginTop;\n    var parentRect = this.offsetParent.getBoundingClientRect();\n    var targetRect = this._target.getBoundingClientRect();\n    var thisRect = this.getBoundingClientRect();\n    var horizontalCenterOffset = (targetRect.width - thisRect.width) / 2;\n    var verticalCenterOffset = (targetRect.height - thisRect.height) / 2;\n    var targetLeft = targetRect.left - parentRect.left;\n    var targetTop = targetRect.top - parentRect.top;\n    var tooltipLeft, tooltipTop;\n    switch (this.position) {\n      case \"top\":\n        tooltipLeft = targetLeft + horizontalCenterOffset;\n        tooltipTop = targetTop - thisRect.height - offset;\n        break;\n      case \"bottom\":\n        tooltipLeft = targetLeft + horizontalCenterOffset;\n        tooltipTop = targetTop + targetRect.height + offset;\n        break;\n      case \"left\":\n        tooltipLeft = targetLeft - thisRect.width - offset;\n        tooltipTop = targetTop + verticalCenterOffset;\n        break;\n      case \"right\":\n        tooltipLeft = targetLeft + targetRect.width + offset;\n        tooltipTop = targetTop + verticalCenterOffset;\n        break;\n    }\n    // TODO(noms): This should use IronFitBehavior if possible.\n    if (this.fitToVisibleBounds) {\n      // Clip the left/right side\n      if (parentRect.left + tooltipLeft + thisRect.width > window.innerWidth) {\n        this.style.right = \"0px\";\n        this.style.left = \"auto\";\n      } else {\n        this.style.left = Math.max(0, tooltipLeft) + \"px\";\n        this.style.right = \"auto\";\n      }\n      // Clip the top/bottom side.\n      if (parentRect.top + tooltipTop + thisRect.height > window.innerHeight) {\n        this.style.bottom = parentRect.height - targetTop + offset + \"px\";\n        this.style.top = \"auto\";\n      } else {\n        this.style.top = Math.max(-parentRect.top, tooltipTop) + \"px\";\n        this.style.bottom = \"auto\";\n      }\n    } else {\n      this.style.left = tooltipLeft + \"px\";\n      this.style.top = tooltipTop + \"px\";\n    }\n  }\n  _addListeners() {\n    if (this._target) {\n      this._target.addEventListener(\"mouseenter\", this.show.bind(this));\n      this._target.addEventListener(\"focus\", this.show.bind(this));\n      this._target.addEventListener(\"mouseleave\", this.hide.bind(this));\n      this._target.addEventListener(\"blur\", this.hide.bind(this));\n      this._target.addEventListener(\"tap\", this.hide.bind(this));\n    }\n  }\n  _findTarget() {\n    if (!this.manualMode) this._removeListeners();\n    this._target = this.target;\n    if (!this.manualMode) this._addListeners();\n  }\n  _manualModeChanged() {\n    if (this.manualMode) this._removeListeners();else this._addListeners();\n  }\n  _cancelAnimation() {\n    // Short-cut and cancel all animations and hide\n    this.shadowRoot.querySelector(\"#tooltip\").classList.remove(this._getAnimationType(\"entry\"));\n    this.shadowRoot.querySelector(\"#tooltip\").classList.remove(this._getAnimationType(\"exit\"));\n    this.shadowRoot.querySelector(\"#tooltip\").classList.remove(\"cancel-animation\");\n    this.shadowRoot.querySelector(\"#tooltip\").classList.add(\"hidden\");\n  }\n  _onAnimationFinish() {\n    if (this._showing) {\n      this.shadowRoot.querySelector(\"#tooltip\").classList.remove(this._getAnimationType(\"entry\"));\n      this.shadowRoot.querySelector(\"#tooltip\").classList.remove(\"cancel-animation\");\n      this.shadowRoot.querySelector(\"#tooltip\").classList.add(this._getAnimationType(\"exit\"));\n    }\n  }\n  _onAnimationEnd() {\n    // If no longer showing add class hidden to completely hide tooltip\n    this._animationPlaying = false;\n    if (!this._showing) {\n      this.shadowRoot.querySelector(\"#tooltip\").classList.remove(this._getAnimationType(\"exit\"));\n      this.shadowRoot.querySelector(\"#tooltip\").classList.add(\"hidden\");\n    }\n  }\n  _getAnimationType(type) {\n    // These properties have priority over animationConfig values\n    if (type === \"entry\" && this.animationEntry !== \"\") {\n      return this.animationEntry;\n    }\n    if (type === \"exit\" && this.animationExit !== \"\") {\n      return this.animationExit;\n    }\n    // If no results then return the legacy value from animationConfig\n    if (this.animationConfig[type] && typeof this.animationConfig[type][0].name === \"string\") {\n      // Checking Timing and Update if necessary - Legacy for animationConfig\n      if (this.animationConfig[type][0].timing && this.animationConfig[type][0].timing.delay && this.animationConfig[type][0].timing.delay !== 0) {\n        var timingDelay = this.animationConfig[type][0].timing.delay;\n        // Has Timing Change - Update CSS\n        if (type === \"entry\") {\n          document.documentElement.style.setProperty(\"--simple-tooltip-delay-in\", timingDelay + \"ms\");\n        } else if (type === \"exit\") {\n          document.documentElement.style.setProperty(\"--simple-tooltip-delay-out\", timingDelay + \"ms\");\n        }\n      }\n      return this.animationConfig[type][0].name;\n    }\n  }\n  _removeListeners() {\n    if (this._target) {\n      this._target.removeEventListener(\"mouseover\", this.show.bind(this));\n      this._target.removeEventListener(\"focusin\", this.show.bind(this));\n      this._target.removeEventListener(\"mouseout\", this.hide.bind(this));\n      this._target.removeEventListener(\"focusout\", this.hide.bind(this));\n      this._target.removeEventListener(\"click\", this.hide.bind(this));\n    }\n  }\n  /**\n   * LitElement ready\n   */\n  firstUpdated(changedProperties) {\n    this.setAttribute(\"role\", \"tooltip\");\n    this.setAttribute(\"tabindex\", -1);\n    this._findTarget();\n  }\n  /**\n   * LitElement life cycle - property changed\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"for\") {\n        this._findTarget(this[propName], oldValue);\n      }\n      if (propName == \"manualMode\") {\n        this._manualModeChanged(this[propName], oldValue);\n      }\n      if (propName == \"animationDelay\") {\n        this._delayChange(this[propName], oldValue);\n      }\n    });\n  }\n  _delayChange(newValue) {\n    // Only Update delay if different value set\n    if (newValue !== 500) {\n      document.documentElement.style.setProperty(\"--simple-tooltip-delay-in\", newValue + \"ms\");\n    }\n  }\n}\ncustomElements.define(SimpleTooltip.tag, SimpleTooltip);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@lrnwebcomponents/simple-tooltip/simple-tooltip.js\n");

/***/ })

};
