# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: errors.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='errors.proto',
  package='gitaly',
  syntax='proto3',
  serialized_options=b'Z2gitlab.com/gitlab-org/gitaly/v15/proto/go/gitalypb',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0c\x65rrors.proto\x12\x06gitaly\x1a\x1egoogle/protobuf/duration.proto\"]\n\x10\x41\x63\x63\x65ssCheckError\x12\x15\n\rerror_message\x18\x01 \x01(\t\x12\x10\n\x08protocol\x18\x02 \x01(\t\x12\x0f\n\x07user_id\x18\x03 \x01(\t\x12\x0f\n\x07\x63hanges\x18\x04 \x01(\x0c\"\xae\x02\n\nIndexError\x12\x0c\n\x04path\x18\x01 \x01(\x0c\x12\x30\n\nerror_type\x18\x02 \x01(\x0e\x32\x1c.gitaly.IndexError.ErrorType\"\xdf\x01\n\tErrorType\x12\x1a\n\x16\x45RROR_TYPE_UNSPECIFIED\x10\x00\x12\x19\n\x15\x45RROR_TYPE_EMPTY_PATH\x10\x01\x12\x1b\n\x17\x45RROR_TYPE_INVALID_PATH\x10\x02\x12\x1f\n\x1b\x45RROR_TYPE_DIRECTORY_EXISTS\x10\x03\x12\"\n\x1e\x45RROR_TYPE_DIRECTORY_TRAVERSAL\x10\x04\x12\x1a\n\x16\x45RROR_TYPE_FILE_EXISTS\x10\x05\x12\x1d\n\x19\x45RROR_TYPE_FILE_NOT_FOUND\x10\x06\"%\n\x15InvalidRefFormatError\x12\x0c\n\x04refs\x18\x02 \x03(\x0c\"C\n\x10NotAncestorError\x12\x17\n\x0fparent_revision\x18\x01 \x01(\x0c\x12\x16\n\x0e\x63hild_revision\x18\x02 \x01(\x0c\"\x1c\n\x1a\x43hangesAlreadyAppliedError\"O\n\x12MergeConflictError\x12\x19\n\x11\x63onflicting_files\x18\x01 \x03(\x0c\x12\x1e\n\x16\x63onflicting_commit_ids\x18\x02 \x03(\t\"%\n\x15ReferencesLockedError\x12\x0c\n\x04refs\x18\x01 \x03(\x0c\";\n\x14ReferenceExistsError\x12\x16\n\x0ereference_name\x18\x01 \x01(\x0c\x12\x0b\n\x03oid\x18\x02 \x01(\t\"0\n\x16ReferenceNotFoundError\x12\x16\n\x0ereference_name\x18\x01 \x01(\x0c\"P\n\x14ReferenceUpdateError\x12\x16\n\x0ereference_name\x18\x01 \x01(\x0c\x12\x0f\n\x07old_oid\x18\x02 \x01(\t\x12\x0f\n\x07new_oid\x18\x03 \x01(\t\"(\n\x14ResolveRevisionError\x12\x10\n\x08revision\x18\x01 \x01(\x0c\"S\n\nLimitError\x12\x15\n\rerror_message\x18\x01 \x01(\t\x12.\n\x0bretry_after\x18\x02 \x01(\x0b\x32\x19.google.protobuf.Duration\"\xd8\x01\n\x0f\x43ustomHookError\x12\x0e\n\x06stdout\x18\x01 \x01(\x0c\x12\x0e\n\x06stderr\x18\x02 \x01(\x0c\x12\x33\n\thook_type\x18\x03 \x01(\x0e\x32 .gitaly.CustomHookError.HookType\"p\n\x08HookType\x12\x19\n\x15HOOK_TYPE_UNSPECIFIED\x10\x00\x12\x18\n\x14HOOK_TYPE_PRERECEIVE\x10\x01\x12\x14\n\x10HOOK_TYPE_UPDATE\x10\x02\x12\x19\n\x15HOOK_TYPE_POSTRECEIVE\x10\x03\x42\x34Z2gitlab.com/gitlab-org/gitaly/v15/proto/go/gitalypbb\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_duration__pb2.DESCRIPTOR,])



_INDEXERROR_ERRORTYPE = _descriptor.EnumDescriptor(
  name='ErrorType',
  full_name='gitaly.IndexError.ErrorType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ERROR_TYPE_UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERROR_TYPE_EMPTY_PATH', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERROR_TYPE_INVALID_PATH', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERROR_TYPE_DIRECTORY_EXISTS', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERROR_TYPE_DIRECTORY_TRAVERSAL', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERROR_TYPE_FILE_EXISTS', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERROR_TYPE_FILE_NOT_FOUND', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=231,
  serialized_end=454,
)
_sym_db.RegisterEnumDescriptor(_INDEXERROR_ERRORTYPE)

_CUSTOMHOOKERROR_HOOKTYPE = _descriptor.EnumDescriptor(
  name='HookType',
  full_name='gitaly.CustomHookError.HookType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HOOK_TYPE_UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HOOK_TYPE_PRERECEIVE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HOOK_TYPE_UPDATE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HOOK_TYPE_POSTRECEIVE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1139,
  serialized_end=1251,
)
_sym_db.RegisterEnumDescriptor(_CUSTOMHOOKERROR_HOOKTYPE)


_ACCESSCHECKERROR = _descriptor.Descriptor(
  name='AccessCheckError',
  full_name='gitaly.AccessCheckError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='gitaly.AccessCheckError.error_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='gitaly.AccessCheckError.protocol', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='user_id', full_name='gitaly.AccessCheckError.user_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='changes', full_name='gitaly.AccessCheckError.changes', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=56,
  serialized_end=149,
)


_INDEXERROR = _descriptor.Descriptor(
  name='IndexError',
  full_name='gitaly.IndexError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='gitaly.IndexError.path', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='error_type', full_name='gitaly.IndexError.error_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _INDEXERROR_ERRORTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=152,
  serialized_end=454,
)


_INVALIDREFFORMATERROR = _descriptor.Descriptor(
  name='InvalidRefFormatError',
  full_name='gitaly.InvalidRefFormatError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='refs', full_name='gitaly.InvalidRefFormatError.refs', index=0,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=456,
  serialized_end=493,
)


_NOTANCESTORERROR = _descriptor.Descriptor(
  name='NotAncestorError',
  full_name='gitaly.NotAncestorError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent_revision', full_name='gitaly.NotAncestorError.parent_revision', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='child_revision', full_name='gitaly.NotAncestorError.child_revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=495,
  serialized_end=562,
)


_CHANGESALREADYAPPLIEDERROR = _descriptor.Descriptor(
  name='ChangesAlreadyAppliedError',
  full_name='gitaly.ChangesAlreadyAppliedError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=564,
  serialized_end=592,
)


_MERGECONFLICTERROR = _descriptor.Descriptor(
  name='MergeConflictError',
  full_name='gitaly.MergeConflictError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='conflicting_files', full_name='gitaly.MergeConflictError.conflicting_files', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='conflicting_commit_ids', full_name='gitaly.MergeConflictError.conflicting_commit_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=594,
  serialized_end=673,
)


_REFERENCESLOCKEDERROR = _descriptor.Descriptor(
  name='ReferencesLockedError',
  full_name='gitaly.ReferencesLockedError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='refs', full_name='gitaly.ReferencesLockedError.refs', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=675,
  serialized_end=712,
)


_REFERENCEEXISTSERROR = _descriptor.Descriptor(
  name='ReferenceExistsError',
  full_name='gitaly.ReferenceExistsError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='reference_name', full_name='gitaly.ReferenceExistsError.reference_name', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='oid', full_name='gitaly.ReferenceExistsError.oid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=714,
  serialized_end=773,
)


_REFERENCENOTFOUNDERROR = _descriptor.Descriptor(
  name='ReferenceNotFoundError',
  full_name='gitaly.ReferenceNotFoundError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='reference_name', full_name='gitaly.ReferenceNotFoundError.reference_name', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=775,
  serialized_end=823,
)


_REFERENCEUPDATEERROR = _descriptor.Descriptor(
  name='ReferenceUpdateError',
  full_name='gitaly.ReferenceUpdateError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='reference_name', full_name='gitaly.ReferenceUpdateError.reference_name', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='old_oid', full_name='gitaly.ReferenceUpdateError.old_oid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_oid', full_name='gitaly.ReferenceUpdateError.new_oid', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=825,
  serialized_end=905,
)


_RESOLVEREVISIONERROR = _descriptor.Descriptor(
  name='ResolveRevisionError',
  full_name='gitaly.ResolveRevisionError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.ResolveRevisionError.revision', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=907,
  serialized_end=947,
)


_LIMITERROR = _descriptor.Descriptor(
  name='LimitError',
  full_name='gitaly.LimitError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='gitaly.LimitError.error_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='retry_after', full_name='gitaly.LimitError.retry_after', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=949,
  serialized_end=1032,
)


_CUSTOMHOOKERROR = _descriptor.Descriptor(
  name='CustomHookError',
  full_name='gitaly.CustomHookError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='stdout', full_name='gitaly.CustomHookError.stdout', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stderr', full_name='gitaly.CustomHookError.stderr', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hook_type', full_name='gitaly.CustomHookError.hook_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CUSTOMHOOKERROR_HOOKTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1035,
  serialized_end=1251,
)

_INDEXERROR.fields_by_name['error_type'].enum_type = _INDEXERROR_ERRORTYPE
_INDEXERROR_ERRORTYPE.containing_type = _INDEXERROR
_LIMITERROR.fields_by_name['retry_after'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_CUSTOMHOOKERROR.fields_by_name['hook_type'].enum_type = _CUSTOMHOOKERROR_HOOKTYPE
_CUSTOMHOOKERROR_HOOKTYPE.containing_type = _CUSTOMHOOKERROR
DESCRIPTOR.message_types_by_name['AccessCheckError'] = _ACCESSCHECKERROR
DESCRIPTOR.message_types_by_name['IndexError'] = _INDEXERROR
DESCRIPTOR.message_types_by_name['InvalidRefFormatError'] = _INVALIDREFFORMATERROR
DESCRIPTOR.message_types_by_name['NotAncestorError'] = _NOTANCESTORERROR
DESCRIPTOR.message_types_by_name['ChangesAlreadyAppliedError'] = _CHANGESALREADYAPPLIEDERROR
DESCRIPTOR.message_types_by_name['MergeConflictError'] = _MERGECONFLICTERROR
DESCRIPTOR.message_types_by_name['ReferencesLockedError'] = _REFERENCESLOCKEDERROR
DESCRIPTOR.message_types_by_name['ReferenceExistsError'] = _REFERENCEEXISTSERROR
DESCRIPTOR.message_types_by_name['ReferenceNotFoundError'] = _REFERENCENOTFOUNDERROR
DESCRIPTOR.message_types_by_name['ReferenceUpdateError'] = _REFERENCEUPDATEERROR
DESCRIPTOR.message_types_by_name['ResolveRevisionError'] = _RESOLVEREVISIONERROR
DESCRIPTOR.message_types_by_name['LimitError'] = _LIMITERROR
DESCRIPTOR.message_types_by_name['CustomHookError'] = _CUSTOMHOOKERROR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AccessCheckError = _reflection.GeneratedProtocolMessageType('AccessCheckError', (_message.Message,), {
  'DESCRIPTOR' : _ACCESSCHECKERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.AccessCheckError)
  })
_sym_db.RegisterMessage(AccessCheckError)

IndexError = _reflection.GeneratedProtocolMessageType('IndexError', (_message.Message,), {
  'DESCRIPTOR' : _INDEXERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.IndexError)
  })
_sym_db.RegisterMessage(IndexError)

InvalidRefFormatError = _reflection.GeneratedProtocolMessageType('InvalidRefFormatError', (_message.Message,), {
  'DESCRIPTOR' : _INVALIDREFFORMATERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.InvalidRefFormatError)
  })
_sym_db.RegisterMessage(InvalidRefFormatError)

NotAncestorError = _reflection.GeneratedProtocolMessageType('NotAncestorError', (_message.Message,), {
  'DESCRIPTOR' : _NOTANCESTORERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.NotAncestorError)
  })
_sym_db.RegisterMessage(NotAncestorError)

ChangesAlreadyAppliedError = _reflection.GeneratedProtocolMessageType('ChangesAlreadyAppliedError', (_message.Message,), {
  'DESCRIPTOR' : _CHANGESALREADYAPPLIEDERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ChangesAlreadyAppliedError)
  })
_sym_db.RegisterMessage(ChangesAlreadyAppliedError)

MergeConflictError = _reflection.GeneratedProtocolMessageType('MergeConflictError', (_message.Message,), {
  'DESCRIPTOR' : _MERGECONFLICTERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.MergeConflictError)
  })
_sym_db.RegisterMessage(MergeConflictError)

ReferencesLockedError = _reflection.GeneratedProtocolMessageType('ReferencesLockedError', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCESLOCKEDERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ReferencesLockedError)
  })
_sym_db.RegisterMessage(ReferencesLockedError)

ReferenceExistsError = _reflection.GeneratedProtocolMessageType('ReferenceExistsError', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCEEXISTSERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ReferenceExistsError)
  })
_sym_db.RegisterMessage(ReferenceExistsError)

ReferenceNotFoundError = _reflection.GeneratedProtocolMessageType('ReferenceNotFoundError', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCENOTFOUNDERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ReferenceNotFoundError)
  })
_sym_db.RegisterMessage(ReferenceNotFoundError)

ReferenceUpdateError = _reflection.GeneratedProtocolMessageType('ReferenceUpdateError', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCEUPDATEERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ReferenceUpdateError)
  })
_sym_db.RegisterMessage(ReferenceUpdateError)

ResolveRevisionError = _reflection.GeneratedProtocolMessageType('ResolveRevisionError', (_message.Message,), {
  'DESCRIPTOR' : _RESOLVEREVISIONERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ResolveRevisionError)
  })
_sym_db.RegisterMessage(ResolveRevisionError)

LimitError = _reflection.GeneratedProtocolMessageType('LimitError', (_message.Message,), {
  'DESCRIPTOR' : _LIMITERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.LimitError)
  })
_sym_db.RegisterMessage(LimitError)

CustomHookError = _reflection.GeneratedProtocolMessageType('CustomHookError', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMHOOKERROR,
  '__module__' : 'errors_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CustomHookError)
  })
_sym_db.RegisterMessage(CustomHookError)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
