{"version":3,"file":"vue-uswds.core.es.js","sources":["../node_modules/just-kebab-case/index.mjs","../src/utils/common.js","../src/utils/unique-id.js","../src/utils/constants.js","../src/core.js"],"sourcesContent":["var stringKebabCase = kebabCase;\n\n/*\n  kebabCase('the quick brown fox'); // 'the-quick-brown-fox'\n  kebabCase('the-quick-brown-fox'); // 'the-quick-brown-fox'\n  kebabCase('the_quick_brown_fox'); // 'the-quick-brown-fox'\n  kebabCase('theQuickBrownFox'); // 'the-quick-brown-fox'\n  kebabCase('theQuickBrown Fox'); // 'the-quick-brown-fox'\n  kebabCase('thequickbrownfox'); // 'thequickbrownfox'\n  kebabCase('the - quick * brown# fox'); // 'the-quick-brown-fox'\n  kebabCase('theQUICKBrownFox'); // 'the-quick-brown-fox'\n*/\n\n// any combination of spaces and punctuation characters\n// thanks to http://stackoverflow.com/a/25575009\nvar wordSeparators = /[\\s\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~]+/;\nvar capital_plus_lower = /[A-ZÀ-Ý\\u00C0-\\u00D6\\u00D9-\\u00DD][a-zà-ÿ]/g;\nvar capitals = /[A-ZÀ-Ý\\u00C0-\\u00D6\\u00D9-\\u00DD]+/g;\n\nfunction kebabCase(str) {\n  // replace word starts with space + lower case equivalent for later parsing\n  // 1) treat cap + lower as start of new word\n  str = str.replace(capital_plus_lower, function(match) {\n    // match is one caps followed by one non-cap\n    return ' ' + (match[0].toLowerCase() || match[0]) + match[1];\n  });\n  // 2) treat all remaining capitals as words\n  str = str.replace(capitals, function(match) {\n    // match is a series of caps\n    return ' ' + match.toLowerCase();\n  });\n  return str\n    .trim()\n    .split(wordSeparators)\n    .join('-')\n    .replace(/^-/, '')\n    .replace(/-\\s*$/, '');\n}\n\nexport {stringKebabCase as default};\n","import justKebabCase from 'just-kebab-case'\nimport split from 'just-split'\n\nexport const objectHasKey = (object, key) =>\n  Object.prototype.hasOwnProperty.call(object, key)\n\nexport const kebabCase = value => justKebabCase(value)\n\nexport const escapeRegExp = string =>\n  string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\nexport const splitArray = (array, splitAt) => split(array, splitAt)\n","import { getCurrentInstance } from 'vue'\nimport { kebabCase } from '@/utils/common.js'\n\nconst idPrefix = 'vuswds-id-'\nconst idRegistry = {}\n\n// Adapted from:\n// https://github.com/wearebraid/vue-formulate/blob/master/src/Formulate.js\nexport function nextId(componentName = '') {\n  const vm = getCurrentInstance()\n  const route = vm.appContext.config.globalProperties?.$route\n\n  const pathPrefix = route?.path ? kebabCase(route.path) : 'global'\n\n  if (!idRegistry[pathPrefix]) {\n    idRegistry[pathPrefix] = 0\n  }\n\n  return `${idPrefix}${pathPrefix}-${kebabCase(componentName)}-${++idRegistry[\n    pathPrefix\n  ]}`\n}\n","export const PREFIX_SEPARATOR = ':'\nexport const GRID_NAMESPACE = 'grid-'\nexport const UTILITY_NAMESPACE = 'u-'\nexport const IMAGE_PATH = '/assets/img'\nexport const SVG_SPRITE_PATH = '/assets/img/sprite.svg'\nexport const ROUTER_COMPONENT_NAME = null\nexport const MOBILE_MENU_BREAKPOINT = '64em'\nexport const FOOTER_NAV_COLLAPSIBLE_BREAKPOINT = '30em'\nexport const MIN_DATE = '0000-01-01'\nexport const MAX_DATE = '9999-12-31'\nexport const USA_DATE_REGEX_PATTERN =\n  /^(0[1-9]|1[0-2])\\/(0[1-9]|[12][0-9]|3[01])\\/\\d{4}$/\nexport const ISO_DATE_REGEX_PATTERN =\n  /^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/\nexport const MONTH_LABELS = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n]\nexport const DAY_OF_WEEK_LABELS = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n]\nexport const DAY_OF_WEEK_ABBREVIATION_LABELS = [\n  'S',\n  'M',\n  'T',\n  'W',\n  'Th',\n  'Fr',\n  'S',\n]\nexport const YEAR_GROUP = 12\n","import { version } from '../package.json'\nimport { nextId } from '@/utils/unique-id.js'\nimport {\n  PREFIX_SEPARATOR,\n  GRID_NAMESPACE,\n  UTILITY_NAMESPACE,\n  IMAGE_PATH,\n  SVG_SPRITE_PATH,\n  ROUTER_COMPONENT_NAME,\n  MOBILE_MENU_BREAKPOINT,\n  FOOTER_NAV_COLLAPSIBLE_BREAKPOINT,\n} from '@/utils/constants.js'\n\nexport default {\n  install: (app, options) => {\n    const customOptions = options || {}\n\n    const vueUswdsOptions = {\n      prefixSeparator: PREFIX_SEPARATOR,\n      gridNamespace: GRID_NAMESPACE,\n      utilityNamespace: UTILITY_NAMESPACE,\n      imagePath: IMAGE_PATH,\n      svgSpritePath: SVG_SPRITE_PATH,\n      routerComponentName: ROUTER_COMPONENT_NAME,\n      mobileMenuBreakpoint: MOBILE_MENU_BREAKPOINT,\n      footerNavBigBreakpoint: FOOTER_NAV_COLLAPSIBLE_BREAKPOINT,\n      ...customOptions,\n      version: version,\n    }\n\n    if (!app.config.globalProperties.$vueUswds) {\n      app.config.globalProperties.$vueUswds = vueUswdsOptions\n    }\n\n    app.provide('vueUswds', vueUswdsOptions)\n    app.provide('nextId', nextId)\n  },\n}\n"],"names":["kebabCase","justKebabCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,kBAAkBA;AAetB,IAAI,iBAAiB;AACrB,IAAI,qBAAqB;AACzB,IAAI,WAAW;AAEf,qBAAmB,KAAK;AAGtB,QAAM,IAAI,QAAQ,oBAAoB,SAAS,OAAO;AAEpD,WAAO,MAAO,OAAM,GAAG,YAAW,KAAM,MAAM,MAAM,MAAM;AAAA,EAC9D,CAAG;AAED,QAAM,IAAI,QAAQ,UAAU,SAAS,OAAO;AAE1C,WAAO,MAAM,MAAM;EACvB,CAAG;AACD,SAAO,IACJ,KAAM,EACN,MAAM,cAAc,EACpB,KAAK,GAAG,EACR,QAAQ,MAAM,EAAE,EAChB,QAAQ,SAAS,EAAE;AACxB;AC/BO,MAAM,YAAY,WAASC,gBAAc,KAAK;ACHrD,MAAM,WAAW;AACjB,MAAM,aAAa,CAAE;AAId,gBAAgB,gBAAgB,IAAI;;AACzC,QAAM,KAAK,mBAAoB;AAC/B,QAAM,QAAQ,SAAG,WAAW,OAAO,qBAArB,mBAAuC;AAErD,QAAM,aAAa,gCAAO,QAAO,UAAU,MAAM,IAAI,IAAI;AAEzD,MAAI,CAAC,WAAW,aAAa;AAC3B,eAAW,cAAc;AAAA,EAC1B;AAED,SAAO,GAAG,WAAW,cAAc,UAAU,aAAa,KAAK,EAAE,WAC/D;AAEJ;ACrBO,MAAM,mBAAmB;AACzB,MAAM,iBAAiB;AACvB,MAAM,oBAAoB;AAC1B,MAAM,aAAa;AACnB,MAAM,kBAAkB;AACxB,MAAM,wBAAwB;AAC9B,MAAM,yBAAyB;AAC/B,MAAM,oCAAoC;ACMjD,IAAe,OAAA;AAAA,EACb,SAAS,CAAC,KAAK,YAAY;AACzB,UAAM,gBAAgB,WAAW,CAAE;AAEnC,UAAM,kBAAkB;AAAA,MACtB,iBAAiB;AAAA,MACjB,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,sBAAsB;AAAA,MACtB,wBAAwB;AAAA,OACrB,gBATmB;AAAA,MAUtB;AAAA,IACD;AAED,QAAI,CAAC,IAAI,OAAO,iBAAiB,WAAW;AAC1C,UAAI,OAAO,iBAAiB,YAAY;AAAA,IACzC;AAED,QAAI,QAAQ,YAAY,eAAe;AACvC,QAAI,QAAQ,UAAU,MAAM;AAAA,EAC7B;AACH;;"}