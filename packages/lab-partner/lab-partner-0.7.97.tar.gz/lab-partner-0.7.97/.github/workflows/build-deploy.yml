name: Build and Deploy
on: [push, workflow_dispatch]
jobs:
  Build-and-Deploy:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Add GITHUB_SHA_SHORT to env
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
      - name: Add DOCKERHUB_USERNAME to env
        run: echo "DOCKERHUB_USERNAME=enclarify" >> $GITHUB_ENV
      - name: Login to Docker Hub
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup docker build cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
      - name: Build lab-partner-cli docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            LAB_VERSION=${{ github.ref_name }}
          file: ./Dockerfile
          push: false
          load: true
          target: lab_cli
          tags: ${{ env.DOCKERHUB_USERNAME }}/lab-partner-cli:${{ github.ref_name }}
      - name: Build lab-partner python packages
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            LAB_VERSION=${{ github.ref_name }}
          file: ./Dockerfile
          push: false
          load: true
          target: lab_packages
          tags: ${{ env.DOCKERHUB_USERNAME }}/lab-partner-packages:${{ github.ref_name }}
      - name: Copy python wheels from docker image
        run: |
          container_id=$(docker create ${{ env.DOCKERHUB_USERNAME }}/lab-partner-packages:${{ github.ref_name }}) \
          && mkdir -p dist \
          && docker cp ${container_id}:/opt/lab/dist/init/. dist/ \
          && docker rm -f ${container_id}
      - name: Publish package distributions to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print-hash: true
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: List images
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          docker images
      - name: Publish lab cli docker image
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          docker push ${{ env.DOCKERHUB_USERNAME }}/lab-partner-cli:${{ github.ref_name }}