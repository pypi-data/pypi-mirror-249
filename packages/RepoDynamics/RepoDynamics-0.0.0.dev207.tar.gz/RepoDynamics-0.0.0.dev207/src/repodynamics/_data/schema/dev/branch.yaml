$schema: https://json-schema.org/draft/2020-12/schema
title: Branch Configuration
description: Names, prefixes, and protection rules for different branch types
type: object
default: { }
additionalProperties: false
properties:
  main:
    description: Configurations for the main (aka trunk, default) branch
    type: object
    default: { }
    additionalProperties: false
    properties:
      name:
        description: Name of the default branch
        type: string
        default: main
      ruleset:
        default:
          enforcement: enabled
          rule:
            protect_creation: true
            protect_modification:
              allow_fetch_and_merge: false
            protect_deletion: true
            protect_force_push: true
            require_linear_history: true
            require_signatures: true
            require_pull_request:
              dismiss_stale_reviews_on_push: true
              require_code_owner_review: true
              require_last_push_approval: true
              require_review_thread_resolution: true
              required_approving_review_count: 1
        $ref: "#/definitions/ruleset"
    required: [ name, protection ]
  release:
    description: Configurations for release branches
    default: { }
    $ref: "#/definitions/branch_group"
  pre-release:
    description: Pre-release branch
    default: { }
    $ref: "#/definitions/branch_group"
  implementation:
    description: Implementation branch
    default: { }
    $ref: "#/definitions/branch_group"
  development:
    description: Development branch
    default: {}
    $ref: "#/definitions/branch_group"
  auto-update:
    description: Auto-update branch
    default: { }
    $ref: "#/definitions/branch_group"
required: [ main, release, pre-release, implementation, development, auto-update ]


definitions:
  ruleset:
    description: Configurations for branch protection rules
    type: object
    additionalProperties: false
    properties:
      enforcement:
        description: |
          The enforcement level of the ruleset; one of:
          - 'enabled': Enforce rules.
          - 'disabled': Do not enforce rules.
          - 'evaluate': Allows admins to test rules before enforcing them.
            Admins can view insights on the Rule Insights page.
            This is only available with GitHub Enterprise.
        type: string
        enum: [ disabled, evaluate, enabled ]
        default: enabled
      bypass_actors:
        description: List of roles, teams, or apps allowed to bypass the rules.
        type: array
        default: [ ]
        uniqueItems: true
        items:
          type: object
          additionalProperties: false
          properties:
            id:
              description: |
                The account ID of the actor.
                If `type` is organization_admin, this should be 1.
              type: integer
            type:
              description: The type of actor.
              type: string
              enum: [ organization_admin, repository_role, team, integration ]
            mode:
              description: |
                When the specified actor can bypass the ruleset.
                'pull_request' means that an actor can only bypass rules on pull requests.
              type: string
              enum: [ always, pull_request ]
          required: [ id, type, mode ]
      rule:
        description: Rules to enforce for the branch.
        type: object
        default : { }
        additionalProperties: false
        properties:
          protect_creation:
            description: |
              Prevent users from creating matching refs.
            type: boolean
          protect_modification:
            description: |
              Prevent users from updating matching refs.
              Omitting this key will disable the protection rule.
            type: object
            additionalProperties: false
            properties:
              allow_fetch_and_merge:
                description: Still allow the branch to pull changes from its upstream repository.
                type: boolean
            required: [ allow_fetch_and_merge ]
          protect_deletion:
            description: |
              Prevent users from deleting matching refs.
              Omitting this key is equivalent to setting it to `false`.
            type: boolean
          protect_force_push:
            description: Prevent users from force-pushing to matching refs.
            type: boolean
          require_linear_history:
            description: Prevent merge commits from being pushed to matching refs.
            type: boolean
          require_signatures:
            description: Require commits on matching refs to have verified signatures.
            type: boolean
          require_pull_request:
            description: |
              Require all commits be made to a non-target branch
              and submitted via a pull request before they can be merged.
              Omitting this key will disable the protection rule.
            type: object
            additionalProperties: false
            properties:
              dismiss_stale_reviews_on_push:
                description: |
                  Automatically dismiss previous approving pull-request reviews
                  when new reviewable commits are pushed.
                type: boolean
              require_code_owner_review:
                description: |
                  Require an approving review in pull requests including files
                  with a designated code owner.
                type: boolean
              require_last_push_approval:
                description: |
                  Require an approving review on the most recent reviewable push
                  by someone other than the actor performing the push.
                type: boolean
              require_review_thread_resolution:
                description: |
                  Require all conversations on code to be resolved before a pull request
                  can be merged into matching refs.
                type: boolean
              required_approving_review_count:
                description: |
                  The number of approving reviews that are required
                  before a pull request can be merged into matching refs.
                type: integer
            required:
              - dismiss_stale_reviews_on_push
              - require_code_owner_review
              - require_last_push_approval
              - require_review_thread_resolution
              - required_approving_review_count
          require_status_checks:
            description: |
              Require status checks to pass before a pull request can be merged into matching refs.
              Omitting this key will disable the protection rule.
            type: object
            additionalProperties: false
            properties:
              contexts:
                description: The list of required status checks.
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  additionalProperties: false
                  properties:
                    name:
                      description: The name of the status check context.
                      type: string
                    integration_id:
                      description: The optional integration ID that this status check must originate from.
                      type: integer
                  required: [ context ]
              strict:
                description: Require status checks to pass on the latest commit.
                type: boolean
                default: true
            required: [ contexts, strict ]
          required_deployment_environments:
            description: |
              A list of environments that must be successfully deployed into
              before merging into matching refs is allowed.
              Omitting this key will disable the protection rule.
            type: array
            uniqueItems: true
            items:
              type: string
    required: [ enforcement, bypass_actors, rule ]
  branch_group:
    type: object
    default: { }
    properties:
      prefix:
        description: Prefix for the branch name
        type: string
      ruleset:
        $ref: "#/definitions/ruleset"
    required: [ prefix ]