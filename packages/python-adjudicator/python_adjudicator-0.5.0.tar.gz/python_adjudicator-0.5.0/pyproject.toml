[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "python-adjudicator"
version = "0.5.0"
description = ""
authors = ["Niklas Rosenstein <rosensteinniklas@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "adjudicator", from = "src" }]
classifiers = []
keywords = []

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/NiklasRosenstein/python-adjudicator/issues"
# Documentation = ""
Homepage = "https://github.com/NiklasRosenstein/python-adjudicator"
Repository = "https://github.com/NiklasRosenstein/python-adjudicator"

[tool.poetry.dependencies]
python = "^3.10"
networkx = "^3.1"
typeapi = "^2.1.0"

[tool.poetry.dev-dependencies]
black = "*"
flake8 = "*"
isort = "*"
mypy = "*"
pycln = "^2.1.3"
pytest = "*"
networkx-stubs = "^0.0.1"
python-equilibrium = "^0.4.0.post0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
# ...

[tool.slap]
typed = true

[tool.slap.test]
check  = "slap check"
black  = "black --check examples/ src/ tests/ --exclude examples/hello.py"
flake8 = "flake8 examples/ src/ tests/ --exclude examples/hello.py"
isort  = "isort --check-only examples/ src/ tests/ --extend-skip examples/hello.py"
mypy   = "dmypy run examples/ src/"
pycln  = "pycln examples/ src/ tests/ --check"
pytest = "pytest src/ tests/ -vv --doctest-modules"

[tool.slap.run]
"docs:build" = ">&2 echo 'Not implemented' && exit 1"
fmt          = """
pycln src/ tests/ examples/ &&
black src/ tests/ examples/ --exclude examples/hello.py &&
isort src/ tests/ examples/ --extend-skip examples/hello.py &&
mksync README.md -i
"""

[tool.mypy]
python_version = "3.10"
explicit_package_bases = true
mypy_path = ["src"]
namespace_packages = true
pretty = true
show_error_codes = true
show_error_context = true
strict = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true

[tool.isort]
profile = "black"
line_length = 120
combine_as_imports = true

[tool.black]
line-length = 120
