Metadata-Version: 2.1
Name: py-SPSPaRTAN
Version: 1.0.0
Summary: SPaRTAN python version
Home-page: https://github.com/osmanbeyoglulab/SPaRTAN/tree/main/py-SPaRTAN
Author: Xiaojun Ma
Author-email: xim33@pitt.edu
License: MIT
Project-URL: Documentation, https://github.com/osmanbeyoglulab/SPaRTAN/tree/main/py-SPaRTAN
Project-URL: Code, https://github.com/osmanbeyoglulab/SPaRTAN/tree/main/py-SPaRTAN
Classifier: Development Status :: 1 - Planning
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: C
Classifier: Programming Language :: Cython
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: numpy>=1.17
Requires-Dist: pandas
Requires-Dist: scipy
Requires-Dist: scikit-learn
Requires-Dist: matplotlib
Provides-Extra: dev
Requires-Dist: pytest>=5.1; extra == "dev"
Requires-Dist: flake8>=3.7; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx-rtd-theme; extra == "docs"

Cython package example
======================

Purpose
-------

The purpose of this package is to demonstrate how to organize a project developed using Cython.
It shows a suitable folder structure according to the best practices, how to create extension modules with Cython, how to implement functions in C and make them available to Cython, how to include package data, how to write a `setup.py` script that allows users without Cython to install the package nonetheless.

Installation
------------

### From a repository checkout

```bash
make install
```
or
```bash
CYTHONIZE=1 pip install --user .
```

### From PyPi

```bash
pip install --user cython-package-example
```
