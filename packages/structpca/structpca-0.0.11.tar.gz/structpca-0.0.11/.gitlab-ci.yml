image: "python:3.8"

stages:
    - linting
    - tests
    - build
    - publish


black:
  stage: linting
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
    - black --check --verbose -- .
  tags:
    - docker

pylint:
  stage: linting
  before_script:
    - pip install pylint
  script:
    - find . -type f -name "*.py" |
      xargs pylint
          --disable=import-error,missing-module-docstring
          --load-plugins=pylint.extensions.docparams

run_tests:
  stage: tests
  image: "registry.forgemia.inra.fr/bbatardiere/docker-image-pandas-torch-sphinx-jupyter"
  before_script:
    - pip install '.[tests]'
  script:
    - pip install .
    - cd tests
    - pytest .
  only:
    - main
    - dev


build_package:
  stage: build
  image: "registry.forgemia.inra.fr/bbatardiere/docker-image-pandas-torch-sphinx-jupyter"
  before_script:
    - pip install build
  script:
    - rm -rf dist/
    - python -m build
  artifacts:
    untracked: true
    expire_in: 1 week
  tags:
    - docker


publish_package:
  stage: publish
  before_script:
    - pip install twine
  script:
    - TWINE_PASSWORD=${structpca_token} TWINE_USERNAME=__token__ python -m twine upload dist/*
  tags:
    - docker
  only:
    - tags

build_doc:
  stage: build
  image: "registry.forgemia.inra.fr/bbatardiere/docker-image-pandas-torch-sphinx-jupyter"
  before_script:
    - pip install '.[doc]'
  script:
    - pip install .
    - make -C doc html
  artifacts:
    untracked: true
    expire_in: 1 week
  tags:
    - docker

pages:
  stage: publish
  script:
    - rm -rf public/
    - cp -r doc/build/html public/
  artifacts:
    paths:
    - public
  tags:
    - docker
  only:
    - tags
