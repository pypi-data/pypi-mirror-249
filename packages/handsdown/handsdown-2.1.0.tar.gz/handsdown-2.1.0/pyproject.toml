[tool.black]
line-length = 100
include = "(handsdown|tests)/.*\\.pyi?$"
target-version = ["py37", "py38", "py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["handsdown", "tests"]
src_paths = []


[tool.poetry]
name = "handsdown"
version = "2.1.0"
description = "Python docstring-based documentation generator for lazy perfectionists."
authors = ["Vlad Emelianov <vlad.emelianov.nz@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://vemel.github.io/handsdown/"
repository = "https://github.com/vemel/handsdown"
documentation = "https://vemel.github.io/handsdown/"
keywords = ["autodoc", "documentation", "generator", "markdown"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Framework :: Django",
    "Framework :: Flask",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{ include = "handsdown" }]
include = ["handsdown/py.typed", "handsdown/templates/**/*.jinja2"]

[tool.poetry.scripts]
handsdown = 'handsdown.main:main'

[tool.poetry.urls]
"Documentation" = "https://handsdown.readthedocs.io/en/latest/"
"Source" = "https://github.com/vemel/handsdown"
"Bug Tracker" = "https://github.com/vemel/handsdown/issues"

[tool.poetry.dependencies]
python = "^3.7"
pip = "*"
typed-ast = "*"
importlib-resources = "*"
jinja2 = "*"
black = "*"

[tool.poetry.dev-dependencies]
isort = { version = "*", python = ">=3.10" }
black = { version = "*", python = ">=3.10" }
mypy = { version = "*", python = ">=3.10" }
flake8 = { version = "*", python = ">=3.10" }
pytest = { version = "*", python = ">=3.10" }
pytest-cov = { version = "*", python = ">=3.10" }
vulture = { version = "*", python = ">=3.10" }
importlib-metadata = { version = "*", python = "<3.8" }
rope = { version = "*", python = ">=3.10" }
types-setuptools = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@overload",
]
ignore_errors = true
omit = ["tests/*"]

[tool.pyright]
include = ["handsdown"]
exclude = ["**/__pycache__", "tests", "typestubs"]
reportMissingImports = true
reportMissingTypeStubs = true
reportMissingTypeArgument = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportUnknownParameterType = "error"
pythonVersion = "3.7"
