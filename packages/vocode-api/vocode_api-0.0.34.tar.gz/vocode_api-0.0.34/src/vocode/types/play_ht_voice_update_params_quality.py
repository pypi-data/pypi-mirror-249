# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PlayHtVoiceUpdateParamsQuality(str, enum.Enum):
    FASTER = "faster"
    DRAFT = "draft"
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    PREMIUM = "premium"

    def visit(
        self,
        faster: typing.Callable[[], T_Result],
        draft: typing.Callable[[], T_Result],
        low: typing.Callable[[], T_Result],
        medium: typing.Callable[[], T_Result],
        high: typing.Callable[[], T_Result],
        premium: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PlayHtVoiceUpdateParamsQuality.FASTER:
            return faster()
        if self is PlayHtVoiceUpdateParamsQuality.DRAFT:
            return draft()
        if self is PlayHtVoiceUpdateParamsQuality.LOW:
            return low()
        if self is PlayHtVoiceUpdateParamsQuality.MEDIUM:
            return medium()
        if self is PlayHtVoiceUpdateParamsQuality.HIGH:
            return high()
        if self is PlayHtVoiceUpdateParamsQuality.PREMIUM:
            return premium()
