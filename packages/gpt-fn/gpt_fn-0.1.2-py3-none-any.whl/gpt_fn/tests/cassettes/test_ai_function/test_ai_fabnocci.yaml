interactions:
- request:
    body: '{"messages": [{"role": "system", "content": "You are now the following
      python function:\n```\n# return fabnocci number\ndef fabnocci(n: int):\n```\nOnly
      respond with your `return` value.\n- The output should be formatted as a JSON
      instance that conforms to the JSON schema below.\n\n- As an example, for the
      schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a
      list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}},
      \"required\": [\"foo\"]}}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted
      instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}}
      is not well-formatted.\n\n- Here is the output schema:\n```\n{\"properties\":
      {\"ret\": {\"title\": \"Ret\", \"type\": \"integer\"}}, \"required\": [\"ret\"]}\n```"},
      {"role": "user", "content": "fabnocci(10)"}], "model": "gpt-3.5-turbo", "temperature":
      0.0, "top_p": 1.0, "frequency_penalty": 0.0, "presence_penalty": 0.0, "user":
      "", "stop": null}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '981'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.27.8
      X-OpenAI-Client-User-Agent:
      - '{"bindings_version": "0.27.8", "httplib": "requests", "lang": "python", "lang_version":
        "3.11.4", "platform": "macOS-13.4.1-arm64-arm-64bit", "publisher": "openai",
        "uname": "Darwin 22.5.0 Darwin Kernel Version 22.5.0: Thu Jun  8 22:22:19
        PDT 2023; root:xnu-8796.121.3~7/RELEASE_ARM64_T8103 arm64 arm"}'
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: "{\n  \"id\": \"chatcmpl-7i3TzhhHnfJFJpbsYafU4xXBPPSuT\",\n  \"object\":
        \"chat.completion\",\n  \"created\": 1690734175,\n  \"model\": \"gpt-3.5-turbo-0613\",\n
        \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
        \"assistant\",\n        \"content\": \"{\\\"ret\\\": 55}\"\n      },\n      \"finish_reason\":
        \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 200,\n    \"completion_tokens\":
        6,\n    \"total_tokens\": 206\n  }\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7eeef1721ad76b75-TPE
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 30 Jul 2023 16:22:55 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0613
      openai-processing-ms:
      - '358'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89809'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 127ms
      x-request-id:
      - ef4df0648e255b17fe4424e306afa37c
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are now the following
      python function:\n```\n# return fabnocci number\ndef fabnocci(n: int):\n```\nOnly
      respond with your `return` value.\n- The output should be formatted as a JSON
      instance that conforms to the JSON schema below.\n\n- As an example, for the
      schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a
      list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}},
      \"required\": [\"foo\"]}}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted
      instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}}
      is not well-formatted.\n\n- Here is the output schema:\n```\n{\"properties\":
      {\"ret\": {\"title\": \"Ret\", \"type\": \"integer\"}}, \"required\": [\"ret\"]}\n```"},
      {"role": "user", "content": "fabnocci(10)"}], "model": "gpt-3.5-turbo", "frequency_penalty":
      0.0, "presence_penalty": 0.0, "stop": null, "temperature": 0.0, "top_p": 1.0,
      "user": ""}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '981'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.5.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.5.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-8XOf1JHzNFuHOxFEgsIQr5gCZDi9a\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1702970311,\n  \"model\": \"gpt-3.5-turbo-0613\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": \"{\\\"ret\\\": 55}\"\n      },\n      \"logprobs\":
      null,\n      \"finish_reason\": \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\":
      200,\n    \"completion_tokens\": 6,\n    \"total_tokens\": 206\n  },\n  \"system_fingerprint\":
      null\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 837ddf402ac84a74-TPE
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 19 Dec 2023 07:18:32 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=An5BY0U0r_fpGvgLo6RveWob4EdTmbvx32jgmODgVvk-1702970312-1-AZ+jAkJuGCQrZN7oeBei4cj9BH8Wa3IwlV/YvaXAlrcPKMEikPSTgritF64UrbSf7jAlCaXevG/bfRAUCwAV0Kg=;
        path=/; expires=Tue, 19-Dec-23 07:48:32 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=BgaCoSs.U30b18MjPSZJUOMgf9mGI9Z1BtNjHNHK108-1702970312275-0-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0613
      openai-processing-ms:
      - '331'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-limit-tokens_usage_based:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1999809'
      x-ratelimit-remaining-tokens_usage_based:
      - '1999809'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 5ms
      x-ratelimit-reset-tokens_usage_based:
      - 5ms
      x-request-id:
      - 171defeb4449a754cad94554118146b9
    http_version: HTTP/1.1
    status_code: 200
version: 1
