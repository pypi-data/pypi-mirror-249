# serializer version: 1
# name: test_achat_completion
  'Hello! I am a helpful assistant here to assist you with any questions or tasks you may have. How can I assist you today?'
# ---
# name: test_afunction_completion
  FunctionCall(arguments='{\n  "date": "2022-08-15",\n  "destination": "London"\n}', name='book_a_flight')
# ---
# name: test_astructural_completion
  Email(subject='Sample Email', body="Dear [Recipient's Name],\n\nI hope this email finds you well. I am reaching out to discuss [Subject of Discussion].\n\n[Provide a brief introduction and purpose of the email].\n\n[Include relevant details, information, or requests].\n\n[Offer assistance or provide next steps].\n\nPlease let me know if you have any questions or require further clarification. I look forward to your response.\n\nThank you and best regards,\n[Your Name]\n[Your Contact Information]")
# ---
# name: test_chat_completion
  'Hello! I am a helpful assistant.'
# ---
# name: test_chat_completion_incomplete
  'gpt_fn.exceptions.CompletionIncompleteError: Incomplete response. Max tokens: 1, Finish reason: length'
# ---
# name: test_chat_completion_incomplete.1
  dict({
    'request': dict({
      'frequency_penalty': 0.0,
      'max_tokens': 1,
      'messages': list([
        dict({
          'content': 'You are a helpful assistant.',
          'role': 'system',
        }),
        dict({
          'content': 'Hello, who are you?',
          'role': 'user',
        }),
      ]),
      'model': 'gpt-3.5-turbo',
      'presence_penalty': 0.0,
      'stop': None,
      'temperature': 1.0,
      'top_p': 1.0,
      'user': '',
    }),
    'response': ChatCompletion(id='chatcmpl-7i3UPS1ZGAuO30Rqrcp4oI1Tuomtv', choices=[Choice(finish_reason='length', index=0, logprobs=None, message=ChatCompletionMessage(content='Hello', role='assistant', function_call=None, tool_calls=None))], created=1690734201, model='gpt-3.5-turbo-0613', object='chat.completion', system_fingerprint=None, usage=CompletionUsage(completion_tokens=1, prompt_tokens=23, total_tokens=24)),
  })
# ---
# name: test_function_completion
  FunctionCall(arguments='{\n  "date": "2021-10-15",\n  "destination": "London"\n}', name='book_a_flight')
# ---
# name: test_function_completion_without_enough_tokens
  'gpt_fn.exceptions.CompletionIncompleteError: Incomplete response. Max tokens: 10, Finish reason: length Message:Sure, I can help you with that.'
# ---
# name: test_function_completion_without_enough_tokens.1
  dict({
    'request': dict({
      'frequency_penalty': 0.0,
      'function_call': 'auto',
      'functions': list([
        dict({
          'description': '',
          'name': 'book_a_flight',
          'parameters': dict({
            'definitions': dict({
            }),
            'properties': dict({
              'date': dict({
                'title': 'Date',
                'type': 'string',
              }),
              'destination': dict({
                'title': 'Destination',
                'type': 'string',
              }),
              'origin': dict({
                'default': 'London',
                'title': 'Origin',
                'type': 'string',
              }),
            }),
            'required': list([
              'date',
              'destination',
            ]),
            'type': 'object',
          }),
        }),
      ]),
      'max_tokens': 10,
      'messages': list([
        dict({
          'content': 'You are a helpful assistant.',
          'role': 'system',
        }),
        dict({
          'content': 'I want to book a restaurant in London.',
          'role': 'user',
        }),
      ]),
      'model': 'gpt-3.5-turbo-0613',
      'presence_penalty': 0.0,
      'stop': None,
      'temperature': 1.0,
      'top_p': 1.0,
      'user': '',
    }),
    'response': ChatCompletion(id='chatcmpl-8XfomRHXE6SaDIUZyAJLJK1mUPIXb', choices=[Choice(finish_reason='length', index=0, logprobs=None, message=ChatCompletionMessage(content='Sure, I can help you with that.', role='assistant', function_call=None, tool_calls=None))], created=1703036264, model='gpt-3.5-turbo-0613', object='chat.completion', system_fingerprint=None, usage=CompletionUsage(completion_tokens=10, prompt_tokens=67, total_tokens=77)),
  })
# ---
# name: test_function_completion_without_neccess_function
  'gpt_fn.exceptions.CompletionIncompleteError: Incomplete response. Max tokens: None, Finish reason: stop Message:Sure, I can help you with that. Could you please provide me with the date and time for the booking?'
# ---
# name: test_function_completion_without_neccess_function.1
  dict({
    'request': dict({
      'frequency_penalty': 0.0,
      'function_call': 'auto',
      'functions': list([
        dict({
          'description': '',
          'name': 'book_a_flight',
          'parameters': dict({
            'definitions': dict({
            }),
            'properties': dict({
              'date': dict({
                'title': 'Date',
                'type': 'string',
              }),
              'destination': dict({
                'title': 'Destination',
                'type': 'string',
              }),
              'origin': dict({
                'default': 'London',
                'title': 'Origin',
                'type': 'string',
              }),
            }),
            'required': list([
              'date',
              'destination',
            ]),
            'type': 'object',
          }),
        }),
      ]),
      'messages': list([
        dict({
          'content': 'You are a helpful assistant.',
          'role': 'system',
        }),
        dict({
          'content': 'I want to book a restaurant in London.',
          'role': 'user',
        }),
      ]),
      'model': 'gpt-3.5-turbo-0613',
      'presence_penalty': 0.0,
      'stop': None,
      'temperature': 1.0,
      'top_p': 1.0,
      'user': '',
    }),
    'response': ChatCompletion(id='chatcmpl-8Xfon9uU1deOBwaKolkBf7HCcRtUB', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Sure, I can help you with that. Could you please provide me with the date and time for the booking?', role='assistant', function_call=None, tool_calls=None))], created=1703036265, model='gpt-3.5-turbo-0613', object='chat.completion', system_fingerprint=None, usage=CompletionUsage(completion_tokens=24, prompt_tokens=67, total_tokens=91)),
  })
# ---
# name: test_structural_completion
  Email(subject='Regarding project deadline extension', body='Dear [Recipient],\n\nI hope this email finds you well. I am writing to request a deadline extension for the [Project Name]. The current deadline is [Original Deadline], but due to unforeseen circumstances, we are experiencing delays in completing the project.\n\n[Explain the reasons for the delay and any challenges faced.]\n\nWe understand that this extension may cause inconvenience and we sincerely apologize for any disruption caused. However, we assure you that we are working diligently to overcome these challenges and deliver a high-quality project.\n\n[Propose new deadline and any strategies to mitigate the delay.]\n\nThank you for your understanding and support. We greatly appreciate your cooperation in this matter.\n\nBest regards,\n[Your Name]\n[Your Position/Title]\n[Your Company/Organization]\n')
# ---
# name: test_structural_completion_without_enough_tokens
  'gpt_fn.exceptions.CompletionIncompleteError: Incomplete response. Max tokens: 10, Finish reason: length Message:None'
# ---
# name: test_structural_completion_without_enough_tokens.1
  dict({
    'request': dict({
      'frequency_penalty': 0.0,
      'function_call': dict({
        'name': 'structural_response',
      }),
      'functions': list([
        dict({
          'description': 'Response to user in a structural way.',
          'name': 'structural_response',
          'parameters': dict({
            'properties': dict({
              'body': dict({
                'description': 'the body of email',
                'title': 'Body',
                'type': 'string',
              }),
              'subject': dict({
                'description': 'the subject of email',
                'title': 'Subject',
                'type': 'string',
              }),
            }),
            'required': list([
              'subject',
              'body',
            ]),
            'title': 'Email',
            'type': 'object',
          }),
        }),
      ]),
      'max_tokens': 10,
      'messages': list([
        dict({
          'content': 'You are a helpful assistant.',
          'role': 'system',
        }),
        dict({
          'content': 'Give me a sample email.',
          'role': 'user',
        }),
      ]),
      'model': 'gpt-3.5-turbo-0613',
      'presence_penalty': 0.0,
      'temperature': 1.0,
      'top_p': 1.0,
      'user': '',
    }),
    'response': ChatCompletion(id='chatcmpl-8XOfNxHhCORGJiNKFSdDrGk7Q54XN', choices=[Choice(finish_reason='length', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', function_call=FunctionCall(arguments='{\n  "subject": "Sample Email",\n ', name='structural_response'), tool_calls=None))], created=1702970333, model='gpt-3.5-turbo-0613', object='chat.completion', system_fingerprint=None, usage=CompletionUsage(completion_tokens=10, prompt_tokens=82, total_tokens=92)),
  })
# ---
