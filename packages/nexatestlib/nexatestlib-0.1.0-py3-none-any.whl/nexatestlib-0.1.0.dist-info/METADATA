Metadata-Version: 2.1
Name: nexatestlib
Version: 0.1.0
Summary: NexaTestLib
Author: Alex
License: MIT
Description-Content-Type: text/markdown
Requires-Dist: numpy

# Medium multiply
A small demo library for a Medium publication about publishing libraries.

## Installation
```bash
pip install projectname
```
if we upload the package to PyPI. Otherwise, we can install it from a local directory:
```bash
pip install -e .
```
The flag -e stands for editable, which means that if we make changes to the code, we don’t need to reinstall the package. This is for the dev process. For prod, we can just install the package without the -e flag.


## Essence
The current Python logic is still valid. To create a Python library, we need to be aware of some additional knowledge.

1. Create an empty file called `setup.py`. This is one of the most important files when creating a Python library! Additionally, we need `pyproject.toml` file to specify how we build the library. And we use the `build` library and `python -m build` to build the library.
2. Create an empty file called `README.md`. This is the place where you can write markdown to describe the contents of your library for other users.
3. Create a folder called `mypythonlib`, or whatever you want your Python library to be called when you pip install it. (The name should be unique on pip if you want to publish it later.) **How to check the uniqueness**? Just search for the name on pip. If it’s not there, you’re good to go.
4. Create an empty file inside mypythonlib that is called `__init__.py`. Basically, any folder that has an `__init__.py` file in it, will be included in the library when we build it. Most of the time, you can leave the `__init__.py` files empty. Upon import, the code within `__init__.py` gets executed, so it should contain only the minimal amount of code that is needed to be able to run your project. For now, we will leave them as is.
5. Create functional code in the folder where `__init__.py` is located. 
6. Finally, create a folder tests in your root folder. Inside, create an empty __init__.py file. Add some empty file as you want. If we wish to compile the code into a library, we have to make sure the code is robust. And the test is necessary. If you want to use the test, just install `pytest` and `pytest-runner`. Then, run `python setup.py pytest` to run the all the tests in the tests folder.

After build, I have a `dist` folder, and we have a package with `.whl` and `.tar.gz` files. We can install the package with `pip install mypythonlib-0.0.1-py3-none-any.whl` or `pip install mypythonlib-0.0.1.tar.gz`.
