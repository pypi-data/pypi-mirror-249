# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_inputdata.ipynb.

# %% auto 0
__all__ = ['factory']

# %% ../nbs/01_inputdata.ipynb 3
from pathlib import Path
from shapely.geometry import Polygon,Point
from typing import List, Union
import datetime


# %% ../nbs/01_inputdata.ipynb 5
class factory:

    def __init__(self, 
                locations:  Union[Point, # location point to prepare data.
                                  Polygon, # location polygon to prepare data.
                                  List[Union[Point, # list of location points to prepare data.
                                             Polygon]]] , # list of location polygons to prepare data.
                times: Union[ datetime.time ,List[datetime.time]], # list of times to prepare data.
                model_version: str, # model version for which to prepare data.
                local_folder: Path): # local folder to store data.
        
        if not isinstance(locations, list):
            locations = [locations]
        if not isinstance(times, list):
            times = [times]
        
        self.locations = locations
        self.times = times
        self.model_version = model_version
        self.local_folder = local_folder

        self.prepare_data()
    
    def prepare_data(self):
        self.files = []
        for location in self.locations:
            for time in self.times:
                batch_files = self.prepare_data_for_location_and_time(location,time)
                self.files.append(batch_files)
        self.files = [item for sublist in self.files for item in sublist]
        self.len = len(self.files)
    
    def prepare_data_for_location_and_time(self,
                                           location: Union[Point,Polygon], # location to prepare data.
                                           time: str): # time to prepare data.
        #TODO
        # Search assets on Planetary Computer
        # Download assets
        # save into local_folder

        # make list of *.tif file on local_folder
        print("Method prepare_data_for_location_and_time not implemented yet.")
        files = ['file1.tif','file2.tif','file3.tif']
        return files
        
        
    def rgb(self,
            at_most: int = 10): # at most how many random images to plot.
        """
        Plot RGB images.
        """
        #pick at most 10 random files from self.files
        print("Method not implemented yet.")
        

