[build-system]
requires = ["setuptools>=62.1.0", "torch>=1.13", "torchvision", "torchaudio"]
build-backend = "setuptools.build_meta"

[project]
name = "unitorch"
authors = [
    {name = "fuliucansheng", email = "fuliucansheng@gmail.com"},
]
description = "unitorch provides efficient implementation of popular unified NLU / NLG / CV / CTR / MM / RL models with PyTorch."
readme = "README.md"
requires-python = ">=3.8"
keywords = ["PyTorch"]
license = {text = "MIT"}
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dynamic = ["version", "dependencies"]

[project.optional-dependencies]
deepspeed = ["deepspeed==0.9.0", "mpi4py==3.1.4"]
diffusers = ["diffusers>=0.24.0", "safetensors>=0.3.1", "xformers>=0.0.21", "torchsde>=0.2.6"]
quantization = ["bitsandbytes>=0.41.1"]
docs = ["mkdocstrings[python]>=0.18", "mkdocs-material", "markdown-exec", "mkdocs-gen-files", "mkdocs-coverage"]
fastapi = ["fastapi>=0.103.1"]
webui = ["gradio<=3.50.2", "gradio_client<=0.6.1"]
all = ["unitorch[deepspeed,diffusers,quantization,fastapi,webui]"]

[project.scripts]
unitorch-train = "unitorch.cli.console.train:cli_main"
unitorch-eval = "unitorch.cli.console.eval:cli_main"
unitorch-infer = "unitorch.cli.console.infer:cli_main"
unitorch-launch= "unitorch.cli.console.launch:cli_main"
unitorch-webui= "unitorch.cli.console.webui:cli_main"
unitorch-fastapi= "unitorch.cli.console.fastapi:cli_main"
unitorch-service = "unitorch.cli.console.service:cli_main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "unitorch.VERSION"}
dependencies = {file = "requirements.txt"}
