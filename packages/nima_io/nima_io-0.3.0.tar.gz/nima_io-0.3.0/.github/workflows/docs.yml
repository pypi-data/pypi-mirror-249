# Deploy static content to GitHub Pages
name: Docs

on:
  push:
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  STABLE_PYTHON_VERSION: "3.10"
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.STABLE_PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.STABLE_PYTHON_VERSION }}

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: 8

      - name: Display JAVA version
        run: java -version

      - name: Install binaries for docs
        run: |
          sudo add-apt-repository ppa:openjdk-r/ppa
          sudo apt-get update
          sudo apt-get install -y pandoc
          sudo apt-get install -y plantuml

      - name: Cache tests/data
        id: cache-data
        uses: actions/cache@v3
        with:
          path: tests/data
          key: ${{ hashFiles('tests/data.filenames.md5') }}
          enableCrossOsArchive: true

      - name: Download tests data files
        if: steps.cache-data.outputs.cache-hit != 'true'
        run: |
          files=("2015Aug28_TransHXB2_50min+DMSO.lif"
                 "LC26GFP_1.tf8"
                 "exp2_2.tif"
                 "im1s1z2c5t_bmd.ome.tif"
                 "im1s1z3c5t_a.ome.tif"
                 "im1s1z3c5t_b.ome.tif"
                 "im1s1z3c5t_bpix.ome.tif"
                 "multi-channel-time-series.ome.tif"
                 "t4_1.tif"
                 "tile6_1.tif")
          for file in "${files[@]}"; do
            wget -P tests/data/ https://gin.g-node.org/darosio/imgread-testdata/raw/master/$file
          done
          echo "files=${files[*]}" >> $GITHUB_OUTPUT

      - name: Cache pip
        id: cache-pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}|pip|${{ env.STABLE_PYTHON_VERSION }}|-${{ hashFiles('**/constraints.txt', '**/pyproject.toml') }}
          enableCrossOsArchive: true

      - name: Install pip, hatch and numpy
        run: |
          python -m pip install --constraint=.github/workflows/constraints.txt pip hatch numpy

      - name: Install (needed to rebuild pip cache)
        run: |
          pip install --upgrade setuptools wheel
          pip install .[docs,dev]

      - name: Run hatch
        run: hatch run docs

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: "./docs/_build"

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
