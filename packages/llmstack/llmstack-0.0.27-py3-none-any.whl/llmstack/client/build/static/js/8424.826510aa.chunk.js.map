{"version":3,"file":"static/js/8424.826510aa.chunk.js","mappings":"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","sources":["components/apps/AppVisibilityIcon.jsx","components/apps/AppList.jsx","components/apps/SharedAppList.jsx","components/apps/AppFromTemplateDialog.jsx","components/apps/AppTemplatesContainer.jsx","pages/AppStudio.jsx"],"sourcesContent":["import React from \"react\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport PublicIcon from \"@mui/icons-material/Public\";\nimport PublicOffIcon from \"@mui/icons-material/PublicOff\";\nimport CorporateFareIcon from \"@mui/icons-material/CorporateFare\";\nimport PeopleIcon from \"@mui/icons-material/People\";\nexport default function AppVisibilityIcon({\n  visibility,\n  published,\n  setShowSharingModal = () => {},\n  disabled = false\n}) {\n  const color = published && !disabled ? \"success\" : \"gray\";\n  let tooltipMessage = \"\";\n  if (visibility === 3) {\n    tooltipMessage = \"Publicly accessible\";\n  } else if (visibility === 2) {\n    tooltipMessage = \"Anyone with the link can access\";\n  } else if (visibility === 1) {\n    tooltipMessage = \"Accessible by anyone in your organization\";\n  } else if (visibility === 0) {\n    tooltipMessage = \"Only selected users and you can access\";\n  }\n  if (!published) {\n    tooltipMessage = \"Not published\";\n  }\n  return <Tooltip title={tooltipMessage}>\n      <IconButton onClick={() => setShowSharingModal(true)} sx={{\n      padding: \"0px\"\n    }} disabled={disabled}>\n        {visibility === 3 && <PublicIcon color={color} fontSize=\"small\" />}\n        {visibility === 2 && <PublicOffIcon color={color} fontSize=\"small\" />}\n        {visibility === 1 && <CorporateFareIcon color={color} fontSize=\"small\" />}\n        {visibility === 0 && <PeopleIcon color={color} fontSize=\"small\" />}\n      </IconButton>\n    </Tooltip>;\n}","import { useState } from \"react\";\nimport { Alert, Button, Chip, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Paper, TablePagination } from \"@mui/material\";\nimport { axios } from \"../../data/axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\nimport AppVisibilityIcon from \"./AppVisibilityIcon\";\nimport { useRecoilValue } from \"recoil\";\nimport { appsBriefState } from \"../../data/atoms\";\nconst DeleteUnpublishedAppModal = ({\n  open,\n  setOpen,\n  appId\n}) => {\n  const [deleteValue, setDeleteValue] = useState(\"\");\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const deleteApp = () => {\n    axios().delete(`/api/apps/${appId}`).then(response => {\n      setOpen(false);\n      window.location.reload();\n    });\n  };\n  return <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete App\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <Alert severity=\"warning\">\n              Are you sure you want to delete this app? This action cannot be\n              undone.\n            </Alert>\n          </DialogContentText>\n          <TextField autoFocus margin=\"dense\" id=\"name\" label=\"DELETE\" placeholder=\"Type DELETE to confirm\" type=\"text\" fullWidth variant=\"standard\" value={deleteValue} required={true} onChange={e => setDeleteValue(e.target.value)} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\" style={{\n          textTransform: \"none\"\n        }}>\n            Cancel\n          </Button>\n          <Button onClick={deleteApp} variant=\"contained\" style={{\n          textTransform: \"none\"\n        }} disabled={deleteValue !== \"DELETE\"}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>;\n};\nconst DeletePublishedAppAlert = ({\n  open,\n  setOpen\n}) => {\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Failed to Delete App\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <Alert severity=\"error\">\n              You cannot delete a published app. Please unpublish the app first.\n            </Alert>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"contained\" style={{\n          textTransform: \"none\"\n        }}>\n            Okay\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>;\n};\nexport function AppList() {\n  const [page, setPage] = useState(0);\n  const apps = useRecoilValue(appsBriefState);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [openDeletePublishedAppAlert, setOpenDeletePublishedAppAlert] = useState(false);\n  const [openDeleteUnpublishedAppModal, setOpenDeleteUnpublishedAppModal] = useState(false);\n  const [appIdToDelete, setAppIdToDelete] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  return <Paper sx={{\n    width: \"100%\",\n    pt: 2\n  }}>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow sx={{\n            \"& > th\": {\n              padding: \"3px 16px\",\n              fontWeight: 600\n            }\n          }}>\n              <TableCell>App Name</TableCell>\n              <TableCell sx={{\n              textAlign: \"center\"\n            }}>App Type</TableCell>\n              <TableCell sx={{\n              textAlign: \"center\"\n            }}>Visibility</TableCell>\n              <TableCell>Processors</TableCell>\n              <TableCell>Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {apps.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => <TableRow key={row.uuid} hover onClick={() => navigate(`/apps/${row.uuid}`)} sx={{\n            cursor: \"pointer\"\n          }}>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell sx={{\n              textAlign: \"center\"\n            }}>\n                    {row.app_type_name}\n                  </TableCell>\n                  <TableCell sx={{\n              textAlign: \"center\"\n            }}>\n                    <AppVisibilityIcon visibility={row.visibility} published={row.is_published} />\n                  </TableCell>\n                  <TableCell style={{\n              maxWidth: \"100px\"\n            }}>\n                    {row.unique_processors?.map(x => <Chip key={x} label={x} size=\"small\" />)}\n                  </TableCell>\n                  <TableCell>\n                    <DeleteForeverIcon sx={theme => ({\n                color: row.is_published ? \"#ccc\" : theme.palette.error.main\n              })} onClick={e => {\n                e.stopPropagation();\n                if (row.is_published) {\n                  setOpenDeletePublishedAppAlert(true);\n                } else {\n                  setAppIdToDelete(row.uuid);\n                  setOpenDeleteUnpublishedAppModal(true);\n                }\n              }} />\n                  </TableCell>\n                </TableRow>)}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination rowsPerPageOptions={[10, 25, 50]} component=\"div\" count={apps.length} rowsPerPage={rowsPerPage} page={page} onPageChange={handleChangePage} onRowsPerPageChange={handleChangeRowsPerPage} />\n      <DeletePublishedAppAlert open={openDeletePublishedAppAlert} setOpen={setOpenDeletePublishedAppAlert} />\n      <DeleteUnpublishedAppModal open={openDeleteUnpublishedAppModal} setOpen={setOpenDeleteUnpublishedAppModal} appId={appIdToDelete} />\n    </Paper>;\n}","import { useEffect, useState } from \"react\";\nimport { Chip, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TablePagination } from \"@mui/material\";\nimport { axios } from \"../../data/axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport DoneIcon from \"@mui/icons-material/Done\";\nexport function SharedAppList() {\n  const [page, setPage] = useState(0);\n  const [apps, setApps] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios().get(\"/api/apps/shared?fields=uuid,name,visibility,is_published,app_type_name,owner_email,published_uuid,access_permission,unique_processors\").then(response => {\n      setApps(response.data);\n    });\n  }, [setApps]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  return <Paper sx={{\n    width: \"100%\",\n    pt: 2\n  }}>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow sx={{\n            \"& > th\": {\n              fontWeight: 600,\n              padding: \"3px 16px\"\n            }\n          }}>\n              <TableCell>App Name</TableCell>\n              <TableCell sx={{\n              textAlign: \"center\"\n            }}>App Type</TableCell>\n              <TableCell sx={{\n              textAlign: \"center\"\n            }}>Owner</TableCell>\n              <TableCell>Processors</TableCell>\n              <TableCell sx={{\n              textAlign: \"center\"\n            }}>Can Edit?</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {apps.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => <TableRow key={row.uuid} hover onClick={() => navigate(row?.access_permission > 0 ? `/apps/${row.uuid}` : `/app/${row.published_uuid}`)} sx={{\n            cursor: \"pointer\"\n          }}>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell sx={{\n              textAlign: \"center\"\n            }}>\n                    {row.app_type_name}\n                  </TableCell>\n                  <TableCell sx={{\n              textAlign: \"center\"\n            }}>\n                    {row.owner_email}\n                  </TableCell>\n                  <TableCell style={{\n              maxWidth: \"100px\"\n            }}>\n                    {row.unique_processors?.map(x => <Chip key={x} label={x} size=\"small\" />)}\n                  </TableCell>\n                  <TableCell sx={{\n              textAlign: \"center\"\n            }}>\n                    {row?.access_permission > 0 && <DoneIcon color=\"success\" />}\n                  </TableCell>\n                </TableRow>)}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination rowsPerPageOptions={[10, 25, 50]} component=\"div\" count={apps.length} rowsPerPage={rowsPerPage} page={page} onPageChange={handleChangePage} onRowsPerPageChange={handleChangeRowsPerPage} />\n    </Paper>;\n}","import { Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { axios } from \"../../data/axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { appTemplateState } from \"../../data/atoms\";\nexport function AppFromTemplateDialog({\n  open,\n  setOpen,\n  appTemplateSlug\n}) {\n  const [appName, setAppName] = useState(\"Untitled\");\n  const appTemplate = useRecoilValue(appTemplateState(appTemplateSlug.startsWith(\"_blank_\") ? \"_blank_\" : appTemplateSlug));\n  const navigate = useNavigate();\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const createApp = () => {\n    const payload = {\n      ...(appTemplate.app || {}),\n      name: appName || appTemplate?.name || \"Untitled\",\n      app_type: appTemplate?.app?.type,\n      type_slug: appTemplate?.app?.type_slug || appTemplateSlug.replaceAll(\"_blank_\", \"\"),\n      template_slug: appTemplate?.slug\n    };\n    axios().post(\"/api/apps\", payload).then(response => {\n      const appID = response.data.uuid;\n      navigate(`/apps/${appID}`);\n    });\n  };\n  return <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>{appTemplate?.name || \"Create a new App\"}</DialogTitle>\n      <DialogContent>\n        <Typography style={{\n        fontSize: \"14px\",\n        color: \"#555\"\n      }}>\n          {appTemplate?.description}\n          {appTemplate?.example_app_uuid && \" Try it out \"}\n          {appTemplate?.example_app_uuid && <a href={`https://trypromptly.com/app/${appTemplate?.example_app_uuid}`} target=\"_blank\" rel=\"noreferrer\">\n              here\n            </a>}\n        </Typography>\n        <Stack gap={0.5} direction=\"row\" mt={2}>\n          {appTemplate?.categories?.map((tag, index) => <Chip key={index} label={tag?.name} variant=\"outlined\" size=\"small\" sx={{\n          borderRadius: \"5px\"\n        }} />)}\n        </Stack>\n        <Typography variant=\"body1\" style={{\n        paddingTop: 10,\n        paddingBottom: 5,\n        fontSize: \"16px\"\n      }}>\n          To begin creating your application, please provide a name.\n        </Typography>\n        <TextField autoFocus margin=\"dense\" id=\"name\" label=\"App name\" type=\"text\" fullWidth variant=\"standard\" value={appName} required={true} onChange={e => setAppName(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} sx={{\n        textTransform: \"none\"\n      }}>\n          Cancel\n        </Button>\n        <Button onClick={createApp} variant=\"contained\" sx={{\n        textTransform: \"none\"\n      }}>\n          Create App\n        </Button>\n      </DialogActions>\n    </Dialog>;\n}","import { useState } from \"react\";\nimport { Box, Card, CardActions, CardContent, Chip, Divider, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Stack, Typography } from \"@mui/material\";\nimport { AutoFixHighOutlined, QuestionAnswerOutlined, WebOutlined } from \"@mui/icons-material\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport { AppFromTemplateDialog } from \"./AppFromTemplateDialog\";\nimport { appTemplatesState, isMobileState } from \"../../data/atoms\";\nimport { useRecoilValue } from \"recoil\";\nimport startCase from \"lodash/startCase\";\nimport selectAllIcon_light from \"../../assets/images/icons/templates/select-all.png\";\nimport blankIcon_light from \"../../assets/images/icons/templates/blank.png\";\nimport agentsIcon_light from \"../../assets/images/icons/templates/agents.png\";\nimport customerSupportIcon_light from \"../../assets/images/icons/templates/customer-support.png\";\nimport entertainmentIcon_light from \"../../assets/images/icons/templates/entertainment.png\";\nimport financeIcon_light from \"../../assets/images/icons/templates/finance.png\";\nimport hrIcon_light from \"../../assets/images/icons/templates/hr.png\";\nimport marketingIcon_light from \"../../assets/images/icons/templates/marketing.png\";\nimport productivityIcon_light from \"../../assets/images/icons/templates/productivity.png\";\nimport programmingIcon_light from \"../../assets/images/icons/templates/programming.png\";\nimport salesIcon_light from \"../../assets/images/icons/templates/sales.png\";\nimport botIcon_light from \"../../assets/images/icons/templates/bot.png\";\nimport internetIcon_light from \"../../assets/images/icons/templates/internet.png\";\nimport textIcon_light from \"../../assets/images/icons/templates/text.png\";\nimport toolIcon_light from \"../../assets/images/icons/templates/tool.png\";\nimport voiceIcon_light from \"../../assets/images/icons/templates/voice.png\";\nconst AppTemplateCategoryIcon = ({\n  category\n}) => {\n  switch (category) {\n    case \"all\":\n      return <img src={selectAllIcon_light} alt=\"select all\" width={24} />;\n    case \"blank\":\n      return <img src={blankIcon_light} alt=\"blank\" width={24} />;\n    case \"agents\":\n      return <img src={agentsIcon_light} alt=\"agents\" width={24} />;\n    case \"customer-support\":\n      return <img src={customerSupportIcon_light} alt=\"customer support\" width={24} />;\n    case \"entertainment\":\n      return <img src={entertainmentIcon_light} alt=\"entertainment\" width={24} />;\n    case \"finance\":\n      return <img src={financeIcon_light} alt=\"finance\" width={24} />;\n    case \"hr\":\n      return <img src={hrIcon_light} alt=\"hr\" width={24} />;\n    case \"marketing\":\n      return <img src={marketingIcon_light} alt=\"marketing\" width={24} />;\n    case \"productivity\":\n      return <img src={productivityIcon_light} alt=\"productivity\" width={24} />;\n    case \"programming\":\n      return <img src={programmingIcon_light} alt=\"programming\" width={24} />;\n    case \"sales\":\n      return <img src={salesIcon_light} alt=\"sales\" width={24} />;\n    default:\n      return <img src={selectAllIcon_light} alt=\"select all\" width={24} />;\n  }\n};\nconst AppTemplateIcon = ({\n  template\n}) => {\n  switch (template.icon) {\n    case \"bot\":\n      return <img src={botIcon_light} alt=\"bot\" width={24} />;\n    case \"internet\":\n      return <img src={internetIcon_light} alt=\"internet\" width={24} />;\n    case \"text\":\n      return <img src={textIcon_light} alt=\"text\" width={24} />;\n    case \"tool\":\n      return <img src={toolIcon_light} alt=\"tool\" width={24} />;\n    case \"voice\":\n      return <img src={voiceIcon_light} alt=\"voice\" width={24} />;\n    default:\n      return <img src={selectAllIcon_light} alt=\"select all\" width={24} />;\n  }\n};\nconst AppTypeIcon = ({\n  type\n}) => {\n  switch (type) {\n    case \"web\":\n      return <WebOutlined sx={{\n        color: \"#999\",\n        fontSize: \"1.4em\",\n        m: 1\n      }} />;\n    case \"text-chat\":\n      return <QuestionAnswerOutlined sx={{\n        color: \"#999\",\n        fontSize: \"1.4em\",\n        m: 1\n      }} />;\n    case \"agent\":\n      return <AutoFixHighOutlined sx={{\n        color: \"#999\",\n        fontSize: \"1.4em\",\n        m: 1\n      }} />;\n    default:\n      return <WebOutlined sx={{\n        color: \"#999\",\n        fontSize: \"1.4em\",\n        m: 1\n      }} />;\n  }\n};\nconst AppTemplateCard = ({\n  template,\n  setSelectedAppTemplateSlug,\n  setOpenAppFromTemplateDialog\n}) => {\n  return <Card sx={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"250px\",\n    maxWidth: \"300px\",\n    minHeight: \"250px\",\n    maxHeight: \"300px\",\n    \":hover\": {\n      cursor: \"pointer\",\n      boxShadow: \"0px 0px 10px 0px rgba(4, 45, 120, 0.5)\",\n      backgroundColor: \"#f5f5f5\"\n    }\n  }} elevation={1} onClick={() => {\n    setOpenAppFromTemplateDialog(true);\n    setSelectedAppTemplateSlug(template.slug);\n  }}>\n      <CardContent sx={{\n      m: 2,\n      maxHeight: \"200px\"\n    }}>\n        <ListItem sx={{\n        flexDirection: \"column\",\n        alignItems: \"baseline\",\n        pl: 0\n      }}>\n          <ListItemIcon sx={{\n          backgroundColor: \"#fff9e4\",\n          p: 2,\n          minWidth: \"24px\",\n          borderRadius: 2\n        }}>\n            <AppTemplateIcon template={template} />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography sx={{\n            fontSize: \"1.1rem\",\n            fontWeight: 550,\n            pt: 3\n          }}>\n              {template.name}\n            </Typography>\n          </ListItemText>\n        </ListItem>\n        <Typography variant=\"subtitle2\" sx={{\n        color: \"#666\",\n        display: \"-webkit-box\",\n        WebkitLineClamp: 4,\n        WebkitBoxOrient: \"vertical\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"normal\",\n        margin: \"2px\",\n        lineHeight: \"1.6em\",\n        maxHeight: \"6.4em\"\n      }}>\n          {template.description}\n        </Typography>\n      </CardContent>\n      <CardActions sx={{\n      justifyContent: \"flex-start\",\n      flexGrow: 1,\n      ml: 4,\n      mt: 1,\n      pb: 4\n    }}>\n        <Chip label={template?.app?.type_slug === \"text-chat\" ? \"chat\" : template?.app?.type_slug} icon={<AppTypeIcon type={template?.app?.type_slug} />} sx={{\n        borderRadius: 2,\n        height: 24,\n        mb: 4,\n        \"& .MuiChip-label\": {\n          fontSize: \"0.8rem\",\n          fontWeight: 600,\n          color: \"#666\",\n          pl: 0\n        }\n      }} />\n      </CardActions>\n    </Card>;\n};\nconst AppTemplatesContainer = () => {\n  const [openAppFromTemplateDialog, setOpenAppFromTemplateDialog] = useState(false);\n  const appTemplates = useRecoilValue(appTemplatesState);\n  const isMobile = useRecoilValue(isMobileState);\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  const [selectedAppTemplateSlug, setSelectedAppTemplateSlug] = useState(\"\");\n  const blankTemplates = [{\n    name: \"Web App\",\n    description: \"Provides a web app that takes in a user input and returns a rendered output in the provided template.\",\n    slug: \"_blank_web\",\n    icon: \"tool\",\n    category_slugs: [\"blank\"],\n    app: {\n      type_slug: \"web\"\n    }\n  }, {\n    name: \"Chat Bot\",\n    description: \"Provides a chat bot that takes in a user input and returns a rendered output in the provided template.\",\n    slug: \"_blank_text-chat\",\n    icon: \"text\",\n    category_slugs: [\"blank\"],\n    app: {\n      type_slug: \"text-chat\"\n    }\n  }, {\n    name: \"Agent\",\n    description: \"Provides an agent that takes in a user input and returns a rendered output in the provided template.\",\n    slug: \"_blank_agent\",\n    icon: \"bot\",\n    category_slugs: [\"blank\"],\n    app: {\n      type_slug: \"agent\"\n    }\n  }];\n  const categories = [\"all\", \"blank\", ...new Set(appTemplates.map(template => template.category_slugs).flatMap(category => category).filter(category => category !== \"blank\").sort())];\n  return <Box sx={{\n    flexGrow: 1\n  }}>\n      <AppFromTemplateDialog open={openAppFromTemplateDialog} setOpen={setOpenAppFromTemplateDialog} appTemplateSlug={selectedAppTemplateSlug} />\n      <Grid container spacing={0}>\n        <Grid xs={2} md={2}>\n          <List>\n            {!isMobile && <ListItem>\n                <ListItemText>\n                  <Typography sx={{\n                textTransform: \"uppercase\",\n                color: \"#666\",\n                fontSize: \"0.9rem\"\n              }}>\n                    Categories\n                  </Typography>\n                </ListItemText>\n              </ListItem>}\n            {categories.map(category => {\n            return <ListItemButton key={category} selected={selectedCategory === category} onClick={() => setSelectedCategory(category)} sx={{\n              \"&.Mui-selected\": {\n                borderBottom: \"1px solid #046fda66\"\n              }\n            }}>\n                  <ListItemIcon sx={{\n                minWidth: \"40px\"\n              }}>\n                    <AppTemplateCategoryIcon category={category} />\n                  </ListItemIcon>\n                  {!isMobile && <ListItemText>\n                      <Typography variant=\"subtitle\">\n                        {category === \"hr\" ? \"HR\" : startCase(category)}\n                      </Typography>\n                    </ListItemText>}\n                </ListItemButton>;\n          })}\n          </List>\n        </Grid>\n        <Grid xs={10}>\n          <Stack direction=\"row\" sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          gap: 5,\n          mt: isMobile ? 0 : 4,\n          padding: \"10px 0 10px 10px\",\n          mr: 1,\n          height: \"600px\",\n          overflowY: \"scroll\",\n          backgroundColor: \"#edeff7\"\n        }}>\n            {appTemplates.filter(template => {\n            if (selectedCategory === \"all\") {\n              return true;\n            }\n            return template.category_slugs.includes(selectedCategory);\n          }).map(template => {\n            return <AppTemplateCard key={template.slug} template={template} setSelectedAppTemplateSlug={setSelectedAppTemplateSlug} setOpenAppFromTemplateDialog={setOpenAppFromTemplateDialog} />;\n          })}\n            {selectedCategory === \"all\" && <Box sx={{\n            display: \"block\",\n            width: \"100%\"\n          }}>\n                <Divider>\n                  <Typography variant=\"subtitle2\" sx={{\n                fontWeight: 600,\n                color: \"#666\"\n              }}>\n                    {\"  \"}\n                    Use Blank Templates\n                    {\"  \"}\n                  </Typography>\n                </Divider>\n              </Box>}\n            {blankTemplates.filter(template => {\n            if (selectedCategory === \"all\") {\n              return true;\n            }\n            return template.category_slugs.includes(selectedCategory);\n          }).map(template => {\n            return <AppTemplateCard key={template.slug} template={template} setSelectedAppTemplateSlug={setSelectedAppTemplateSlug} setOpenAppFromTemplateDialog={setOpenAppFromTemplateDialog} />;\n          })}\n          </Stack>\n        </Grid>\n      </Grid>\n    </Box>;\n};\nexport default AppTemplatesContainer;","import { useEffect, useRef } from \"react\";\nimport { useTour } from \"@reactour/tour\";\nimport { useCookies } from \"react-cookie\";\nimport { Box, Typography } from \"@mui/material\";\nimport { AppList } from \"../components/apps/AppList\";\nimport { SharedAppList } from \"../components/apps/SharedAppList\";\nimport AppTemplatesContainer from \"../components/apps/AppTemplatesContainer\";\nimport \"../index.css\";\nconst AppStudioPage = () => {\n  const {\n    steps,\n    setSteps,\n    setIsOpen\n  } = useTour();\n  const [cookies, setCookie] = useCookies([\"app-studio-tour\"]);\n  const containerRef = useRef(null);\n\n  // Tour\n  useEffect(() => {\n    if (containerRef.current && !steps && cookies[\"app-studio-tour\"] !== \"true\") {\n      setSteps([{\n        selector: \".main\",\n        content: `Welcome to ${process.env.REACT_APP_SITE_NAME || \"LLMStack\"}. You can build generative AI apps, chatbot and agents here.`,\n        position: \"center\"\n      }, {\n        selector: \".sidebar\",\n        content: \"Use the sidebar to navigate to different pages.\"\n      }, {\n        selector: \".app-template-list\",\n        content: \"Use our curated app templates to get started quickly. Click on any template, fill the form and save the app to create a new app.\"\n      }, {\n        selector: \".create-new-app\",\n        content: \"You can also create a new app from scratch.\"\n      }, {\n        selector: \".your-apps\",\n        content: \"You can see all your apps here.\"\n      }, {\n        selector: \".shared-apps\",\n        content: \"You can see all the apps shared with you here.\",\n        actionAfter: () => {\n          setCookie(\"app-studio-tour\", true, {\n            maxAge: 8640000\n          });\n        }\n      }]);\n      setIsOpen(true);\n    }\n  });\n  return <Box ref={containerRef} sx={{\n    m: 1\n  }}>\n      <Box sx={{\n      marginBottom: \"20px\"\n    }} className=\"app-template-list\">\n        <Typography variant=\"h5\" className=\"section-header\">\n          App Templates\n          <br />\n          <Typography variant=\"caption\" sx={{\n          color: \"#666\"\n        }}>\n            You can use these templates to quickly create apps. Use blank\n            templates to create apps from scratch.\n          </Typography>\n        </Typography>\n        <AppTemplatesContainer />\n      </Box>\n      <Box style={{\n      marginBottom: \"20px\"\n    }} className=\"your-apps\">\n        <Typography variant=\"h6\" className=\"section-header\">\n          Your Apps\n          <br />\n          <Typography variant=\"caption\" sx={{\n          color: \"#666\"\n        }}>\n            These are the apps you have created.\n          </Typography>\n        </Typography>\n        <AppList />\n      </Box>\n      <Box style={{\n      marginBottom: \"60px\"\n    }} className=\"shared-apps\">\n        <Typography variant=\"h5\" className=\"section-header\">\n          Shared Apps\n          <br />\n          <Typography variant=\"caption\" sx={{\n          color: \"#666\"\n        }}>\n            These apps have been shared with you. You can view and edit them\n            depending on the permissions.\n          </Typography>\n        </Typography>\n        <SharedAppList />\n      </Box>\n    </Box>;\n};\nexport default AppStudioPage;"],"names":["AppVisibilityIcon","_ref","visibility","published","_ref$setShowSharingMo","setShowSharingModal","_ref$disabled","disabled","color","tooltipMessage","_jsx","Tooltip","title","children","_jsxs","IconButton","onClick","sx","padding","PublicIcon","fontSize","PublicOffIcon","CorporateFareIcon","PeopleIcon","DeleteUnpublishedAppModal","open","setOpen","appId","_useState","useState","_useState2","_slicedToArray","deleteValue","setDeleteValue","handleClose","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","Alert","severity","TextField","autoFocus","margin","label","placeholder","type","fullWidth","variant","value","required","onChange","e","target","DialogActions","Button","style","textTransform","axios","delete","concat","then","response","window","location","reload","DeletePublishedAppAlert","_ref2","AppList","_useState3","_useState4","page","setPage","apps","useRecoilValue","appsBriefState","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","_useState8","openDeletePublishedAppAlert","setOpenDeletePublishedAppAlert","_useState9","_useState10","openDeleteUnpublishedAppModal","setOpenDeleteUnpublishedAppModal","_useState11","_useState12","appIdToDelete","setAppIdToDelete","navigate","useNavigate","Paper","width","pt","TableContainer","Table","TableHead","TableRow","fontWeight","TableCell","textAlign","TableBody","slice","map","row","_row$unique_processor","hover","uuid","cursor","name","app_type_name","is_published","maxWidth","unique_processors","x","Chip","size","DeleteForeverIcon","theme","palette","error","main","stopPropagation","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","parseInt","SharedAppList","setApps","useEffect","get","data","access_permission","published_uuid","owner_email","DoneIcon","AppFromTemplateDialog","_appTemplate$categori","appTemplateSlug","appName","setAppName","appTemplate","appTemplateState","startsWith","Typography","description","example_app_uuid","href","rel","Stack","gap","direction","mt","categories","tag","index","borderRadius","paddingTop","paddingBottom","_appTemplate$app","_appTemplate$app2","payload","_objectSpread","app","app_type","type_slug","replaceAll","template_slug","slug","post","appID","AppTemplateCategoryIcon","category","src","selectAllIcon_light","alt","AppTemplateIcon","template","icon","AppTypeIcon","_ref3","WebOutlined","m","QuestionAnswerOutlined","AutoFixHighOutlined","AppTemplateCard","_ref4","_template$app","_template$app2","_template$app3","setSelectedAppTemplateSlug","setOpenAppFromTemplateDialog","Card","display","flexDirection","minWidth","minHeight","maxHeight","boxShadow","backgroundColor","elevation","CardContent","ListItem","alignItems","pl","ListItemIcon","p","ListItemText","WebkitLineClamp","WebkitBoxOrient","overflow","textOverflow","whiteSpace","lineHeight","CardActions","justifyContent","flexGrow","ml","pb","height","mb","openAppFromTemplateDialog","appTemplates","appTemplatesState","isMobile","isMobileState","selectedCategory","setSelectedCategory","selectedAppTemplateSlug","_toConsumableArray","Set","category_slugs","flatMap","filter","sort","Box","Grid","container","spacing","xs","md","List","ListItemButton","selected","borderBottom","startCase","flexWrap","mr","overflowY","includes","Divider","_useTour","useTour","steps","setSteps","setIsOpen","_useCookies","useCookies","_useCookies2","cookies","setCookie","containerRef","useRef","current","selector","content","process","REACT_APP_SITE_NAME","position","actionAfter","maxAge","ref","marginBottom","className","AppTemplatesContainer"],"sourceRoot":""}