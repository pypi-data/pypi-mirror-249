{"version":3,"file":"static/js/3375.13c332b7.chunk.js","mappings":"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","sources":["components/DeleteConfirmationModal.jsx","components/datasource/ShareDataSourceModal.jsx","components/datasource/DataSourceEntryContent.jsx","components/Utils.jsx","pages/data.jsx"],"sourcesContent":["import React from \"react\";\nimport { Dialog, Button, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@mui/material\";\nexport default function DeleteConfirmationModal(props) {\n  const {\n    id,\n    open,\n    onOk,\n    onCancel,\n    title,\n    text\n  } = props;\n  return <Dialog title={title ? title : \"Logged Out\"} open={open} onCancel={onCancel}>\n      <DialogTitle id=\"delete-modal-title\">Confirm Delete</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button key=\"cancel\" onClick={() => onCancel(id)}>\n          Cancel\n        </Button>\n        ,\n        <Button key=\"submit\" variant=\"contained\" type=\"primary\" onClick={() => onOk(id)}>\n          Confirm\n        </Button>\n        ,\n      </DialogActions>\n    </Dialog>;\n}","import React from \"react\";\nimport { Dialog, Button as MuiButton, DialogTitle, DialogContent, DialogActions, Stack, Select as MuiSelect, MenuItem } from \"@mui/material\";\nimport { axios } from \"../../data/axios\";\nexport default function ShareDataSourceModal(props) {\n  const {\n    id,\n    open,\n    onOk,\n    onCancel,\n    title,\n    dataSource\n  } = props;\n  const [visibility, setVisibility] = React.useState(dataSource?.visibility);\n  const onOkClick = () => {\n    let action = \"noop\";\n    if (visibility !== dataSource.visibility) {\n      if (dataSource.visibility === 0 && visibility === 1) {\n        // If the visibility is changing from 1 to 0, then we need to make the entry private\n        axios().post(`api/org/datasources/${dataSource.uuid}/add_entry`).then(res => {\n          onOk(action, dataSource);\n        });\n      } else if (dataSource.visibility === 1 && visibility === 0) {\n        // If the visibility is changing from 1 to 0, then we need to make the entry org public\n        axios().delete(`api/org/datasources/${dataSource.uuid}`).then(res => {\n          onOk(action, dataSource);\n        });\n      } else {\n        onOk(action, dataSource);\n      }\n    } else {\n      onOk(action, dataSource);\n    }\n  };\n  const visibilityOptions = [{\n    value: 1,\n    label: \"Organization\",\n    description: \"Members of your organization can access this datasource\"\n  }, {\n    value: 0,\n    label: \"You\",\n    description: \"Only you can access this datasource\"\n  }];\n  return <Dialog open={open} onClose={() => onCancel(id)} aria-labelledby=\"share-datasource-dialog-title\" aria-describedby=\"share-datasource-dialog-description\">\n      <DialogTitle id=\"share-datasource-dialog-title\">{title}</DialogTitle>\n      <DialogContent style={{\n      minWidth: \"500px\"\n    }}>\n        <Stack spacing={2}>\n          <h4>Choose who can access this datasource</h4>\n          <MuiSelect labelId=\"share-datasource-select-label\" size=\"small\" defaultValue={dataSource?.visibility === undefined ? 1 : dataSource?.visibility} onChange={e => {\n          setVisibility(e.target.value);\n        }}>\n            {visibilityOptions.map(option => {\n            return <MenuItem key={option.value} value={option.value}>\n                  <Stack direction=\"row\" spacing={1}>\n                    <span>{option.label}</span>\n                    <small>{option.description}</small>\n                  </Stack>\n                </MenuItem>;\n          })}\n          </MuiSelect>\n        </Stack>\n      </DialogContent>\n      <DialogActions>\n        <MuiButton onClick={() => onCancel(id)}>Cancel</MuiButton>\n        <MuiButton variant=\"contained\" onClick={() => onOkClick(id)}>\n          Done\n        </MuiButton>\n      </DialogActions>\n    </Dialog>;\n}","import React, { useEffect, useState } from \"react\";\nimport { Box, Button, Chip, CircularProgress, Divider, Drawer, Stack } from \"@mui/material\";\nimport { TextareaAutosize } from \"@mui/base\";\nimport { axios } from \"../../data/axios\";\nfunction DataSourceEntryContent({\n  onCancel,\n  dataSourceEntry,\n  open\n}) {\n  const [data, setData] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (dataSourceEntry?.config?.document_ids) {\n      axios().get(`/api/datasource_entries/${dataSourceEntry.uuid}/text_content`).then(response => {\n        setData(<TextareaAutosize value={response.data?.content} disabled={true} autoSize style={{\n          maxHeight: \"80vh\",\n          width: \"100%\",\n          overflow: \"auto\"\n        }} />);\n        setMetadata(response.data?.metadata);\n      }).finally(() => setLoading(false));\n    } else {\n      setData(<TextareaAutosize value={JSON.stringify(dataSourceEntry?.config?.errors)} disabled={true} autoSize style={{\n        maxHeight: \"80vh\",\n        width: \"100%\",\n        overflow: \"auto\"\n      }} />);\n    }\n  }, [dataSourceEntry]);\n  return <Drawer open={open} onClose={onCancel} anchor=\"right\" sx={{\n    \"& .MuiDrawer-paper\": {\n      minWidth: \"40%\"\n    },\n    maxWidth: \"40%\"\n  }}>\n      <Box>\n        <Stack direction={\"row\"} gap={1} sx={{\n        mb: \"10px\",\n        mt: \"10px\"\n      }}>\n          <Button onClick={() => onCancel()} sx={{\n          alignSelf: \"left\"\n        }}>\n            X\n          </Button>\n          {Object.keys(metadata || {}).map(key => <Chip label={`${key}: ${metadata[key]}`} size=\"small\" key={key} sx={{\n          borderRadius: \"10px\",\n          marginTop: \"5px\"\n        }} />)}\n        </Stack>\n        <Divider />\n        {loading ? <CircularProgress /> : <div style={{\n        margin: \"0px 10px\"\n      }}>{data}</div>}\n      </Box>\n    </Drawer>;\n}\nexport default DataSourceEntryContent;","export function LocaleDate(props) {\n  const date = new Date(props.value);\n  return <span>{date.toLocaleString()}</span>;\n}\n\n// Render file size in human readable format\nexport function FileSize(props) {\n  let size = props.value;\n  const units = [\"\", \"K\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\n  let unit = 0;\n  while (size >= 1024) {\n    size /= 1024;\n    unit += 1;\n  }\n  return <span>\n      {size > 0 ? size.toFixed(2) + \" \" + units[unit] : size + \" \" + units[unit]}\n    </span>;\n}","import { useEffect, useState } from \"react\";\nimport { Alert, AlertTitle, Box, Button, Chip, CircularProgress, Collapse, Container, IconButton, Grid, Pagination, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, Typography } from \"@mui/material\";\nimport { AddOutlined, DeleteOutlineOutlined, KeyboardArrowDownOutlined, KeyboardArrowRightOutlined, PeopleOutlineOutlined, PersonOutlineOutlined, SettingsEthernet, SyncOutlined, VisibilityOutlined } from \"@mui/icons-material\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { dataSourceEntriesState, orgDataSourceEntriesState, dataSourceEntriesTableDataState, profileFlagsState } from \"../data/atoms\";\nimport { AddDataSourceModal } from \"../components/datasource/AddDataSourceModal\";\nimport DeleteConfirmationModal from \"../components/DeleteConfirmationModal\";\nimport ShareDataSourceModal from \"../components/datasource/ShareDataSourceModal\";\nimport DataSourceEntryContent from \"../components/datasource/DataSourceEntryContent\";\nimport { LocaleDate, FileSize } from \"../components/Utils\";\nimport { useReloadDataSourceEntries, useReloadDataSources } from \"../data/init\";\nimport { axios } from \"../data/axios\";\nimport moment from \"moment\";\nfunction DataSourceEntries({\n  dataSourceEntryData\n}) {\n  const [dataSourceEntryDrawerOpen, setDataSourceEntryDrawerOpen] = useState(false);\n  const [dataSourceEntry, setDataSourceEntry] = useState(null);\n  const [deleteConfirmationModalOpen, setDeleteConfirmationModalOpen] = useState(false);\n  const reloadDataSourceEntries = useReloadDataSourceEntries();\n  const columns = [{\n    title: \"Name\",\n    key: \"name\"\n  }, {\n    title: \"Size\",\n    key: \"size\",\n    render: record => {\n      return <FileSize value={record} />;\n    }\n  }, {\n    title: \"Status\",\n    key: \"status\",\n    render: (record, row) => {\n      let color = \"success\";\n      if (record === \"FAILED\") {\n        color = \"error\";\n      } else if (record === \"READY\") {\n        color = \"success\";\n      } else {\n        color = \"info\";\n      }\n      return <Chip color={color} key={row.uuid} style={{\n        cursor: \"pointer\"\n      }} label={row.status.charAt(0) + row.status.slice(1).toLowerCase()} size=\"small\"></Chip>;\n    }\n  }, {\n    title: \"Created At\",\n    key: \"created_at\",\n    render: record => {\n      return <LocaleDate value={record} />;\n    }\n  }, {\n    title: \"Last Modified\",\n    key: \"updated_at\",\n    render: record => {\n      return moment(record).fromNow();\n    }\n  }, {\n    title: \"Action\",\n    key: \"operation\",\n    render: (record, row) => {\n      const isAdhocSyncSupported = record?.sync_config;\n      return <Box>\n            <Tooltip title=\"View Contents\">\n              <IconButton onClick={() => {\n            setDataSourceEntryDrawerOpen(true);\n            setDataSourceEntry(row);\n          }}>\n                <VisibilityOutlined />\n              </IconButton>\n            </Tooltip>\n            {isAdhocSyncSupported && <Tooltip title=\"Sync Contents\">\n                <IconButton>\n                  <SyncOutlined />\n                </IconButton>\n              </Tooltip>}\n            <Tooltip title=\"Delete Entry\">\n              <IconButton onClick={() => {\n            setDataSourceEntry(row);\n            setDeleteConfirmationModalOpen(true);\n          }}>\n                <DeleteOutlineOutlined />\n              </IconButton>\n            </Tooltip>\n          </Box>;\n    }\n  }];\n  return dataSourceEntryData.length === 0 ? <Container>\n      <Alert severity=\"info\" sx={{\n      maxWidth: \"300px\",\n      margin: \"0 auto\"\n    }}>\n        <AlertTitle>No entries found</AlertTitle>\n        Click on the <strong>+</strong> icon to add a new entry.\n      </Alert>\n    </Container> : <Table stickyHeader aria-label=\"sticky table contents\" colSpan={7}>\n      <TableHead>\n        <TableRow>\n          {columns.map(column => <TableCell key={column.key} sx={{\n          padding: \"5px 16px\"\n        }}>\n              <strong>{column.title}</strong>\n            </TableCell>)}\n        </TableRow>\n      </TableHead>\n      <TableBody sx={{\n      borderBottom: \"none\"\n    }}>\n        {dataSourceEntryData?.map((row, index) => {\n        return <TableRow role=\"checkbox\" tabIndex={-1} key={row.uuid}>\n              {columns.map(column => {\n            const value = row[column.key];\n            return <TableCell key={column.key} sx={{\n              padding: \"0 16px\"\n            }}>\n                    {column.render ? column.render(value, row) : value}\n                  </TableCell>;\n          })}\n            </TableRow>;\n      })}\n      </TableBody>\n      <DataSourceEntryContent onCancel={() => setDataSourceEntryDrawerOpen(false)} dataSourceEntry={dataSourceEntry} open={dataSourceEntryDrawerOpen} />\n      <DeleteConfirmationModal id={dataSourceEntry} title=\"Delete Data Source Entry\" text={<div>\n            Are you sure you want to delete{\" \"}\n            <span style={{\n        fontWeight: \"bold\"\n      }}>{dataSourceEntry?.name}</span>{\" \"}\n            ?\n          </div>} open={deleteConfirmationModalOpen} onOk={param => {\n      axios().delete(`api/datasource_entries/${param.uuid}`).then(res => {\n        reloadDataSourceEntries();\n        setDeleteConfirmationModalOpen(false);\n      });\n    }} onCancel={() => {\n      setDeleteConfirmationModalOpen(false);\n    }} />\n    </Table>;\n}\nexport default function DataPage() {\n  const entriesPerPage = 10;\n  const [pageNumber, setPageNumber] = useState(1);\n  const [deleteModalTitle, setDeleteModalTitle] = useState(\"\");\n  const [deleteModalMessage, setDeleteModalMessage] = useState(\"\");\n  const [deleteId, setDeleteId] = useState(null);\n  const [addDataSourceModalOpen, setAddDataSourceModalOpen] = useState(false);\n  const [deleteConfirmationModalOpen, setDeleteConfirmationModalOpen] = useState(false);\n  const [shareDataSourceModalOpen, setShareDataSourceModalOpen] = useState(false);\n  const dataSourceEntriesTable = useRecoilValue(dataSourceEntriesTableDataState);\n  const [dataSourceEntries, setDataSourceEntries] = useRecoilState(dataSourceEntriesState);\n  const [orgDataSourceEntries, setOrgDataSourceEntries] = useRecoilState(orgDataSourceEntriesState);\n  const [dataSourceEntriesLoading, setDataSourceEntriesLoading] = useState(null);\n  const [tableData, setTableData] = useState([]);\n  const [modalTitle, setModalTitle] = useState(\"Add New Data Source\");\n  const [selectedDataSource, setSelectedDataSource] = useState(null);\n  const [dataSourceBeingLoaded, setDataSourceBeingLoaded] = useState(null); // uuid of the data source being loaded\n  const reloadDataSourceEntries = useReloadDataSourceEntries();\n  const reloadDataSources = useReloadDataSources();\n  const profileFlags = useRecoilValue(profileFlagsState);\n  useEffect(() => {\n    if (dataSourceEntriesTable.length > 0) {\n      setTableData(oldTableData => dataSourceEntriesTable.map(item => ({\n        ...item,\n        expand: oldTableData.find(row => row.uuid === item.uuid)?.expand || false\n      })));\n    }\n  }, [dataSourceEntriesTable]);\n  const columns = [{\n    title: \"Name\",\n    key: \"name\",\n    render: (record, row) => {\n      return <Typography sx={{\n        display: \"flex\"\n      }}>\n            {row.expand ? <KeyboardArrowDownOutlined fontSize=\"10px\" sx={{\n          color: \"#999\",\n          margin: \"auto 0\"\n        }} /> : <KeyboardArrowRightOutlined fontSize=\"10px\" sx={{\n          color: \"#999\",\n          margin: \"auto 0\"\n        }} />}\n            {record}\n          </Typography>;\n    }\n  }, {\n    title: \"Owner\",\n    key: \"owner_email\",\n    render: (record, row) => {\n      return <span>{row.isUserOwned ? \"me\" : row.owner_email}</span>;\n    }\n  }, {\n    title: \"Data Source Type\",\n    key: \"type\",\n    render: record => {\n      return <span>{record[\"name\"]}</span>;\n    }\n  }, {\n    title: \"Size\",\n    key: \"size\",\n    render: record => {\n      return <FileSize value={record} />;\n    }\n  }, {\n    title: \"Created At\",\n    key: \"created_at\",\n    render: record => {\n      return <LocaleDate value={record} />;\n    }\n  }, {\n    title: \"Last Modified\",\n    key: \"updated_at\",\n    render: record => {\n      return moment(record).fromNow();\n    }\n  }, {\n    title: \"Action\",\n    key: \"operation\",\n    render: (record, row) => {\n      return <Box>\n            {!record?.type?.is_external_datasource && <IconButton disabled={!row.isUserOwned} onClick={e => {\n          setModalTitle(\"Add New Data Entry\");\n          setSelectedDataSource(row);\n          setAddDataSourceModalOpen(true);\n          e.stopPropagation();\n        }}>\n                <AddOutlined />\n              </IconButton>}\n            {row?.type?.is_external_datasource && <Tooltip title=\"External Connection\">\n                <span>\n                  <IconButton disabled={true}>\n                    <SettingsEthernet />\n                  </IconButton>\n                </span>\n              </Tooltip>}\n            <IconButton disabled={!row.isUserOwned} onClick={() => {\n          setDeleteId(row);\n          setDeleteModalTitle(\"Delete Data Source\");\n          setDeleteModalMessage(<div>\n                    Are you sure you want to delete{\" \"}\n                    <span style={{\n              fontWeight: \"bold\"\n            }}>{row.name}</span> ?\n                  </div>);\n          setDeleteConfirmationModalOpen(true);\n        }}>\n              <DeleteOutlineOutlined />\n            </IconButton>\n            {profileFlags.IS_ORGANIZATION_MEMBER && row.isUserOwned && <IconButton onClick={() => {\n          setModalTitle(\"Share Datasource\");\n          setSelectedDataSource(row);\n          setShareDataSourceModalOpen(true);\n        }}>\n                {row.visibility === 0 ? <PersonOutlineOutlined /> : <PeopleOutlineOutlined />}\n              </IconButton>}\n          </Box>;\n    }\n  }];\n\n  // Expand the datasource row on click and load the datasource entries\n  const handleRowClick = row => {\n    setTableData(tableData.map(item => {\n      if (item.uuid === row.uuid) {\n        item.expand = !item.expand;\n      }\n      return item;\n    }));\n    setDataSourceEntriesLoading(true);\n    setDataSourceBeingLoaded(row.uuid);\n    let url = `/api/datasources/${row.uuid}/entries`;\n    if (!row.isUserOwned) {\n      url = `/api/org/datasources/${row.uuid}/entries`;\n    }\n    axios().get(url).then(response => {\n      if (row.isUserOwned) {\n        setDataSourceEntries([...dataSourceEntries.filter(dataSourceEntry => dataSourceEntry.datasource.uuid !== row.uuid), ...response.data]);\n      } else {\n        setOrgDataSourceEntries([...orgDataSourceEntries.filter(dataSourceEntry => dataSourceEntry.datasource.uuid !== row.uuid), ...response.data]);\n      }\n    }).finally(() => {\n      setDataSourceEntriesLoading(null);\n    });\n  };\n  return <div id=\"data-page\" style={{\n    marginBottom: \"120px\"\n  }}>\n      <Grid span={24} style={{\n      padding: \"10px\"\n    }}>\n        <Grid item style={{\n        width: \"100%\",\n        padding: \"15px 0px\"\n      }}>\n          <Button onClick={() => {\n          setAddDataSourceModalOpen(true);\n        }} type=\"primary\" variant=\"contained\" sx={{\n          float: \"left\",\n          marginBottom: \"10px\",\n          textTransform: \"none\"\n        }}>\n            Add Data Source\n          </Button>\n        </Grid>\n        <Grid item style={{\n        width: \"100%\"\n      }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map(column => <TableCell key={column.key} sx={{\n                paddingLeft: column.key === \"name\" ? \"40px\" : \"inherit\"\n              }}>\n                    <strong>{column.title}</strong>\n                  </TableCell>)}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tableData.slice((pageNumber - 1) * entriesPerPage, pageNumber * entriesPerPage).map((row, index) => {\n              return [[<TableRow hover key={row.uuid} sx={{\n                cursor: \"pointer\",\n                backgroundColor: row.expand ? \"#f5f5f5\" : \"inherit\"\n              }} onClick={() => {\n                handleRowClick(row);\n              }}>\n                        {columns.map(column => {\n                  const value = row[column.key];\n                  return <TableCell key={column.key} sx={{\n                    fontWeight: row.expand ? \"bold\" : \"inherit\"\n                  }}>\n                              {column.render ? column.render(value, row) : value}\n                            </TableCell>;\n                })}\n                      </TableRow>, <TableRow key={`${row.uuid}_details`}>\n                        <TableCell colSpan={7} sx={{\n                  padding: row.expand ? \"0\" : \"inherit\"\n                }}>\n                          <Collapse in={row.expand} timeout=\"auto\" unmountOnExit>\n                            <Box sx={{\n                      margin: 1\n                    }}>\n                              {dataSourceEntriesLoading && dataSourceBeingLoaded === row.uuid ? <CircularProgress /> : <DataSourceEntries dataSourceEntryData={row.data_source_entries || []} />}\n                            </Box>\n                          </Collapse>\n                        </TableCell>\n                      </TableRow>]];\n            })}\n            </TableBody>\n          </Table>\n          <Pagination count={Math.ceil(tableData.length / entriesPerPage)} variant=\"outlined\" shape=\"rounded\" page={pageNumber} onChange={(event, value) => {\n          setPageNumber(value);\n        }} sx={{\n          marginTop: 2,\n          float: \"right\"\n        }} />\n        </Grid>\n      </Grid>\n      {addDataSourceModalOpen && <AddDataSourceModal open={addDataSourceModalOpen} handleCancelCb={() => {\n      setSelectedDataSource(null);\n      setAddDataSourceModalOpen(false);\n    }} dataSourceAddedCb={() => {\n      setSelectedDataSource(null);\n      reloadDataSourceEntries();\n      reloadDataSources();\n      setAddDataSourceModalOpen(false);\n    }} modalTitle={modalTitle} datasource={selectedDataSource} />}\n      {deleteConfirmationModalOpen && <DeleteConfirmationModal id={deleteId} title={deleteModalTitle} text={deleteModalMessage} open={deleteConfirmationModalOpen} onOk={param => {\n      if (param?.data_source_entries !== undefined) {\n        axios().delete(`api/datasources/${param.uuid}`).then(res => {\n          reloadDataSources();\n          setDeleteConfirmationModalOpen(false);\n        });\n      }\n    }} onCancel={() => {\n      setDeleteConfirmationModalOpen(false);\n    }} />}\n      {shareDataSourceModalOpen && <ShareDataSourceModal title={modalTitle} onCancel={() => setShareDataSourceModalOpen(false)} onOk={() => {\n      setShareDataSourceModalOpen(false);\n    }} open={shareDataSourceModalOpen} dataSource={selectedDataSource} />}\n    </div>;\n}"],"names":["DeleteConfirmationModal","props","id","open","onOk","onCancel","title","text","_jsxs","Dialog","children","_jsx","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","variant","type","ShareDataSourceModal","dataSource","_React$useState","React","visibility","_React$useState2","_slicedToArray","setVisibility","onClose","style","minWidth","Stack","spacing","MuiSelect","labelId","size","defaultValue","undefined","onChange","e","target","value","label","description","map","option","MenuItem","direction","MuiButton","action","axios","post","concat","uuid","then","res","delete","onOkClick","_ref","dataSourceEntry","_useState","useState","_useState2","data","setData","_useState3","_useState4","metadata","setMetadata","_useState5","_useState6","loading","setLoading","useEffect","_dataSourceEntry$conf","_dataSourceEntry$conf2","config","document_ids","get","response","_response$data","_response$data2","TextareaAutosize","content","disabled","autoSize","maxHeight","width","overflow","finally","JSON","stringify","errors","Drawer","anchor","sx","maxWidth","Box","gap","mb","mt","alignSelf","Object","keys","key","Chip","borderRadius","marginTop","Divider","CircularProgress","margin","LocaleDate","date","Date","toLocaleString","FileSize","units","unit","toFixed","DataSourceEntries","dataSourceEntryData","dataSourceEntryDrawerOpen","setDataSourceEntryDrawerOpen","setDataSourceEntry","deleteConfirmationModalOpen","setDeleteConfirmationModalOpen","reloadDataSourceEntries","useReloadDataSourceEntries","columns","render","record","row","color","cursor","status","charAt","slice","toLowerCase","moment","fromNow","isAdhocSyncSupported","sync_config","Tooltip","IconButton","VisibilityOutlined","SyncOutlined","DeleteOutlineOutlined","length","Container","Alert","severity","AlertTitle","Table","stickyHeader","colSpan","TableHead","TableRow","column","TableCell","padding","TableBody","borderBottom","index","role","tabIndex","DataSourceEntryContent","fontWeight","name","param","DataPage","_useState7","_useState8","pageNumber","setPageNumber","_useState9","_useState10","deleteModalTitle","setDeleteModalTitle","_useState11","_useState12","deleteModalMessage","setDeleteModalMessage","_useState13","_useState14","deleteId","setDeleteId","_useState15","_useState16","addDataSourceModalOpen","setAddDataSourceModalOpen","_useState17","_useState18","_useState19","_useState20","shareDataSourceModalOpen","setShareDataSourceModalOpen","dataSourceEntriesTable","useRecoilValue","dataSourceEntriesTableDataState","_useRecoilState","useRecoilState","dataSourceEntriesState","_useRecoilState2","dataSourceEntries","setDataSourceEntries","_useRecoilState3","orgDataSourceEntriesState","_useRecoilState4","orgDataSourceEntries","setOrgDataSourceEntries","_useState21","_useState22","dataSourceEntriesLoading","setDataSourceEntriesLoading","_useState23","_useState24","tableData","setTableData","_useState25","_useState26","modalTitle","setModalTitle","_useState27","_useState28","selectedDataSource","setSelectedDataSource","_useState29","_useState30","dataSourceBeingLoaded","setDataSourceBeingLoaded","reloadDataSources","useReloadDataSources","profileFlags","profileFlagsState","oldTableData","item","_oldTableData$find","_objectSpread","expand","find","Typography","display","KeyboardArrowDownOutlined","fontSize","KeyboardArrowRightOutlined","isUserOwned","owner_email","_record$type","_row$type","is_external_datasource","stopPropagation","AddOutlined","SettingsEthernet","IS_ORGANIZATION_MEMBER","PersonOutlineOutlined","PeopleOutlineOutlined","marginBottom","Grid","span","float","textTransform","paddingLeft","hover","backgroundColor","url","_toConsumableArray","filter","datasource","handleRowClick","Collapse","in","timeout","unmountOnExit","data_source_entries","Pagination","count","Math","ceil","shape","page","event","AddDataSourceModal","handleCancelCb","dataSourceAddedCb"],"sourceRoot":""}