{"version":3,"file":"static/js/9391.18b42078.chunk.js","mappings":"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","sources":["components/apps/StreamingVideoPlayer.jsx","components/apps/MarkdownRenderer.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { get } from \"lodash\";\nimport { streamChunksState } from \"../../data/atoms\";\nfunction StreamingVideoPlayer({\n  streamKey,\n  messageId\n}) {\n  const videoRef = useRef(null);\n  const sourceBufferRef = useRef(null);\n  const mediaSource = useRef(new MediaSource());\n  const [isSourceBufferReady, setIsSourceBufferReady] = useState(false);\n  const isVideoSrcSet = useRef(false); // New ref to track if video's src is set\n  const streamChunks = useRecoilValue(streamChunksState);\n  const chunks = get(streamChunks, messageId ? `${messageId}.${streamKey}` : streamKey, []);\n  const [chunksProcessed, setChunksProcessed] = useState(0);\n  useEffect(() => {\n    // Initialization logic\n    const video = videoRef.current;\n    if (!isVideoSrcSet.current) {\n      video.src = URL.createObjectURL(mediaSource.current);\n      isVideoSrcSet.current = true;\n    }\n    videoRef.current.addEventListener(\"error\", e => {\n      console.error(\"Video error:\", videoRef.current.error);\n    });\n    function sourceOpen() {\n      if (!sourceBufferRef.current) {\n        sourceBufferRef.current = mediaSource.current.addSourceBuffer(\"video/mp4; codecs=avc1.64001e\");\n        sourceBufferRef.current.addEventListener(\"error\", e => {\n          console.error(\"SourceBuffer error:\", e);\n        });\n        sourceBufferRef.current.addEventListener(\"updateend\", e => {\n          console.debug(\"SourceBuffer Update end\", e);\n        });\n        sourceBufferRef.current.addEventListener(\"updatestart\", e => {\n          console.debug(\"SourceBuffer Update start\", e);\n        });\n        sourceBufferRef.current.addEventListener(\"abort\", e => {\n          console.debug(\"SourceBuffer aborted\", e);\n        });\n        sourceBufferRef.current.addEventListener(\"update\", e => {\n          console.debug(\"SourceBuffer Updated\", e);\n        });\n        setIsSourceBufferReady(true);\n      }\n    }\n    mediaSource.current.addEventListener(\"sourceopen\", sourceOpen);\n  }, [chunksProcessed]);\n  useEffect(() => {\n    if (!isSourceBufferReady || !sourceBufferRef.current || chunks.length === 0) return;\n    let currentChunkIndex = chunksProcessed;\n    function updateSourceBuffer() {\n      if (sourceBufferRef.current.updating) return;\n      if (currentChunkIndex >= chunks.length) return;\n      const base64String = chunks[currentChunkIndex];\n      const uint8Array = base64ToArrayBuffer(base64String);\n      try {\n        sourceBufferRef.current.appendBuffer(uint8Array);\n        currentChunkIndex += 1;\n        setChunksProcessed(currentChunkIndex);\n      } catch (e) {\n        console.error(e);\n      }\n      console.debug(\"Current chunk index\", currentChunkIndex, uint8Array, sourceBufferRef.current, mediaSource.current.readyState, sourceBufferRef.current.buffered);\n    }\n    sourceBufferRef.current.addEventListener(\"updateend\", updateSourceBuffer);\n    updateSourceBuffer();\n    return () => {\n      sourceBufferRef.current.removeEventListener(\"updateend\", updateSourceBuffer);\n    };\n  }, [chunks, isSourceBufferReady, chunksProcessed]);\n  function base64ToArrayBuffer(base64) {\n    const binaryString = atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes.buffer;\n  }\n  return chunks ? <video ref={videoRef} autoPlay width={\"100%\"} controls /> : null;\n}\nexport default StreamingVideoPlayer;","import ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport loadingImage from \"../../assets/images/loading.gif\";\nimport ThemedJsonForm from \"../ThemedJsonForm\";\nimport validator from \"@rjsf/validator-ajv8\";\nimport { useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Box, Button, Stack, Typography } from \"@mui/material\";\nimport { ContentCopyOutlined } from \"@mui/icons-material\";\nimport StreamingVideoPlayer from \"./StreamingVideoPlayer\";\nfunction FunctionFormComponent(props) {\n  // Render a form component with submit button\n  const [formData, setFormData] = useState({});\n  try {\n    const form = JSON.parse(props.children[0]);\n    return <ThemedJsonForm schema={form} formData={formData} validator={validator} onChange={e => {\n      setFormData(e.formData);\n    }} />;\n  } catch (e) {\n    console.log(e);\n  }\n  return <div>Unable to render form</div>;\n}\nexport default function MarkdownRenderer(props) {\n  const messageId = props.messageId;\n  return <ReactMarkdown {...props} remarkPlugins={[remarkGfm]} components={{\n    img: ({\n      node,\n      ...props\n    }) => {\n      const {\n        alt,\n        src\n      } = props;\n      // We provide alt text and style as altText|style where style is a string\n      const [altText, style] = alt.split(\"|\");\n      let styleJson = {};\n      try {\n        styleJson = JSON.parse(style);\n      } catch (e) {\n        // Do nothing\n      }\n      if (src.startsWith(\"data:audio/\") || altText === \"Audio\") {\n        return <audio controls style={{\n          ...{\n            display: \"block\"\n          },\n          ...styleJson\n        }} src={src} autoPlay>\n                {\" \"}\n              </audio>;\n      }\n      // If src is a video that can be played on the browser, render it as a video\n      if (src.endsWith(\".mp4\") || src.endsWith(\".webm\") || src.endsWith(\".ogg\")) {\n        return <video controls style={{\n          ...{\n            display: \"block\",\n            maxWidth: \"100%\",\n            boxShadow: \"0px 0px 10px 1px #7d7d7d\"\n          },\n          ...styleJson\n        }} src={src}>\n                Unable to load video\n              </video>;\n      }\n      if (src.startsWith(\"data:videostream/\")) {\n        return <StreamingVideoPlayer streamKey={src.replace(\"data:videostream/\", \"\")} messageId={messageId} />;\n      }\n      return <img src={src || loadingImage} alt={altText} style={{\n        ...{\n          display: \"block\",\n          maxWidth: \"100%\",\n          boxShadow: \"0px 0px 10px 1px #7d7d7d\"\n        },\n        ...styleJson\n      }} />;\n    },\n    a: ({\n      node,\n      ...props\n    }) => {\n      return <a {...props} target=\"_blank\" rel=\"noreferrer nofollow\">\n              {props.children}\n            </a>;\n    },\n    table: ({\n      node,\n      ...props\n    }) => {\n      return <table style={{\n        borderCollapse: \"collapse\",\n        border: \"1px solid #ccc\"\n      }} {...props}>\n              {props.children}\n            </table>;\n    },\n    tr: ({\n      node,\n      ...props\n    }) => {\n      return <tr {...props} style={{\n        border: \"1px solid #ccc\"\n      }}>\n              {props.children}\n            </tr>;\n    },\n    th: ({\n      node,\n      ...props\n    }) => {\n      return <th {...props} style={{\n        border: \"1px solid #ccc\"\n      }}>\n              {props.children}\n            </th>;\n    },\n    td: ({\n      node,\n      ...props\n    }) => {\n      return <td {...props} style={{\n        border: \"1px solid #ccc\"\n      }}>\n              {props.children}\n            </td>;\n    },\n    code: ({\n      node,\n      ...codeProps\n    }) => {\n      const language = codeProps.className;\n      if (language === \"language-function_form\") {\n        return <FunctionFormComponent onFormSubmit={props.onFormSubmit} {...codeProps} />;\n      }\n      return language ? <Stack sx={{\n        maxWidth: \"90%\"\n      }}>\n              <Box sx={{\n          backgroundColor: \"#CCC\",\n          padding: \"5px\",\n          color: \"#000\",\n          fontWeight: \"400\",\n          fontSize: \"14px\",\n          borderRadius: \"5px 5px 0px 0px\"\n        }}>\n                <Typography sx={{\n            textTransform: \"none\"\n          }}>\n                  {language?.split(\"-\")[1].charAt(0).toUpperCase() + language?.split(\"-\")[1].slice(1)}\n                  <Button startIcon={<ContentCopyOutlined />} sx={{\n              textTransform: \"none\",\n              padding: \"0px 5px\",\n              float: \"right\",\n              color: \"#000\"\n            }} onClick={() => {\n              navigator.clipboard.writeText(codeProps.children[0]);\n            }}>\n                    Copy code\n                  </Button>\n                </Typography>\n              </Box>\n              <AceEditor mode={language?.split(\"-\")[1] || \"text\"} theme=\"dracula\" value={codeProps.children[0]} editorProps={{\n          $blockScrolling: true\n        }} setOptions={{\n          useWorker: false,\n          showGutter: false,\n          maxLines: Infinity\n        }} style={{\n          borderRadius: \"0px 0px 5px 5px\",\n          width: \"100%\"\n        }} />\n            </Stack> : <code {...codeProps}>{codeProps.children}</code>;\n    }\n  }}>\n      {props.children || \"\"}\n    </ReactMarkdown>;\n}"],"names":["_ref","streamKey","messageId","videoRef","useRef","sourceBufferRef","mediaSource","MediaSource","_useState","useState","_useState2","_slicedToArray","isSourceBufferReady","setIsSourceBufferReady","isVideoSrcSet","streamChunks","useRecoilValue","streamChunksState","chunks","get","concat","_useState3","_useState4","chunksProcessed","setChunksProcessed","useEffect","video","current","src","URL","createObjectURL","addEventListener","e","console","error","addSourceBuffer","debug","length","currentChunkIndex","updateSourceBuffer","removeEventListener","updating","uint8Array","base64","binaryString","atob","len","bytes","Uint8Array","i","charCodeAt","buffer","base64ToArrayBuffer","appendBuffer","readyState","buffered","_jsx","ref","autoPlay","width","controls","FunctionFormComponent","props","formData","setFormData","form","JSON","parse","children","ThemedJsonForm","schema","validator","onChange","log","MarkdownRenderer","ReactMarkdown","_objectSpread","remarkPlugins","remarkGfm","components","img","node","_objectWithoutProperties","_excluded","alt","_alt$split","split","_alt$split2","altText","style","styleJson","startsWith","display","endsWith","maxWidth","boxShadow","StreamingVideoPlayer","replace","loadingImage","a","_ref2","_excluded2","target","rel","table","_ref3","_excluded3","borderCollapse","border","tr","_ref4","_excluded4","th","_ref5","_excluded5","td","_ref6","_excluded6","code","_ref7","codeProps","_excluded7","language","className","onFormSubmit","_jsxs","Stack","sx","Box","backgroundColor","padding","color","fontWeight","fontSize","borderRadius","Typography","textTransform","charAt","toUpperCase","slice","Button","startIcon","ContentCopyOutlined","float","onClick","navigator","clipboard","writeText","AceEditor","mode","theme","value","editorProps","$blockScrolling","setOptions","useWorker","showGutter","maxLines","Infinity"],"sourceRoot":""}