{"version":3,"file":"static/js/8370.c6edb5e3.chunk.js","mappings":"sZAQMA,GAAYC,EAAAA,EAAAA,IAChB,SAAAD,EAAYE,EAAMC,EAAOC,EAAaC,EAAMC,IAAMC,EAAAA,EAAAA,GAAA,KAAAP,GAChDQ,KAAKN,KAAOA,EACZM,KAAKL,MAAQA,EACbK,KAAKJ,YAAcA,EACnBI,KAAKH,KAAOA,EACZG,KAAKF,KAAOA,CACd,IAEF,SAASG,EAAeC,GAMpB,IALFC,EAAOD,EAAPC,QACAC,EAAYF,EAAZE,aACAC,EAAYH,EAAZG,aACAC,EAAMJ,EAANI,OAAMC,EAAAL,EACNM,eAAAA,OAAc,IAAAD,EAAG,MAAKA,EAEtB,OAAOE,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,GAAI,CAClBC,SAAU,SACVC,IAAK,EACLC,OAAQ,IACRC,OAAQ,MACRC,WAAY,MACZC,WAAY,SACZC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,WAAS,EAACC,MAAO,CACvBC,WAAY,SACZC,MAAO,QACPN,SAAA,EACET,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAET,UACvBT,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACjB,GAAI,CACTkB,UAAW,QACXX,SACGf,EAAQ2B,KAAI,SAAAC,GAAM,OAAItB,EAAAA,EAAAA,KAACuB,EAAAA,EAAI,CAACrB,GAAI,CACjCI,OAAQ,MACRkB,aAAc,QACAC,MAAOH,EAAQI,QAAS,kBAAM9B,EAAa0B,EAAO,EAAEK,MAAO5B,IAAmBuB,EAAS,UAAY,UAAWd,WAAW,SAAjIc,EAA2I,SAGrJtB,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAET,UACvBT,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACjB,GAAI,CACTkB,UAAW,OACXX,UACET,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CAACC,YAAY,SAASC,MAAOjC,EAAQkC,SAAUpC,EAAcqC,KAAK,QAAQC,WAAY,CAChG/B,GAAI,CACFsB,aAAc,QAEhBU,gBAAgBlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAc,CAAChC,SAAS,QAAOM,UACxCT,EAAAA,EAAAA,KAACoC,EAAAA,EAAU,CAACC,SAAS,uBAOzC,CACe,SAASC,IACtB,IAAAC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiCC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACnBI,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAH,EAAAA,EAAAA,GAAAC,EAAA,GAA7BG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0CJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA8BR,EAAAA,EAAAA,UAAS,CAAC,QAAOS,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAxC1D,EAAO2D,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,GAA4CX,EAAAA,EAAAA,UAAS,OAAMY,GAAAd,EAAAA,EAAAA,GAAAa,EAAA,GAApDxD,EAAcyD,EAAA,GAAEC,EAAiBD,EAAA,GACxCE,GAAoCd,EAAAA,EAAAA,UAAS,IAAGe,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA8BlB,EAAAA,EAAAA,UAAS,IAAGmB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,GAAeC,EAAAA,EAAAA,IAAeC,EAAAA,IAC9BC,GAAeF,EAAAA,EAAAA,IAAeG,EAAAA,IAC9BC,EAAkB,CACtBnD,UAAW,OACXL,MAAO,OACPyD,WAAY,mBACZC,aAAc,OACdC,QAAS,WACTC,WAAY,IACZnD,aAAc,MACdG,MAAO,UACPU,SAAU,OACVuC,aAAc,oBACdC,WAAY,iBACZC,YAAa,iBACbC,QAASb,EAAac,uBAAyB,QAAU,QAgD3D,OA9CAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,KAAQC,IAAI,eAAeC,MAAK,SAAAC,GAE9B,IAAMC,EAAWD,EAASE,KAAKlE,KAAI,SAAAmE,GACjC,IAAMnG,EAAI,QAAAoG,OAAWD,EAAIE,gBACnBtG,IAAW,OAAHoG,QAAG,IAAHA,OAAG,EAAHA,EAAKG,aAAc,IAAItE,KAAI,SAAAuE,GAAQ,OAAIA,EAASC,IAAI,IAIlE,OAHoB,IAAhBzG,EAAK0G,QACP1G,EAAK2G,KAAK,gBAEL,IAAIhH,EAAa,MAAOyG,EAAIK,KAAML,EAAIrG,YAAaC,EAAMC,EAClE,IACA0D,EAAQuC,EACV,IAAGU,OAAM,SAAAC,GACP,IACCb,KAAK,CACN,EAEJ,GAAG,CAACrC,KACJkC,EAAAA,EAAAA,YAAU,WACJf,EAAac,yBACfE,EAAAA,EAAAA,KAAQC,IAAI,iBAAiBC,MAAK,SAAAC,GAChCpB,EAAWoB,EAASE,KACtB,GAEJ,GAAG,CAACrB,EAAac,uBAAwBf,KACzCgB,EAAAA,EAAAA,YAAU,WACR9B,GAAgB+C,EAAAA,EAAAA,GAAKpD,IACrB,IAAM1D,GAAI8G,EAAAA,EAAAA,IAAOA,EAAAA,EAAAA,GAAIpD,GAAMzB,KAAI,SAAA8E,GAAI,OAAIA,EAAK/G,IAAI,KAChDkE,EAAW,CAAC,OAAKmC,QAAAS,EAAAA,EAAAA,GAAK,IAAIE,IAAIhH,EAAKiH,WAC/B5D,EAAa0C,IAAI,WACnB1B,EAAkBhB,EAAa0C,IAAI,WAEjC1C,EAAa0C,IAAI,WACnBtB,EAAcpB,EAAa0C,IAAI,UAEnC,GAAG,CAACrC,EAAML,KACVwC,EAAAA,EAAAA,YAAU,WACR,IAAIqB,GAAQJ,EAAAA,EAAAA,GAAOpD,GACf/C,GAAqC,QAAnBA,IACpBuG,EAAWA,EAAShF,QAAO,SAAA6E,GAAI,OAAIA,EAAK/G,KAAKmH,SAASxG,EAAe,KAEpD,KAAf6D,IACF0C,EAAWA,EAAShF,QAAO,SAAA6E,GAAI,OAAIA,EAAKjH,MAAMsH,cAAcD,SAAS3C,EAAW4C,cAAc,KAEhGrD,EAAiBmD,EACnB,GAAG,CAACvG,EAAgB6D,EAAYd,KACzB9C,EAAAA,EAAAA,KAAA,OAAAS,UACHC,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAAV,SAAA,EACFT,EAAAA,EAAAA,KAACR,EAAe,CAACE,QAASA,EAASK,eAAgBA,EAAgBH,aAAc,SAAA0B,GAAM,OAAImC,EAAkBnC,EAAO,EAAE3B,aAAc,SAAA8G,GAAK,OAAI5C,EAAc4C,EAAMC,OAAO5E,MAAM,EAAEjC,OAAQ+D,KACxLlD,EAAAA,EAAAA,MAACiG,EAAAA,EAAU,CAAC9F,MAAO0D,EAAiBqC,QAAQ,KAAInG,SAAA,CAAC,aACxB,OAAZ4D,QAAY,IAAZA,OAAY,EAAZA,EAAcwB,SAE3B7F,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACC,WAAS,EAACV,GAAI,CACpB2G,UAAW,OACX9B,QAASb,EAAac,uBAAyB,OAAS,QACvD8B,QAAS,CACV7F,GAAI,EACJC,GAAI,GACH6F,QAAS,CACV9F,GAAI,EACJ+F,GAAI,EACJ9F,GAAI,IACJT,SACGuD,EAAQ3C,KAAI,SAAC8E,EAAMc,GAAK,OAAKjH,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACK,MAAI,EAAad,GAAI,CACzD6E,QAAS,OACTmC,eAAgB,SAChBC,cAAe,MACf1C,aAAc,QACbvD,GAAI,CACLiG,cAAe,UACf1G,UACIT,EAAAA,EAAAA,KAAA,KAAGoH,KAAI,QAAA3B,OAAUU,EAAKT,gBAAiBjF,UACrCC,EAAAA,EAAAA,MAAC2G,EAAAA,EAAI,CAACnH,GAAI,CACZa,MAAO,CACLE,GAAI,OACJC,GAAI,KAENoG,OAAQ,IACRC,UAAW,IACX/F,aAAc,CACZP,GAAI,MACJC,GAAI,QAENf,SAAU,WACVqH,OAAQ,UACRlH,OAAQ,MACRE,WAAY,QACZH,OAAQ,EACR0E,QAAS,OACTjE,WAAY,SACZoG,eAAgB,SAChBC,cAAe,UACdM,UAAU,gBAAgBC,UAAW,EAAEjH,SAAA,EACpCT,EAAAA,EAAAA,KAAC2G,EAAAA,EAAU,CAACtE,SAAU,GAAIsC,WAAY,IAAKhD,MAAO,UAAWzB,GAAI,CACnE6E,QAAS,cACT4C,gBAAiB,WACjBC,gBAAiB,EACjBC,SAAU,SACVhB,UAAW,QACXpG,SACS,OAAJ0F,QAAI,IAAJA,OAAI,EAAJA,EAAMN,QAET7F,EAAAA,EAAAA,KAAC8H,EAAAA,EAAW,CAAC5H,GAAI,CACnB2G,UAAW,QACXpG,UACIT,EAAAA,EAAAA,KAACuB,EAAAA,EAAI,CAACE,MAAO0E,EAAK4B,YAAYC,MAAM,KAAK,GAAI9H,GAAI,CACnDoH,OAAQ,OACRW,gBAAiB,OACjBtG,MAAO,QACPH,aAAc,kBA9CwByF,EAmDrC,OAEXjH,EAAAA,EAAAA,KAAC2G,EAAAA,EAAU,CAAC9F,MAAO0D,EAAiBqC,QAAQ,KAAInG,SAAC,mBAGjDT,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACC,WAAS,EAACV,GAAI,CACpB2G,UAAW,QACVC,QAAS,CACV7F,GAAI,EACJC,GAAI,GACH6F,QAAS,CACV9F,GAAI,EACJ+F,GAAI,EACJ9F,GAAI,IACJT,SACGyC,EAAc7B,KAAI,SAAC8E,EAAMc,GAAK,OAAKjH,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACK,MAAI,EAAad,GAAI,CAC/DC,SAAU,WACV4E,QAAS,OACTmC,eAAgB,UAChBzG,UACIT,EAAAA,EAAAA,KAAA,KAAGoH,KAAI,GAAA3B,OAAKyC,OAAOC,SAASC,SAAQ,MAAA3C,OAAKyC,OAAOC,SAASE,MAAI5C,OAAGU,EAAK9G,MAAOoB,UAC1EC,EAAAA,EAAAA,MAAC2G,EAAAA,EAAI,CAACnH,GAAI,CACZa,MAAO,CACLE,GAAI,OACJC,GAAI,KAENoH,SAAU,CACRpH,GAAI,KAENoG,OAAQ,IACRC,UAAW,IACX/F,aAAc,CACZP,GAAI,MACJC,GAAI,QAENsG,OAAQ,UACRlH,OAAQ,MACRE,WAAY,QACZH,OAAQ,GACPoH,UAAU,gBAAgBC,UAAW,EAAGhG,QAAS,kBAAMwG,OAAOC,SAASf,KAAOjB,EAAK9G,IAAI,EAACoB,SAAA,EACrFT,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACrJ,OAAOc,EAAAA,EAAAA,KAAC2G,EAAAA,EAAU,CAACtE,SAAU,GAAIsC,WAAY,IAAKhD,MAAO,UAAWzB,GAAI,CACtF6E,QAAS,cACT4C,gBAAiB,WACjBC,gBAAiB,EACjBC,SAAU,SACVhB,UAAW,QACXpG,SACa,OAAJ0F,QAAI,IAAJA,OAAI,EAAJA,EAAMjH,QACMgB,GAAI,CACzBsI,cAAe,MAEbxI,EAAAA,EAAAA,KAACyI,EAAAA,EAAW,CAAChB,UAAU,wBAAwBvH,GAAI,CACrDwE,QAAS,EACT6C,UAAW,MACXmB,SAAU,OACVb,SAAU,SACVlG,MAAO,OACPU,SAAU,OACVsG,WAAY,SACZlI,SACS,OAAJ0F,QAAI,IAAJA,OAAI,EAAJA,EAAMhH,eAETa,EAAAA,EAAAA,KAAC8H,EAAAA,EAAW,CAAC5H,GAAI,CACnBC,SAAU,WACVK,WAAY,OACZoI,OAAQ,GACR7H,MAAO,OACPN,UACIT,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACjB,GAAI,CACXa,MAAO,QACPN,SACK0F,EAAK/G,KAAKyJ,MAAM,EAAG,GAAGxH,KAAI,SAACyH,EAAK7B,GAAK,OAAKjH,EAAAA,EAAAA,KAACuB,EAAAA,EAAI,CAAaE,MAAOqH,EAAIhD,OAAS,GAAKgD,EAAIC,OAAO,EAAG,GAAK,MAAQD,EAAK5I,GAAI,CAC5HoH,OAAQ,OACRhH,OAAQ,MACRkB,aAAc,SAH0CyF,EAIrD,cA5DuCA,EAiE3C,UAInB,C","sources":["pages/discover.jsx"],"sourcesContent":["import { axios } from \"../data/axios\";\nimport { organizationState, profileFlagsState } from \"../data/atoms\";\nimport { useEffect, useState } from \"react\";\nimport { Box, Card, CardActions, CardContent, CardHeader, Typography, Chip, TextField, InputAdornment, Toolbar } from \"@mui/material\";\nimport { useSearchParams } from \"react-router-dom\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport { useRecoilValue } from \"recoil\";\nclass DiscoverCard {\n  constructor(type, title, description, tags, link) {\n    this.type = type;\n    this.title = title;\n    this.description = description;\n    this.tags = tags;\n    this.link = link;\n  }\n}\nfunction SearchAndFilter({\n  filters,\n  handleSearch,\n  handleFilter,\n  search,\n  selectedFilter = \"All\"\n}) {\n  return <Toolbar sx={{\n    position: \"sticky\",\n    top: 0,\n    zIndex: 150,\n    margin: \"5px\",\n    paddingTop: \"2px\",\n    background: \"white\"\n  }}>\n      <Grid container style={{\n      alignItems: \"center\",\n      width: \"100%\"\n    }}>\n        <Grid item xs={12} md={8}>\n          <Box sx={{\n          textAlign: \"left\"\n        }}>\n            {filters.map(filter => <Chip sx={{\n            margin: \"5px\",\n            borderRadius: \"10px\"\n          }} key={filter} label={filter} onClick={() => handleFilter(filter)} color={selectedFilter === filter ? \"primary\" : \"default\"} background=\"white\" />)}\n          </Box>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Box sx={{\n          textAlign: \"end\"\n        }}>\n            <TextField placeholder=\"Search\" value={search} onChange={handleSearch} size=\"small\" InputProps={{\n            sx: {\n              borderRadius: \"10px\"\n            },\n            startAdornment: <InputAdornment position=\"start\">\n                    <SearchIcon fontSize=\"small\" />\n                  </InputAdornment>\n          }} />\n          </Box>\n        </Grid>\n      </Grid>\n    </Toolbar>;\n}\nexport default function Discover() {\n  const [searchParams] = useSearchParams();\n  const [apps, setApps] = useState([]);\n  const [discoverCards, setDiscoverCards] = useState([]);\n  const [filters, setFilters] = useState([\"All\"]);\n  const [selectedFilter, setSelectedFilter] = useState(\"All\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [orgApps, setOrgApps] = useState([]);\n  const profileFlags = useRecoilValue(profileFlagsState);\n  const organization = useRecoilValue(organizationState);\n  const pageHeaderStyle = {\n    textAlign: \"left\",\n    width: \"100%\",\n    fontFamily: \"Lato, sans-serif\",\n    marginBottom: \"10px\",\n    padding: \"5px 10px\",\n    fontWeight: 600,\n    borderRadius: \"5px\",\n    color: \"#1c3c5a\",\n    fontSize: \"18px\",\n    borderBottom: \"solid 3px #1c3c5a\",\n    borderLeft: \"solid 1px #ccc\",\n    borderRight: \"solid 1px #ccc\",\n    display: profileFlags.IS_ORGANIZATION_MEMBER ? \"block\" : \"none\"\n  };\n  useEffect(() => {\n    axios().get(\"/api/appHub\").then(response => {\n      // handle success\n      const appCards = response.data.map(app => {\n        const link = `/app/${app.published_uuid}`;\n        const tags = (app?.categories || []).map(category => category.name);\n        if (tags.length === 0) {\n          tags.push(\"Productivity\");\n        }\n        return new DiscoverCard(\"app\", app.name, app.description, tags, link);\n      });\n      setApps(appCards);\n    }).catch(error => {\n      // handle error\n    }).then({\n      // always executed\n    });\n  }, [setApps]);\n  useEffect(() => {\n    if (profileFlags.IS_ORGANIZATION_MEMBER) {\n      axios().get(\"/api/org/apps\").then(response => {\n        setOrgApps(response.data);\n      });\n    }\n  }, [profileFlags.IS_ORGANIZATION_MEMBER, setOrgApps]);\n  useEffect(() => {\n    setDiscoverCards([...apps]);\n    const tags = [...[...apps].map(card => card.tags)];\n    setFilters([\"All\", ...new Set(tags.flat())]);\n    if (searchParams.get(\"filter\")) {\n      setSelectedFilter(searchParams.get(\"filter\"));\n    }\n    if (searchParams.get(\"search\")) {\n      setSearchTerm(searchParams.get(\"search\"));\n    }\n  }, [apps, searchParams]);\n  useEffect(() => {\n    let allCards = [...apps];\n    if (selectedFilter && selectedFilter !== \"All\") {\n      allCards = allCards.filter(card => card.tags.includes(selectedFilter));\n    }\n    if (searchTerm !== \"\") {\n      allCards = allCards.filter(card => card.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    setDiscoverCards(allCards);\n  }, [selectedFilter, searchTerm, apps]);\n  return <div>\n      <Box>\n        <SearchAndFilter filters={filters} selectedFilter={selectedFilter} handleFilter={filter => setSelectedFilter(filter)} handleSearch={event => setSearchTerm(event.target.value)} search={searchTerm} />\n        <Typography style={pageHeaderStyle} variant=\"h5\">\n          Apps from {organization?.name}\n        </Typography>\n        <Grid container sx={{\n        marginTop: \"10px\",\n        display: profileFlags.IS_ORGANIZATION_MEMBER ? \"flex\" : \"none\"\n      }} spacing={{\n        xs: 1,\n        md: 1\n      }} columns={{\n        xs: 1,\n        sm: 8,\n        md: 12\n      }}>\n          {orgApps.map((card, index) => <Grid item key={index} sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          marginBottom: \"20px\"\n        }} md={{\n          flexDirection: \"column\"\n        }}>\n              <a href={`/app/${card.published_uuid}`}>\n                <Card sx={{\n              width: {\n                xs: \"100%\",\n                md: 200\n              },\n              height: 120,\n              maxHeight: 150,\n              borderRadius: {\n                xs: \"3px\",\n                md: \"10px\"\n              },\n              position: \"relative\",\n              cursor: \"pointer\",\n              margin: \"6px\",\n              background: \"white\",\n              zIndex: 2,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              flexDirection: \"column\"\n            }} className=\"discover-card\" elevation={5}>\n                  <Typography fontSize={18} fontWeight={700} color={\"#183A58\"} sx={{\n                display: \"-webkit-box\",\n                WebkitBoxOrient: \"vertical\",\n                WebkitLineClamp: 2,\n                overflow: \"hidden\",\n                marginTop: \"10px\"\n              }}>\n                    {card?.name}\n                  </Typography>\n                  <CardActions sx={{\n                marginTop: \"10px\"\n              }}>\n                    <Chip label={card.owner_email.split(\"@\")[0]} sx={{\n                  height: \"22px\",\n                  backgroundColor: \"#CCC\",\n                  color: \"black\",\n                  borderRadius: \"10px\"\n                }}></Chip>\n                  </CardActions>\n                </Card>\n              </a>\n            </Grid>)}\n        </Grid>\n        <Typography style={pageHeaderStyle} variant=\"h5\">\n          Featured Apps\n        </Typography>\n        <Grid container sx={{\n        marginTop: \"10px\"\n      }} spacing={{\n        xs: 1,\n        md: 1\n      }} columns={{\n        xs: 1,\n        sm: 8,\n        md: 12\n      }}>\n          {discoverCards.map((card, index) => <Grid item key={index} sx={{\n          position: \"relative\",\n          display: \"flex\",\n          justifyContent: \"center\"\n        }}>\n              <a href={`${window.location.protocol}//${window.location.host}${card.link}`}>\n                <Card sx={{\n              width: {\n                xs: \"100%\",\n                md: 228\n              },\n              minWidth: {\n                md: 228\n              },\n              height: 250,\n              maxHeight: 310,\n              borderRadius: {\n                xs: \"3px\",\n                md: \"10px\"\n              },\n              cursor: \"pointer\",\n              margin: \"6px\",\n              background: \"white\",\n              zIndex: 2\n            }} className=\"discover-card\" elevation={5} onClick={() => window.location.href = card.link}>\n                  <CardHeader title={<Typography fontSize={20} fontWeight={700} color={\"#183A58\"} sx={{\n                display: \"-webkit-box\",\n                WebkitBoxOrient: \"vertical\",\n                WebkitLineClamp: 2,\n                overflow: \"hidden\",\n                marginTop: \"10px\"\n              }}>\n                        {card?.title}\n                      </Typography>} sx={{\n                paddingBottom: 0\n              }}></CardHeader>\n                  <CardContent className=\"discover-card-content\" sx={{\n                padding: 1,\n                maxHeight: \"60%\",\n                maxWidth: \"100%\",\n                overflow: \"scroll\",\n                color: \"#555\",\n                fontSize: \"16px\",\n                lineHeight: \"1.3em\"\n              }}>\n                    {card?.description}\n                  </CardContent>\n                  <CardActions sx={{\n                position: \"absolute\",\n                background: \"#fff\",\n                bottom: 15,\n                width: \"90%\"\n              }}>\n                    <Box sx={{\n                  width: \"100%\"\n                }}>\n                      {card.tags.slice(0, 5).map((tag, index) => <Chip key={index} label={tag.length > 10 ? tag.substr(0, 5) + \"...\" : tag} sx={{\n                    height: \"24px\",\n                    margin: \"2px\",\n                    borderRadius: \"10px\"\n                  }} />)}\n                    </Box>\n                  </CardActions>\n                </Card>\n              </a>\n            </Grid>)}\n        </Grid>\n      </Box>\n    </div>;\n}"],"names":["DiscoverCard","_createClass","type","title","description","tags","link","_classCallCheck","this","SearchAndFilter","_ref","filters","handleSearch","handleFilter","search","_ref$selectedFilter","selectedFilter","_jsx","Toolbar","sx","position","top","zIndex","margin","paddingTop","background","children","_jsxs","Grid","container","style","alignItems","width","item","xs","md","Box","textAlign","map","filter","Chip","borderRadius","label","onClick","color","TextField","placeholder","value","onChange","size","InputProps","startAdornment","InputAdornment","SearchIcon","fontSize","Discover","_useSearchParams","useSearchParams","searchParams","_slicedToArray","_useState","useState","_useState2","apps","setApps","_useState3","_useState4","discoverCards","setDiscoverCards","_useState5","_useState6","setFilters","_useState7","_useState8","setSelectedFilter","_useState9","_useState10","searchTerm","setSearchTerm","_useState11","_useState12","orgApps","setOrgApps","profileFlags","useRecoilValue","profileFlagsState","organization","organizationState","pageHeaderStyle","fontFamily","marginBottom","padding","fontWeight","borderBottom","borderLeft","borderRight","display","IS_ORGANIZATION_MEMBER","useEffect","axios","get","then","response","appCards","data","app","concat","published_uuid","categories","category","name","length","push","catch","error","_toConsumableArray","card","Set","flat","allCards","includes","toLowerCase","event","target","Typography","variant","marginTop","spacing","columns","sm","index","justifyContent","flexDirection","href","Card","height","maxHeight","cursor","className","elevation","WebkitBoxOrient","WebkitLineClamp","overflow","CardActions","owner_email","split","backgroundColor","window","location","protocol","host","minWidth","CardHeader","paddingBottom","CardContent","maxWidth","lineHeight","bottom","slice","tag","substr"],"sourceRoot":""}