{
  "language": "gl",
  "intents": {
    "HassTurnOff": {
      "data": [
        {
          "sentences": [
            "apaga <nome> <area>",
            "desactiva <nome> <area>"
          ]
        },
        {
          "sentences": [
            "apaga (a luz | as luces | luces) <area>",
            "apaga todas as luces <area>"
          ],
          "slots": {
            "domain": "light",
            "name": "all"
          }
        },
        {
          "sentences": [
            "pecha [a] porta do garaxe"
          ],
          "response": "cover_device_class",
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "pecha [a|as] <nome> [<area>]"
          ],
          "response": "cover_area",
          "slots": {
            "device_class": [
              "blind",
              "curtain",
              "shutter"
            ]
          },
          "requires_context": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "apaga [todos] [os] ventiladores <area>"
          ],
          "slots": {
            "domain": "fan",
            "name": "all"
          }
        }
      ]
    },
    "HassTurnOn": {
      "data": [
        {
          "sentences": [
            "<acende> ([a] luz | [as] luces) <area>",
            "<acende> todas as luces <area>"
          ],
          "slots": {
            "domain": "light"
          }
        },
        {
          "sentences": [
            "acende [todos] [os] ventiladores <area>"
          ],
          "slots": {
            "domain": "fan",
            "name": "all"
          }
        },
        {
          "sentences": [
            "acende <nome>",
            "activa <nome>"
          ]
        },
        {
          "sentences": [
            "abre [a] porta do garaxe"
          ],
          "response": "cover_device_class",
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "abre [a | as] (cortinas | persianas) <area>"
          ],
          "response": "cover_area",
          "slots": {
            "device_class": [
              "blind",
              "curtain",
              "shutter"
            ],
            "domain": "cover"
          }
        }
      ]
    },
    "HassNevermind": {
      "data": [
        {
          "sentences": [
            "esquéceo",
            "déixao [estar]",
            "cancela[r]",
            "nada",
            "nin caso",
            "non [me] fagas [nin] caso"
          ]
        }
      ]
    },
    "HassGetState": {
      "data": [
        {
          "sentences": [
            "<cal> é [o estado] [do|da] <nome> [<area>]",
            "en que estado <esta> <nome> [<area>]",
            "como <esta> <nome> [<area>]"
          ],
          "response": "one",
          "excludes_context": {
            "domain": [
              "scene",
              "script"
            ]
          }
        },
        {
          "sentences": [
            "[se] <esta> <nome> {on_off_states:state} [<area>]",
            "[se] <esta> <nome> [<area>] {on_off_states:state}"
          ],
          "response": "one_yesno",
          "excludes_context": {
            "domain": [
              "cover"
            ]
          }
        },
        {
          "sentences": [
            "[se] <esta> <algun> {on_off_domains:domain} {on_off_states:state} [<area>]"
          ],
          "response": "any"
        },
        {
          "sentences": [
            "[se] <todos> [os|as] {on_off_domains:domain} [<esta>] {on_off_states:state} [<area>]",
            "[se] están <todos> [os|as] {on_off_domains:domain} [<area>] {on_off_states:state}"
          ],
          "response": "all"
        },
        {
          "sentences": [
            "<cal> {on_off_domains:domain} <esta> {on_off_states:state} [<area>]"
          ],
          "response": "which"
        },
        {
          "sentences": [
            "(cantos|cantas) {on_off_domains:domain} <esta> {on_off_states:state} [<area>]"
          ],
          "response": "how_many"
        }
      ]
    }
  },
  "responses": {
    "errors": {
      "no_intent": "Síntoo, non che entendín",
      "no_area": "Non existe ningunha área chamada {{ area }}",
      "no_domain": "{{ area }} non ten {{ domain }}",
      "no_device_class": "{{ area }} non ten {{ device_class }}",
      "no_entity": "Non existe dispositivo ou entidade chamado {{ entity }}",
      "handle_error": "Un erro inesperado ocurreu intentando procesar a instrucción"
    },
    "intents": {
      "HassGetState": {
        "one": "{{ state.state_with_unit }}\n",
        "one_yesno": "{% if query.matched %}\n  Si\n{% else %}\n  Non, {{ state.state_with_unit }}\n{% endif %}\n",
        "any": "{% if query.matched %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    Si, {{ match[:3] | join(\", \") }} e {{ (match | length - 3) }} máis\n  {%- else -%}\n    Si,\n    {% for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} e {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% else %}\n  Non\n{% endif %}\n",
        "all": "{% if not query.unmatched: %}\n  Si\n{% else %}\n  {% set no_match = query.unmatched | map(attribute=\"name\") | sort | list %}\n  {% if no_match | length > 4 %}\n    Non, {{ no_match[:3] | join(\", \") }} e {{ (no_match | length - 3) }} máis non están {{ slots.state }}\n  {%- else -%}\n    Non,\n    {% for name in no_match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} e {% endif -%}\n      {{ name }}\n    {%- endfor %} non {% if no_match | length > 1 %}están{% else %}está{% endif %} {{ slots.state }}\n  {% endif %}\n{% endif %}\n",
        "which": "{% if not query.matched %}\n  (Ningunha|Ningún)\n{% else: %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    {{ match[:3] | join(\", \") }} e {{ (match | length - 3) }} máis\n  {% else %}\n    {%- for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} e {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% endif %}\n",
        "how_many": "{{ query.matched | length }}\n",
        "where": "{% if state == \"not_home\" %}\n  {{ slots.name | capitalize }} está fora\n{% else %}\n  {{ slots.name | capitalize }} está en {{ state.state }}\n{% endif %}\n"
      },
      "HassTurnOff": {
        "default": "Turned off {{ slots.name }}",
        "lights_area": "Turned off lights in {{ slots.area }}",
        "fans_area": "Turned off fans in {{ slots.area }}",
        "cover": "Closed {{ slots.name }}",
        "cover_area": "Closed {{ slots.area }}",
        "cover_device_class": "Closed {{ slots.device_class }}"
      },
      "HassTurnOn": {
        "default": "Turned on {{ slots.name }}",
        "lights_area": "Turned on lights in {{ slots.area }}",
        "fans_area": "Turned on fans in {{ slots.area }}",
        "cover": "Opened {{ slots.name }}",
        "cover_area": "Opened {{ slots.area }}",
        "cover_device_class": "Opened {{ slots.device_class }}"
      }
    }
  },
  "lists": {
    "color": {
      "values": [
        {
          "in": "blanco",
          "out": "white"
        },
        {
          "in": "negro",
          "out": "black"
        },
        {
          "in": "(vermello|vermella)",
          "out": "red"
        },
        {
          "in": "laranxa",
          "out": "orange"
        },
        {
          "in": "amarelo",
          "out": "yellow"
        },
        {
          "in": "verde",
          "out": "green"
        },
        {
          "in": "azul",
          "out": "blue"
        },
        {
          "in": "(lila|morado|púrpura)",
          "out": "purple"
        },
        {
          "in": "marrón",
          "out": "brown"
        }
      ]
    },
    "brightness": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "on_off_states": {
      "values": [
        {
          "in": "(acendido|acendida|acendidos|acendidas)",
          "out": "on"
        },
        {
          "in": "(apagado|apagada|apagados|apagadas)",
          "out": "off"
        }
      ]
    },
    "on_off_domains": {
      "values": [
        {
          "in": "(luz|luces|lámpada|lámpadas)",
          "out": "light"
        },
        {
          "in": "(ventilador|ventiladores)",
          "out": "fan"
        },
        {
          "in": "(interrutor|interrutores)",
          "out": "switch"
        }
      ]
    },
    "shopping_list_item": {
      "wildcard": true
    },
    "temperature": {
      "range": {
        "type": "temperature",
        "from": 0,
        "to": 100
      }
    },
    "temperature_unit": {
      "values": [
        "celsius",
        {
          "in": "c",
          "out": "celsius"
        },
        "fahrenheit",
        {
          "in": "f",
          "out": "fahrenheit"
        }
      ]
    }
  },
  "expansion_rules": {
    "nome": "[o | a | os | as] {name}",
    "algun": "(algún|algunha|algúns|algunhas)",
    "area": "[en | no | na | de | do | da] {area}",
    "brightness": "{brightness}[%| porcento]",
    "cal": "(que|cal|cales)",
    "esta": "(está|están|existe|existen|hai)",
    "acende": "(acende | activa)",
    "engadir": "(engada | engade)",
    "poñer": "(poña | pon | meta | mete)",
    "temp": "[a] (temperatura)",
    "temperature": "{temperature} [graos] [{temperature_unit}]",
    "todos": "(todos|todas|tódolos|tódalas)"
  },
  "skip_words": [
    "por favor",
    "gracias",
    "grazas",
    "graciñas",
    "podes",
    "podería",
    "poderías",
    "dime",
    "dígame"
  ]
}