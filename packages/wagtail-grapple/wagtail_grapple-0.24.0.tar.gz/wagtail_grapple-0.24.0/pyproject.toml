[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "wagtail-grapple"
authors = [
    {name = "Nathan Horrigan", email = "hello@torchbox.com"}
]
maintainers = [
    {name = "Dan Braghis", email = "dan.braghis@torchbox.com"}
]
description = "A Wagtail package that speeds up and simplifies implementing a GraphQL endpoint!"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["wagtail", "django", "graphql", "graphene", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Wagtail",
    "Framework :: Wagtail :: 4",
    "Framework :: Wagtail :: 5",
]
dynamic = ["version"]
requires-python = ">=3.8"
dependencies = [
    "Wagtail>=4.1",
    "graphene-django>=3,<4",
    "wagtail-headless-preview"
]

[project.optional-dependencies]
testing = [
    "coverage[toml]>=7.2.7,<8.0",
]

docs = [
    "Sphinx>=7.0,<8.0",
    "sphinx-wagtail-theme>=6.0,<7.0",
    "sphinxcontrib-spelling>=8.0,<9.0",
    "sphinx_copybutton>=0.5",
]

[project.urls]
Changelog = "https://github.com/torchbox/wagtail-grapple/blob/main/CHANGELOG.md"
Documentation = "https://wagtail-grapple.readthedocs.io/en/latest/"

[tool.flit.module]
name = "grapple"

[tool.flit.sdist]
include = ["LICENSE"]
exclude = [
    "docs/",
    "tests/",
    "CHANGELOG.md",
    "Dockerfile",
    "Makefile",
    ".*",
    "*.json",
    "*.ini",
    "*.yml",
    "*.yaml",
    "ruff.toml",
]

[tool.doc8]
ignore = ["D000", "D001"]
ignore_path = ["docs/build", "src", "tests", ".git", ".tox", ".venv", "venv"]

[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing", "thread"]

source = ["grapple"]

omit = ["**/migrations/*", "docs/*", "tests/*", "testapp/*"]

[tool.coverage.paths]
source = ["grapple", ".tox/py*/**/site-packages"]

[tool.coverage.report]
omit = ["**/migrations/*", "docs/*", "tests/*", "testapp/*"]
show_missing = true
ignore_errors = true
skip_empty = true
skip_covered = true
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc.)?abstractmethod",

    # Nor complain about type checking
    "if TYPE_CHECKING:",
]
