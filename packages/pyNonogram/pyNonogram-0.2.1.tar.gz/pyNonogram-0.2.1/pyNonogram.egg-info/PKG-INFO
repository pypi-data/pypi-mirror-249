Metadata-Version: 2.1
Name: pyNonogram
Version: 0.2.1
Summary: Description under construction
Home-page: https://github.com/Apsurt/pyNonogram
Author: Tymon Becella
Author-email: Tymon Becella <tymon@becella.eu>
License: MIT License
        
        Copyright (c) 2024 Tymon Becella
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/Apsurt/pyNonogram/
Project-URL: Issues, https://github.com/Apsurt/pyNonogram/issues
Keywords: nonogram,nonograms,griddlers,picross,pic-a-pix,paintbynumbers,puzzle,puzzles
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.19.5
Requires-Dist: pytest>=6.2.4

# pyNonogram

Framework for puzzle game *Nonogram*. It was made thinking about projects that aim to solve puzzles. I wanted to create comprehensive library that would take some work of nonogram developers' shoulders.

It is my first package thus, reporting issues and pull request are more than appreciated.

## Table of Contents

- [Installation](#installation)
- [Documentation](#documentation)
- [Usage](#usage)
    - [File extension](#file-extension-non)
    - [Code example](#code-example)
- [Contributing](#contributing)
- [License](#license)

## Installation

Install with [pip](https://pypi.org/project/pyNonogram/):

```
pip install pyNonogram
```

## Documentation

The documentation is available [here](https://apsurt.github.io/pyNonogram-docs/)

## Usage

### File extension (.non)

Example .non file:

```
author:Apsurt
date:31.12.23
picture:2
difficulty:2
width:5
height:5
rows:1 3 2,2 3 1 1
columns:1 3 2,3 3 1
solution:001000111011011011100010000100
```

Note that there is no space before nor after the colon. Separate row or column hints are separated by space character, whereas hints in the same row or column are separated with coma. For row hints in sequence are from left to right, for columns from top to bottom.

### Code example

```
from pyNonogram import Nonogram

my_nonogram = Nonogram()
my_nonogram.load("house.non")

my_nonogram.grid.fill_row(2, 1)

my_nonogram.print()
```

For more elaborate examples check out [GitHub](https://github.com/Apsurt/pyNonogram/tree/main/examples)

## Contributing

TBA

## License

This project is licensed under the [MIT License](LICENSE).
