{"version":3,"sources":["g2.tsx","index.tsx"],"names":["SEP","getDefaultTheme","theme","base","processJSString","options","includes","eval","replaceAll","Array","isArray","map","o","key","Object","prototype","hasOwnProperty","call","G2Component","props","args","style","_jsx","Chart","width","height","onInit","Streamlit","setFrameHeight","G2","withStreamlitConnection","ReactDOM","render","document","getElementById"],"mappings":"4JAAA,kkBASA,MAAMA,IAAM,iBAKZ,SAASC,gBAAgBC,GACvB,MAAuB,UAAX,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,MAAkB,OAAS,OAC3C,CAEA,SAASC,gBAAgBC,SACvB,GAAuB,kBAAZA,SAAwBA,QAAQC,SAASN,KAAM,OAAOO,KAAKF,QAAQG,WAAW,iBAAkB,KAC3G,GAAIC,MAAMC,QAAQL,SAChB,OAAOA,QAAQM,KAAKC,GAAMR,gBAAgBQ,KAE5C,GAAuB,kBAAZP,QAAsB,CAC/B,MAAMO,EAAI,IAAKP,SACf,IAAK,MAAMQ,KAAOR,QACZS,OAAOC,UAAUC,eAAeC,KAAKZ,QAASQ,KAChDD,EAAEC,GAAOT,gBAAgBC,QAAQQ,KAGrC,OAAOD,CACT,CACA,OAAOP,OACT,CAEA,MAAMa,YAAyCC,IAC7C,MAAM,MAAEjB,EAAK,KAAEkB,GAASD,GAClB,MAAEE,EAAK,QAAEhB,GAAYe,EAErBR,EAAIR,gBAAgBC,GAE1B,OACEiB,2DAACC,gDAAK,CACJF,MAAO,CAACG,MAAO,OAAQC,OAAQ,OAAQJ,GACvChB,QAAS,CAAEH,MAAOD,gBAAgBC,MAAWU,GAC7Cc,OAAQA,IAAMC,uDAAUC,kBACxB,EAIOC,GAAKC,+DAAwBZ,Y,kCClD1C,kDAIAa,IAASC,OAAOV,cAACO,IAAE,IAAKI,SAASC,eAAe,Q","file":"static/js/main.d02628f0.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Streamlit,\n  withStreamlitConnection,\n  ComponentProps,\n  Theme,\n} from 'streamlit-component-lib';\nimport { Chart } from '@berryv/g2-react';\n\nconst SEP = '!!-_-____-_-!!';\n\n/**\n * G2 Theme follow streamlit.\n */\nfunction getDefaultTheme(theme: Theme | undefined): 'dark' | 'light' {\n  return theme?.base === 'dark' ? 'dark' : 'light';\n}\n\nfunction processJSString(options: any): any {\n  if (typeof options === 'string' && options.includes(SEP)) return eval(options.replaceAll('!!-_-____-_-!!', ''));\n  if (Array.isArray(options)) {\n    return options.map((o) => processJSString(o));\n  }\n  if (typeof options === 'object') {\n    const o = { ...options };\n    for (const key in options) {\n      if (Object.prototype.hasOwnProperty.call(options, key)) {\n        o[key] = processJSString(options[key])\n      }\n    }\n    return o;\n  }\n  return options;\n}\n\nconst G2Component: React.FC<ComponentProps> = (props) => {\n  const { theme, args } = props;\n  const { style, options } = args;\n\n  const o = processJSString(options);\n\n  return (\n    <Chart\n      style={{width: '100%', height: 400, ...style}} \n      options={{ theme: getDefaultTheme(theme), ...o }}\n      onInit={() => Streamlit.setFrameHeight()}\n    />\n  )\n};\n\nexport const G2 = withStreamlitConnection(G2Component)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { G2 } from './g2';\n\nReactDOM.render(<G2 />, document.getElementById('root'))\n"],"sourceRoot":""}